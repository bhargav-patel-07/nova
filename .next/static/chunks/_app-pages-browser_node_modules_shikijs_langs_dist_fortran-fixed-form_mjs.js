"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_shikijs_langs_dist_fortran-fixed-form_mjs"],{

/***/ "(app-pages-browser)/./node_modules/@shikijs/langs/dist/fortran-fixed-form.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@shikijs/langs/dist/fortran-fixed-form.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _fortran_free_form_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fortran-free-form.mjs */ \"(app-pages-browser)/./node_modules/@shikijs/langs/dist/fortran-free-form.mjs\");\n\n\nconst lang = Object.freeze(JSON.parse(\"{\\\"displayName\\\":\\\"Fortran (Fixed Form)\\\",\\\"fileTypes\\\":[\\\"f\\\",\\\"F\\\",\\\"f77\\\",\\\"F77\\\",\\\"for\\\",\\\"FOR\\\"],\\\"injections\\\":{\\\"source.fortran.fixed - ( string | comment )\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#line-header\\\"},{\\\"include\\\":\\\"#line-end-comment\\\"}]}},\\\"name\\\":\\\"fortran-fixed-form\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#line-header\\\"},{\\\"include\\\":\\\"source.fortran.free\\\"}],\\\"repository\\\":{\\\"comments\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"^[*Cc]\\\",\\\"end\\\":\\\"\\\\\\\\n\\\",\\\"name\\\":\\\"comment.line.fortran\\\"},{\\\"begin\\\":\\\"^ *!\\\",\\\"end\\\":\\\"\\\\\\\\n\\\",\\\"name\\\":\\\"comment.line.fortran\\\"}]},\\\"line-end-comment\\\":{\\\"begin\\\":\\\"(?<=^.{72})(?!\\\\\\\\n)\\\",\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"comment.line-end.fortran\\\"},\\\"line-header\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"constant.numeric.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.line-continuation-operator.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"source.fortran.free\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.fortran\\\"}},\\\"match\\\":\\\"^(?!\\\\\\\\s*[!#])(?:([ \\\\\\\\d]{5} )|( {5}.)|(\\\\\\\\t)|(.{1,5}))\\\"}},\\\"scopeName\\\":\\\"source.fortran.fixed\\\",\\\"embeddedLangs\\\":[\\\"fortran-free-form\\\"],\\\"aliases\\\":[\\\"f\\\",\\\"for\\\",\\\"f77\\\"]}\"))\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([\n..._fortran_free_form_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\nlang\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2hpa2lqcy9sYW5ncy9kaXN0L2ZvcnRyYW4tZml4ZWQtZm9ybS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7O0FBRXZELHdDQUF3QyxxSEFBcUgsaURBQWlELGVBQWUsNkJBQTZCLEVBQUUsa0NBQWtDLEdBQUcsZ0RBQWdELDBCQUEwQixFQUFFLDZCQUE2QixFQUFFLG9DQUFvQyxrQkFBa0IsY0FBYyxlQUFlLHlFQUF5RSxFQUFFLHVFQUF1RSxFQUFFLHVCQUF1QixtQkFBbUIsR0FBRyx5RUFBeUUsa0JBQWtCLGNBQWMsT0FBTyxzQ0FBc0MsUUFBUSx3REFBd0QsUUFBUSxpQ0FBaUMsUUFBUSxvQ0FBb0MseUNBQXlDLEdBQUcsS0FBSyxFQUFFLGNBQWMsSUFBSSxNQUFNLHNIQUFzSDs7QUFFNW9DLGlFQUFlO0FBQ2YsR0FBRyw4REFBaUI7QUFDcEI7QUFDQSxDQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEJIQVJHQVZcXERvd25sb2Fkc1xcZ3B0LWNsb25lXFxub2RlX21vZHVsZXNcXEBzaGlraWpzXFxsYW5nc1xcZGlzdFxcZm9ydHJhbi1maXhlZC1mb3JtLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZm9ydHJhbl9mcmVlX2Zvcm0gZnJvbSAnLi9mb3J0cmFuLWZyZWUtZm9ybS5tanMnXG5cbmNvbnN0IGxhbmcgPSBPYmplY3QuZnJlZXplKEpTT04ucGFyc2UoXCJ7XFxcImRpc3BsYXlOYW1lXFxcIjpcXFwiRm9ydHJhbiAoRml4ZWQgRm9ybSlcXFwiLFxcXCJmaWxlVHlwZXNcXFwiOltcXFwiZlxcXCIsXFxcIkZcXFwiLFxcXCJmNzdcXFwiLFxcXCJGNzdcXFwiLFxcXCJmb3JcXFwiLFxcXCJGT1JcXFwiXSxcXFwiaW5qZWN0aW9uc1xcXCI6e1xcXCJzb3VyY2UuZm9ydHJhbi5maXhlZCAtICggc3RyaW5nIHwgY29tbWVudCApXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2xpbmUtaGVhZGVyXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2xpbmUtZW5kLWNvbW1lbnRcXFwifV19fSxcXFwibmFtZVxcXCI6XFxcImZvcnRyYW4tZml4ZWQtZm9ybVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2xpbmUtaGVhZGVyXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwic291cmNlLmZvcnRyYW4uZnJlZVxcXCJ9XSxcXFwicmVwb3NpdG9yeVxcXCI6e1xcXCJjb21tZW50c1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCJeWypDY11cXFwiLFxcXCJlbmRcXFwiOlxcXCJcXFxcXFxcXG5cXFwiLFxcXCJuYW1lXFxcIjpcXFwiY29tbWVudC5saW5lLmZvcnRyYW5cXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiXiAqIVxcXCIsXFxcImVuZFxcXCI6XFxcIlxcXFxcXFxcblxcXCIsXFxcIm5hbWVcXFwiOlxcXCJjb21tZW50LmxpbmUuZm9ydHJhblxcXCJ9XX0sXFxcImxpbmUtZW5kLWNvbW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoPzw9Xi57NzJ9KSg/IVxcXFxcXFxcbilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1cXFxcXFxcXG4pXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbW1lbnQubGluZS1lbmQuZm9ydHJhblxcXCJ9LFxcXCJsaW5lLWhlYWRlclxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5udW1lcmljLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvci5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcInNvdXJjZS5mb3J0cmFuLmZyZWVcXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiaW52YWxpZC5lcnJvci5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIl4oPyFcXFxcXFxcXHMqWyEjXSkoPzooWyBcXFxcXFxcXGRdezV9ICl8KCB7NX0uKXwoXFxcXFxcXFx0KXwoLnsxLDV9KSlcXFwifX0sXFxcInNjb3BlTmFtZVxcXCI6XFxcInNvdXJjZS5mb3J0cmFuLmZpeGVkXFxcIixcXFwiZW1iZWRkZWRMYW5nc1xcXCI6W1xcXCJmb3J0cmFuLWZyZWUtZm9ybVxcXCJdLFxcXCJhbGlhc2VzXFxcIjpbXFxcImZcXFwiLFxcXCJmb3JcXFwiLFxcXCJmNzdcXFwiXX1cIikpXG5cbmV4cG9ydCBkZWZhdWx0IFtcbi4uLmZvcnRyYW5fZnJlZV9mb3JtLFxubGFuZ1xuXVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@shikijs/langs/dist/fortran-fixed-form.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@shikijs/langs/dist/fortran-free-form.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@shikijs/langs/dist/fortran-free-form.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst lang = Object.freeze(JSON.parse(\"{\\\"displayName\\\":\\\"Fortran (Free Form)\\\",\\\"fileTypes\\\":[\\\"f90\\\",\\\"F90\\\",\\\"f95\\\",\\\"F95\\\",\\\"f03\\\",\\\"F03\\\",\\\"f08\\\",\\\"F08\\\",\\\"f18\\\",\\\"F18\\\",\\\"fpp\\\",\\\"FPP\\\",\\\".pf\\\",\\\".PF\\\"],\\\"firstLineMatch\\\":\\\"(?i)-\\\\\\\\*- mode: fortran free -\\\\\\\\*-\\\",\\\"injections\\\":{\\\"source.fortran.free - ( string | comment | meta.preprocessor )\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#line-continuation-operator\\\"},{\\\"include\\\":\\\"#preprocessor\\\"}]},\\\"string.quoted.double.fortran\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#string-line-continuation-operator\\\"}]},\\\"string.quoted.single.fortran\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#string-line-continuation-operator\\\"}]}},\\\"name\\\":\\\"fortran-free-form\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor\\\"},{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#include-statement\\\"},{\\\"include\\\":\\\"#import-statement\\\"},{\\\"include\\\":\\\"#block-data-definition\\\"},{\\\"include\\\":\\\"#function-definition\\\"},{\\\"include\\\":\\\"#module-definition\\\"},{\\\"include\\\":\\\"#program-definition\\\"},{\\\"include\\\":\\\"#submodule-definition\\\"},{\\\"include\\\":\\\"#subroutine-definition\\\"},{\\\"include\\\":\\\"#procedure-definition\\\"},{\\\"include\\\":\\\"#derived-type-definition\\\"},{\\\"include\\\":\\\"#enum-block-construct\\\"},{\\\"include\\\":\\\"#interface-block-constructs\\\"},{\\\"include\\\":\\\"#procedure-specification-statement\\\"},{\\\"include\\\":\\\"#type-specification-statements\\\"},{\\\"include\\\":\\\"#specification-statements\\\"},{\\\"include\\\":\\\"#control-constructs\\\"},{\\\"include\\\":\\\"#control-statements\\\"},{\\\"include\\\":\\\"#execution-statements\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#variable\\\"}],\\\"repository\\\":{\\\"IO-item-list\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\s*[\\\\\\\"'0-9a-z])\\\",\\\"contentName\\\":\\\"meta.name-list.fortran\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!);])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#brackets\\\"},{\\\"include\\\":\\\"#assignment-keyword\\\"},{\\\"include\\\":\\\"#operator-keyword\\\"},{\\\"include\\\":\\\"#variable\\\"}]},\\\"IO-keywords\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(?:(read)|(write))\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.generic-spec.read.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.generic-spec.write.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.generic-spec.formatted.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.generic-spec.unformatted.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(?:(formatted)|(unformatted))\\\\\\\\b\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},\\\"IO-statements\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(?:(backspace)|(close)|(endfile)|(format)|(inquire)|(open)|(read)|(rewind)|(write))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.backspace.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.close.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.control.endfile.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.control.format.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.control.inquire.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"keyword.control.open.fortran\\\"},\\\"7\\\":{\\\"name\\\":\\\"keyword.control.read.fortran\\\"},\\\"8\\\":{\\\"name\\\":\\\"keyword.control.rewind.fortran\\\"},\\\"9\\\":{\\\"name\\\":\\\"keyword.control.write.fortran\\\"},\\\"10\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.IO.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"},{\\\"include\\\":\\\"#IO-item-list\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.backspace.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.endfile.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.control.format.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.control.print.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.control.read.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"keyword.control.rewind.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(?:(backspace)|(endfile)|(format)|(print)|(read)|(rewind))\\\\\\\\b\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(?:(flush)|(wait))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.flush.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.wait.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.flush.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(flush)\\\\\\\\b\\\"}]},\\\"abstract-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.fortran.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(abstract)\\\\\\\\b\\\"},\\\"abstract-interface-block-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(abstract)\\\\\\\\s+(interface)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.attribute.fortran.modern\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.interface.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*interface)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endinterface.fortran.modern\\\"}},\\\"name\\\":\\\"meta.interface.abstract.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"access-attribute\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#private-attribute\\\"},{\\\"include\\\":\\\"#public-attribute\\\"}]},\\\"allocatable-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.allocatable.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(allocatable)\\\\\\\\b\\\"},\\\"allocate-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(allocate)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.allocate.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.allocate.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"arithmetic-operators\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.subtraction.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.operator.addition.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.operator.division.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.power.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.operator.multiplication.fortran\\\"}},\\\"match\\\":\\\"(-)|(\\\\\\\\+)|/(?![/=\\\\\\\\\\\\\\\\])|(\\\\\\\\*\\\\\\\\*)|(\\\\\\\\*)\\\"},\\\"array-constructor\\\":{\\\"begin\\\":\\\"(?=\\\\\\\\s*(\\\\\\\\[|\\\\\\\\(/))\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"name\\\":\\\"meta.contructor.array\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#brackets\\\"},{\\\"begin\\\":\\\"\\\\\\\\s*(\\\\\\\\(/)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.bracket.left.fortran\\\"}},\\\"end\\\":\\\"(/\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.bracket.left.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#variable\\\"}]}]},\\\"assign-statement\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(assign)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.assign.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.assign.fortran\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.to.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(to)\\\\\\\\b\\\"},{\\\"include\\\":\\\"$base\\\"}]}]},\\\"assignment-keyword\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(assignment)\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.generic-spec.assignment.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#assignment-operator\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},\\\"assignment-operator\\\":{\\\"match\\\":\\\"(?<![/<=>])(=)(?![=>])\\\",\\\"name\\\":\\\"keyword.operator.assignment.fortran\\\"},\\\"associate-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(associate)\\\\\\\\b(?=\\\\\\\\s*\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.associate.fortran\\\"}},\\\"contentName\\\":\\\"meta.block.associate.fortran\\\",\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*associate)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endassociate.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"asynchronous-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.asynchronous.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(asynchronous)\\\\\\\\b\\\"},\\\"attribute-specification-statement\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\b(?:allocatable|asynchronous|contiguous|external|intrinsic|optional|parameter|pointer|private|protected|public|save|target|value|volatile)\\\\\\\\b|(bind|dimension|intent)\\\\\\\\s*\\\\\\\\(|(codimension)\\\\\\\\s*\\\\\\\\[)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.attribute-specification.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#allocatable-attribute\\\"},{\\\"include\\\":\\\"#asynchronous-attribute\\\"},{\\\"include\\\":\\\"#codimension-attribute\\\"},{\\\"include\\\":\\\"#contiguous-attribute\\\"},{\\\"include\\\":\\\"#dimension-attribute\\\"},{\\\"include\\\":\\\"#external-attribute\\\"},{\\\"include\\\":\\\"#intent-attribute\\\"},{\\\"include\\\":\\\"#intrinsic-attribute\\\"},{\\\"include\\\":\\\"#language-binding-attribute\\\"},{\\\"include\\\":\\\"#optional-attribute\\\"},{\\\"include\\\":\\\"#parameter-attribute\\\"},{\\\"include\\\":\\\"#pointer-attribute\\\"},{\\\"include\\\":\\\"#protected-attribute\\\"},{\\\"include\\\":\\\"#save-attribute\\\"},{\\\"include\\\":\\\"#target-attribute\\\"},{\\\"include\\\":\\\"#value-attribute\\\"},{\\\"include\\\":\\\"#volatile-attribute\\\"},{\\\"begin\\\":\\\"(?=\\\\\\\\s*::)\\\",\\\"contentName\\\":\\\"meta.attribute-list.normal.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"#name-list\\\"}]},\\\"block-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(block)\\\\\\\\b(?!\\\\\\\\s*\\\\\\\\bdata\\\\\\\\b)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.associate.fortran\\\"}},\\\"contentName\\\":\\\"meta.block.block.fortran\\\",\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*block)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endassociate.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"block-data-definition\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(block\\\\\\\\s*data)\\\\\\\\b(?:\\\\\\\\s+([a-z]\\\\\\\\w*)\\\\\\\\b)?\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.block-data.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.block-data.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(?:(end\\\\\\\\s*block\\\\\\\\s*data)(?:\\\\\\\\s+(\\\\\\\\2))?|(end))\\\\\\\\b(?:\\\\\\\\s*(\\\\\\\\S((?!\\\\\\\\n).)*))?\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.end-block-data.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.block-data.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.control.end-block-data.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.block-data-definition.fortran\\\"}},\\\"name\\\":\\\"meta.block-data.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"brackets\\\":{\\\"begin\\\":\\\"\\\\\\\\s*(\\\\\\\\[)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.bracket.left.fortran\\\"}},\\\"end\\\":\\\"(])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.bracket.left.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#variable\\\"}]},\\\"call-statement\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(call)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.call.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.call.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*([a-z]\\\\\\\\w*)(%)([a-z]\\\\\\\\w*)\\\\\\\\b\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"variable.other.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.accessor.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"include\\\":\\\"#intrinsic-subroutines\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b(?=\\\\\\\\s*[\\\\\\\\n!;])\\\"},{\\\"include\\\":\\\"$base\\\"}]}]},\\\"character-type\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(character)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.character.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"contentName\\\":\\\"meta.type-spec.fortran\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.character.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.operator.multiplication.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"constant.numeric.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(character)\\\\\\\\b(?:\\\\\\\\s*(\\\\\\\\*)\\\\\\\\s*(\\\\\\\\d*))?\\\"}]},\\\"codimension-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(codimension)(?=\\\\\\\\s*\\\\\\\\[)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.codimension.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#brackets\\\"}]},\\\"comments\\\":{\\\"begin\\\":\\\"!\\\",\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"comment.line.fortran\\\"},\\\"common-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(common)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.common.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"concurrent-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(concurrent)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.while.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},\\\"constants\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#logical-constant\\\"},{\\\"include\\\":\\\"#numeric-constant\\\"},{\\\"include\\\":\\\"#string-constant\\\"}]},\\\"contiguous-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.contigous.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(contiguous)\\\\\\\\b\\\"},\\\"continue-statement\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(continue)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.continue.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.continue.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#invalid-character\\\"}]}]},\\\"control-constructs\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#named-control-constructs\\\"},{\\\"include\\\":\\\"#unnamed-control-constructs\\\"}]},\\\"control-statements\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#assign-statement\\\"},{\\\"include\\\":\\\"#call-statement\\\"},{\\\"include\\\":\\\"#continue-statement\\\"},{\\\"include\\\":\\\"#cycle-statement\\\"},{\\\"include\\\":\\\"#entry-statement\\\"},{\\\"include\\\":\\\"#error-stop-statement\\\"},{\\\"include\\\":\\\"#exit-statement\\\"},{\\\"include\\\":\\\"#goto-statement\\\"},{\\\"include\\\":\\\"#pause-statement\\\"},{\\\"include\\\":\\\"#return-statement\\\"},{\\\"include\\\":\\\"#stop-statement\\\"},{\\\"include\\\":\\\"#where-statement\\\"},{\\\"include\\\":\\\"#image-control-statement\\\"}]},\\\"cpp-numeric-constant\\\":{\\\"captures\\\":{\\\"0\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?=.)\\\",\\\"beginCaptures\\\":{},\\\"end\\\":\\\"$\\\",\\\"endCaptures\\\":{},\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.unit.hexadecimal.cpp\\\"},\\\"2\\\":{\\\"name\\\":\\\"constant.numeric.hexadecimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"3\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"4\\\":{\\\"name\\\":\\\"constant.numeric.hexadecimal.cpp\\\"},\\\"5\\\":{\\\"name\\\":\\\"constant.numeric.hexadecimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"6\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"7\\\":{\\\"name\\\":\\\"keyword.other.unit.exponent.hexadecimal.cpp\\\"},\\\"8\\\":{\\\"name\\\":\\\"keyword.operator.plus.exponent.hexadecimal.cpp\\\"},\\\"9\\\":{\\\"name\\\":\\\"keyword.operator.minus.exponent.hexadecimal.cpp\\\"},\\\"10\\\":{\\\"name\\\":\\\"constant.numeric.exponent.hexadecimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"11\\\":{\\\"name\\\":\\\"keyword.other.unit.suffix.floating-point.cpp\\\"},\\\"12\\\":{\\\"name\\\":\\\"keyword.other.unit.user-defined.cpp\\\"}},\\\"match\\\":\\\"\\\\\\\\G(0[Xx])(\\\\\\\\h(?:\\\\\\\\h|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)?((?<=\\\\\\\\h)\\\\\\\\.|\\\\\\\\.(?=\\\\\\\\h))(\\\\\\\\h(?:\\\\\\\\h|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)?(?:(?<!')([Pp])(\\\\\\\\+?)(-?)([0-9](?:[0-9]|(?<=\\\\\\\\h)'(?=\\\\\\\\h))*))?([FLfl](?!\\\\\\\\w))?((?:\\\\\\\\w(?<![Pp\\\\\\\\h])\\\\\\\\w*)?)$\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"constant.numeric.decimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"2\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"3\\\":{\\\"name\\\":\\\"constant.numeric.decimal.point.cpp\\\"},\\\"4\\\":{\\\"name\\\":\\\"constant.numeric.decimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"5\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"6\\\":{\\\"name\\\":\\\"keyword.other.unit.exponent.decimal.cpp\\\"},\\\"7\\\":{\\\"name\\\":\\\"keyword.operator.plus.exponent.decimal.cpp\\\"},\\\"8\\\":{\\\"name\\\":\\\"keyword.operator.minus.exponent.decimal.cpp\\\"},\\\"9\\\":{\\\"name\\\":\\\"constant.numeric.exponent.decimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"10\\\":{\\\"name\\\":\\\"keyword.other.unit.suffix.floating-point.cpp\\\"},\\\"11\\\":{\\\"name\\\":\\\"keyword.other.unit.user-defined.cpp\\\"}},\\\"match\\\":\\\"\\\\\\\\G(?=[.0-9])(?!0[BXbx])([0-9](?:[0-9]|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)?((?<=[0-9])\\\\\\\\.|\\\\\\\\.(?=[0-9]))([0-9](?:[0-9]|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)?(?:(?<!')([Ee])(\\\\\\\\+?)(-?)([0-9](?:[0-9]|(?<=\\\\\\\\h)'(?=\\\\\\\\h))*))?([FLfl](?!\\\\\\\\w))?((?:\\\\\\\\w(?<![0-9Ee])\\\\\\\\w*)?)$\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.unit.binary.cpp\\\"},\\\"2\\\":{\\\"name\\\":\\\"constant.numeric.binary.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"3\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.other.unit.suffix.integer.cpp\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.other.unit.user-defined.cpp\\\"}},\\\"match\\\":\\\"\\\\\\\\G(0[Bb])([01](?:[01]|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)((?:[Uu]|[Uu]ll?|[Uu]LL?|ll?[Uu]?|LL?[Uu]?|[Ff])(?!\\\\\\\\w))?((?:\\\\\\\\w(?<![0-9])\\\\\\\\w*)?)$\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.unit.octal.cpp\\\"},\\\"2\\\":{\\\"name\\\":\\\"constant.numeric.octal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"3\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.other.unit.suffix.integer.cpp\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.other.unit.user-defined.cpp\\\"}},\\\"match\\\":\\\"\\\\\\\\G(0)((?:[0-7]|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))+)((?:[Uu]|[Uu]ll?|[Uu]LL?|ll?[Uu]?|LL?[Uu]?|[Ff])(?!\\\\\\\\w))?((?:\\\\\\\\w(?<![0-9])\\\\\\\\w*)?)$\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.unit.hexadecimal.cpp\\\"},\\\"2\\\":{\\\"name\\\":\\\"constant.numeric.hexadecimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"3\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.other.unit.exponent.hexadecimal.cpp\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.operator.plus.exponent.hexadecimal.cpp\\\"},\\\"6\\\":{\\\"name\\\":\\\"keyword.operator.minus.exponent.hexadecimal.cpp\\\"},\\\"7\\\":{\\\"name\\\":\\\"constant.numeric.exponent.hexadecimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"8\\\":{\\\"name\\\":\\\"keyword.other.unit.suffix.integer.cpp\\\"},\\\"9\\\":{\\\"name\\\":\\\"keyword.other.unit.user-defined.cpp\\\"}},\\\"match\\\":\\\"\\\\\\\\G(0[Xx])(\\\\\\\\h(?:\\\\\\\\h|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)(?:(?<!')([Pp])(\\\\\\\\+?)(-?)([0-9](?:[0-9]|(?<=\\\\\\\\h)'(?=\\\\\\\\h))*))?((?:[Uu]|[Uu]ll?|[Uu]LL?|ll?[Uu]?|LL?[Uu]?|[Ff])(?!\\\\\\\\w))?((?:\\\\\\\\w(?<![Pp\\\\\\\\h])\\\\\\\\w*)?)$\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"constant.numeric.decimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"2\\\":{\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.unit.exponent.decimal.cpp\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.plus.exponent.decimal.cpp\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.operator.minus.exponent.decimal.cpp\\\"},\\\"6\\\":{\\\"name\\\":\\\"constant.numeric.exponent.decimal.cpp\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=\\\\\\\\h)'(?=\\\\\\\\h)\\\",\\\"name\\\":\\\"punctuation.separator.constant.numeric.cpp\\\"}]},\\\"7\\\":{\\\"name\\\":\\\"keyword.other.unit.suffix.integer.cpp\\\"},\\\"8\\\":{\\\"name\\\":\\\"keyword.other.unit.user-defined.cpp\\\"}},\\\"match\\\":\\\"\\\\\\\\G(?=[.0-9])(?!0[BXbx])([0-9](?:[0-9]|((?<=\\\\\\\\h)'(?=\\\\\\\\h)))*)(?:(?<!')([Ee])(\\\\\\\\+?)(-?)([0-9](?:[0-9]|(?<=\\\\\\\\h)'(?=\\\\\\\\h))*))?((?:[Uu]|[Uu]ll?|[Uu]LL?|ll?[Uu]?|LL?[Uu]?|[Ff])(?!\\\\\\\\w))?((?:\\\\\\\\w(?<![0-9Ee])\\\\\\\\w*)?)$\\\"},{\\\"match\\\":\\\"(?:['.0-9A-Z_a-z]|(?<=[EPep])[-+])+\\\",\\\"name\\\":\\\"invalid.illegal.constant.numeric.cpp\\\"}]}]}},\\\"match\\\":\\\"(?<!\\\\\\\\w)\\\\\\\\.?\\\\\\\\d(?:['.0-9A-Z_a-z]|(?<=[EPep])[-+])*\\\"},\\\"critical-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(critical)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.associate.fortran\\\"}},\\\"contentName\\\":\\\"meta.block.critical.fortran\\\",\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*critical)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endassociate.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"cycle-statement\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(cycle)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.cycle.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.fortran\\\",\\\"patterns\\\":[]}]},\\\"data-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(data)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.data.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"deallocate-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(deallocate)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.deallocate.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.deallocate.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"deferred-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.deferred.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(deferred)\\\\\\\\b\\\"},\\\"derived-type\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(?:(class)|(type))\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(([a-z]\\\\\\\\w*)|\\\\\\\\*)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.class.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"storage.type.type.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"entity.name.type.fortran\\\"}},\\\"contentName\\\":\\\"meta.type-spec.fortran\\\",\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.specification.type.derived.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"derived-type-component-attribute-specification\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\s*\\\\\\\\b(?:private|sequence)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.attribute-specification.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#sequence-attribute\\\"},{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"derived-type-component-parameter-specification\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.integer.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.attribute.derived-type.parameter.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"entity.name.derived-type.parameter.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(integer)\\\\\\\\s*(,)\\\\\\\\s*(kind|len)\\\\\\\\s*(?:(::)\\\\\\\\s*([a-z]\\\\\\\\w*)?)?\\\\\\\\s*(?=[\\\\\\\\n!;])\\\"},\\\"derived-type-component-procedure-specification\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\bprocedure\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.specification.procedure.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#procedure-type\\\"},{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::|\\\\\\\\())\\\",\\\"contentName\\\":\\\"meta.attribute-list.derived-type-component-procedure.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#pass-attribute\\\"},{\\\"include\\\":\\\"#nopass-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"},{\\\"include\\\":\\\"#pointer-attribute\\\"}]}]},{\\\"include\\\":\\\"#procedure-name-list\\\"}]},\\\"derived-type-component-type-specification\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\b(?:character|class|complex|double\\\\\\\\s*precision|double\\\\\\\\s*complex|integer|logical|real|type)\\\\\\\\b(?![^\\\\\\\\n!\\\\\\\"':;]*\\\\\\\\bfunction\\\\\\\\b))\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.specification.derived-type.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#types\\\"},{\\\"include\\\":\\\"#line-continuation-operator\\\"},{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::))\\\",\\\"contentName\\\":\\\"meta.attribute-list.derived-type-component-type.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#allocatable-attribute\\\"},{\\\"include\\\":\\\"#codimension-attribute\\\"},{\\\"include\\\":\\\"#contiguous-attribute\\\"},{\\\"include\\\":\\\"#dimension-attribute\\\"},{\\\"include\\\":\\\"#pointer-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"include\\\":\\\"#name-list\\\"}]},\\\"derived-type-contains-attribute-specification\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\bprivate\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.attribute-specification.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"derived-type-contains-final-procedure-specification\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(final)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.final-procedure.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.specification.procedure.final.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?=\\\\\\\\s*(::))\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"name\\\":\\\"meta.attribute-list.derived-type-contains-final-procedure.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"#procedure-name\\\"}]},\\\"derived-type-contains-generic-procedure-specification\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(generic)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.procedure.generic.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.specification.procedure.generic.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::|\\\\\\\\())\\\",\\\"contentName\\\":\\\"meta.attribute-list.derived-type-contains-generic-procedure.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)|^|(?<=&)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!\\\\\\\\&,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"begin\\\":\\\"(?=\\\\\\\\s*[a-z])\\\",\\\"contentName\\\":\\\"meta.name-list.fortran\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#IO-keywords\\\"},{\\\"include\\\":\\\"#assignment-keyword\\\"},{\\\"include\\\":\\\"#operator-keyword\\\"},{\\\"include\\\":\\\"#procedure-name\\\"},{\\\"include\\\":\\\"#pointer-operators\\\"}]}]},\\\"derived-type-contains-procedure-specification\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\bprocedure\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.specification.procedure.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#procedure-type\\\"},{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::|\\\\\\\\())\\\",\\\"contentName\\\":\\\"meta.attribute-list.derived-type-contains-procedure.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)|^|(?<=&)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!\\\\\\\\&,;])\\\",\\\"name\\\":\\\"meta.something.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#deferred-attribute\\\"},{\\\"include\\\":\\\"#non-overridable-attribute\\\"},{\\\"include\\\":\\\"#nopass-attribute\\\"},{\\\"include\\\":\\\"#pass-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"include\\\":\\\"#procedure-name-list\\\"}]},\\\"derived-type-definition\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(type)\\\\\\\\b(?!\\\\\\\\s*(\\\\\\\\(|is\\\\\\\\b|=))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.type.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.derived-type.definition.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G(?=\\\\\\\\s*(,|::))\\\",\\\"contentName\\\":\\\"meta.attribute-list.derived-type.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#abstract-attribute\\\"},{\\\"include\\\":\\\"#language-binding-attribute\\\"},{\\\"include\\\":\\\"#extends-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.type.fortran\\\"}},\\\"end\\\":\\\"(?i)(?:^|(?<=;))\\\\\\\\s*(end\\\\\\\\s*type)(?:\\\\\\\\s+(?:(\\\\\\\\1)|(\\\\\\\\w+)))?\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endtype.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.type.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"invalid.error.derived-type.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#dummy-variable-list\\\"},{\\\"include\\\":\\\"#comments\\\"},{\\\"begin\\\":\\\"(?i)^(?!\\\\\\\\s*\\\\\\\\b(?:contains|end\\\\\\\\s*type)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?i)^(?=\\\\\\\\s*\\\\\\\\b(?:contains|end\\\\\\\\s*type)\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.block.specification.derived-type.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#derived-type-component-attribute-specification\\\"},{\\\"include\\\":\\\"#derived-type-component-parameter-specification\\\"},{\\\"include\\\":\\\"#derived-type-component-procedure-specification\\\"},{\\\"include\\\":\\\"#derived-type-component-type-specification\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=\\\\\\\\s*end\\\\\\\\s*type\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#derived-type-contains-attribute-specification\\\"},{\\\"include\\\":\\\"#derived-type-contains-final-procedure-specification\\\"},{\\\"include\\\":\\\"#derived-type-contains-generic-procedure-specification\\\"},{\\\"include\\\":\\\"#derived-type-contains-procedure-specification\\\"}]}]}]},\\\"derived-type-operators\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.selector.fortran\\\"}},\\\"match\\\":\\\"\\\\\\\\s*(%)\\\"},\\\"dimension-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(dimension)(?=\\\\\\\\s*\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.dimension.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"do-construct\\\":{\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.enddo.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*do)\\\\\\\\b\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(do)\\\\\\\\s+(\\\\\\\\d{1,5})\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.do.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"constant.numeric.fortran\\\"}},\\\"end\\\":\\\"(?i)(?:^|(?<=;))(?=\\\\\\\\s*\\\\\\\\b\\\\\\\\2\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.do.labeled.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G(?:\\\\\\\\s*(,)|(?!\\\\\\\\s*[\\\\\\\\n!;]))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#concurrent-attribute\\\"},{\\\"include\\\":\\\"#while-attribute\\\"},{\\\"include\\\":\\\"$base\\\"}]},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(do)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.do.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(?:(continue)|(end\\\\\\\\s*do))\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.continue.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.enddo.fortran\\\"}},\\\"name\\\":\\\"meta.block.do.unlabeled.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G(?:\\\\\\\\s*(,)|(?!\\\\\\\\s*[\\\\\\\\n!;]))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.loop-control.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#concurrent-attribute\\\"},{\\\"include\\\":\\\"#while-attribute\\\"},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)(?!\\\\\\\\s*\\\\\\\\b(continue|end\\\\\\\\s*do)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\s*\\\\\\\\b(continue|end\\\\\\\\s*do)\\\\\\\\b)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]}]}]},\\\"dummy-variable\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"variable.parameter.fortran\\\"}},\\\"match\\\":\\\"(?i)(?:^|(?<=[\\\\\\\\&(,]))\\\\\\\\s*([a-z]\\\\\\\\w*)\\\"},\\\"dummy-variable-list\\\":{\\\"begin\\\":\\\"\\\\\\\\G\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.definition.parameters.begin.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\\)|(?=\\\\\\\\n)\\\",\\\"endCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.parameters.end.fortran\\\"}},\\\"name\\\":\\\"meta.dummy-variable-list\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#dummy-variable\\\"}]},\\\"elemental-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.elemental.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(elemental)\\\\\\\\b\\\"},\\\"entry-statement\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(entry)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.entry.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.entry.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.entry.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#dummy-variable-list\\\"},{\\\"include\\\":\\\"#result-statement\\\"},{\\\"include\\\":\\\"#language-binding-attribute\\\"}]}]}]},\\\"enum-block-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(enum)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.enum.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*enum)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.end-enum.fortran\\\"}},\\\"name\\\":\\\"meta.enum.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G\\\\\\\\s*(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#language-binding-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?i)(?!\\\\\\\\s*\\\\\\\\b(end\\\\\\\\s*enum)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\b(end\\\\\\\\s*enum)\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.block.specification.enum.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(enumerator)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.enumerator.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.enumerator-specification.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::))\\\",\\\"contentName\\\":\\\"meta.attribute-list.enum.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#name-list\\\"}]}]}]},\\\"equivalence-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(equivalence)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.common.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G|(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"puntuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]}]},\\\"error-stop-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(error\\\\\\\\s+stop)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.errorstop.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.errorstop.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#string-operators\\\"},{\\\"include\\\":\\\"#variable\\\"},{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"event-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(event (?:post|wait))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.event.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.event.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"execution-statements\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#allocate-statement\\\"},{\\\"include\\\":\\\"#deallocate-statement\\\"},{\\\"include\\\":\\\"#IO-statements\\\"},{\\\"include\\\":\\\"#nullify-statement\\\"}]},\\\"exit-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(exit)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.exit.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.exit.fortran\\\",\\\"patterns\\\":[]},\\\"explicit-interface-block-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(interface)\\\\\\\\b(?=\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.interface.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*interface)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endinterface.fortran.modern\\\"}},\\\"name\\\":\\\"meta.interface.explicit.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"extends-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(extends)\\\\\\\\s*\\\\\\\\(\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.extends.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\\)|(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"name\\\":\\\"entity.name.type.fortran\\\"}]},\\\"external-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.external.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(external)\\\\\\\\b\\\"},\\\"fail-image-statement\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.fail-image.fortran\\\"}},\\\"match\\\":\\\"\\\\\\\\b(fail image)\\\\\\\\b\\\",\\\"name\\\":\\\"meta.statement.fail-image.fortran\\\"},\\\"forall-construct\\\":{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)\\\\\\\\b(forall)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.forall.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G(?!\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"name\\\":\\\"meta.loop-control.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?<=\\\\\\\\))(?=\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*forall)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endforall.fortran\\\"}},\\\"name\\\":\\\"meta.block.forall.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)(?<=\\\\\\\\))(?!\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"\\\\\\\\n\\\",\\\"name\\\":\\\"meta.statement.control.forall.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]}]},\\\"form-team-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(form team)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.form-team.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.form-team.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"function-definition\\\":{\\\"begin\\\":\\\"(?i)(?=([^\\\\\\\\n!\\\\\\\"':;](?!\\\\\\\\bend)(?!\\\\\\\\bsubroutine\\\\\\\\b))*\\\\\\\\bfunction\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.function.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\G\\\\\\\\s*(?!\\\\\\\\bfunction\\\\\\\\b))\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bfunction\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.attribute-list.function.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#elemental-attribute\\\"},{\\\"include\\\":\\\"#module-attribute\\\"},{\\\"include\\\":\\\"#pure-attribute\\\"},{\\\"include\\\":\\\"#recursive-attribute\\\"},{\\\"include\\\":\\\"#types\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(function)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.function.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(?:(end\\\\\\\\s*function)(?:\\\\\\\\s+([_a-z]\\\\\\\\w*))?|(end))\\\\\\\\b\\\\\\\\s*([^\\\\\\\\n!;]+)?(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.endfunction.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.function.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.endfunction.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.function.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G(?!\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.function.first-line.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#dummy-variable-list\\\"},{\\\"include\\\":\\\"#result-statement\\\"},{\\\"include\\\":\\\"#language-binding-attribute\\\"}]},{\\\"begin\\\":\\\"(?i)(?!\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*function\\\\\\\\b))\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*function\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.specification.function.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=end(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*function\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},{\\\"include\\\":\\\"$base\\\"}]}]}]}]},\\\"generic-interface-block-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(interface)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.interface.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.interface.generic.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(assignment)\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(?:(=)|(\\\\\\\\S.*))\\\\\\\\s*(\\\\\\\\))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.assignment.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.operator.assignment.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.generic-interface.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*interface)\\\\\\\\b(?:\\\\\\\\s*\\\\\\\\b(\\\\\\\\1)\\\\\\\\b\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(?:(\\\\\\\\3)|(\\\\\\\\S.*))\\\\\\\\s*(\\\\\\\\)))?\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endinterface.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.other.assignment.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.assignment.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"invalid.error.generic-interface-end.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#interface-procedure-statement\\\"},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(operator)\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(?:(\\\\\\\\.[a-z]+\\\\\\\\.|==|/=|>=|[<>]|<=|[-+/]|//|\\\\\\\\*\\\\\\\\*?)|(\\\\\\\\S.*))\\\\\\\\s*(\\\\\\\\))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.operator.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.operator.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.generic-interface-block-op.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*interface)\\\\\\\\b(?:\\\\\\\\s*\\\\\\\\b(\\\\\\\\1)\\\\\\\\b\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(?:(\\\\\\\\3)|(\\\\\\\\S.*))\\\\\\\\s*(\\\\\\\\)))?\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endinterface.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.other.operator.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"invalid.error.generic-interface-block-op-end.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#interface-procedure-statement\\\"},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(?:(read)|(write))\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(?:(formatted)|(unformatted)|(\\\\\\\\S.*))\\\\\\\\s*(\\\\\\\\))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.read.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.other.write.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.other.formatted.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.other.unformatted.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"invalid.error.generic-interface-block.fortran\\\"},\\\"7\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*interface)\\\\\\\\b(?:\\\\\\\\s*\\\\\\\\b(?:(\\\\\\\\2)|(\\\\\\\\3))\\\\\\\\b\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(?:(\\\\\\\\4)|(\\\\\\\\5)|(\\\\\\\\S.*))\\\\\\\\s*(\\\\\\\\)))?\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endinterface.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.other.read.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.write.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.other.formatted.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"keyword.other.unformatted.fortran\\\"},\\\"7\\\":{\\\"name\\\":\\\"invalid.error.generic-interface-block-end.fortran\\\"},\\\"8\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#interface-procedure-statement\\\"},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*interface)\\\\\\\\b(?:\\\\\\\\s*\\\\\\\\b(\\\\\\\\1)\\\\\\\\b)?\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endinterface.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.function.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#interface-procedure-statement\\\"},{\\\"include\\\":\\\"$base\\\"}]}]},\\\"goto-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(go\\\\\\\\s*to)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.goto.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.goto.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"if-construct\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(if)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.if.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#logical-control-expression\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(then)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.then.fortran\\\"}},\\\"contentName\\\":\\\"meta.block.if.fortran\\\",\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*if)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endif.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(else\\\\\\\\s*if)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.elseif.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.then.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"meta.label.elseif.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(then)\\\\\\\\b(\\\\\\\\s*[a-z]\\\\\\\\w*)?\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(else)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.else.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=\\\\\\\\b(end\\\\\\\\s*if)\\\\\\\\b)\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?!(\\\\\\\\s*([\\\\\\\\n!;])))\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"meta.label.else.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"invalid.error.label.else.fortran\\\"}},\\\"match\\\":\\\"\\\\\\\\s*([a-z]\\\\\\\\w*)?\\\\\\\\s*\\\\\\\\b(\\\\\\\\w*)\\\\\\\\b\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?i)(?!\\\\\\\\b(end\\\\\\\\s*if)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\b(end\\\\\\\\s*if)\\\\\\\\b)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]}]},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\s*[a-z])\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.if.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]}]}]},\\\"image-control-statement\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#sync-all-statement\\\"},{\\\"include\\\":\\\"#sync-statement\\\"},{\\\"include\\\":\\\"#event-statement\\\"},{\\\"include\\\":\\\"#form-team-statement\\\"},{\\\"include\\\":\\\"#fail-image-statement\\\"}]},\\\"implicit-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(implicit)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.implicit.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.implicit.fortran\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.none.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(none)\\\\\\\\b\\\"},{\\\"include\\\":\\\"$base\\\"}]},\\\"import-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(import)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.include.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.include.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*(?:(::)|(?=[a-z]))\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#name-list\\\"}]},{\\\"begin\\\":\\\"\\\\\\\\G\\\\\\\\s*(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.all.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(all)\\\\\\\\b\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.none.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(none)\\\\\\\\b\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(only)\\\\\\\\s*(:)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.only.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.other.colon.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#name-list\\\"}]},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},\\\"include-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(include)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.include.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.include.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#string-constant\\\"},{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"intent-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(intent)\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.intent.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.intent.in-out.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"storage.modifier.intent.in.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"storage.modifier.intent.out.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(?:(in\\\\\\\\s*out)|(in)|(out))\\\\\\\\b\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},\\\"interface-block-constructs\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#abstract-interface-block-construct\\\"},{\\\"include\\\":\\\"#explicit-interface-block-construct\\\"},{\\\"include\\\":\\\"#generic-interface-block-construct\\\"}]},\\\"interface-procedure-statement\\\":{\\\"begin\\\":\\\"(?i)(?=[^\\\\\\\\n!\\\\\\\"';]*\\\\\\\\bprocedure\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.procedure.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\G\\\\\\\\s*(?!\\\\\\\\bprocedure\\\\\\\\b))\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bprocedure\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.attribute-list.interface.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#module-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(procedure)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.procedure.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"match\\\":\\\"\\\\\\\\G\\\\\\\\s*(::)\\\"},{\\\"include\\\":\\\"#procedure-name-list\\\"}]}]},\\\"intrinsic-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.intrinsic.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(intrinsic)\\\\\\\\b\\\"},\\\"intrinsic-functions\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(acosh|asinh|atanh|bge|bgt|ble|blt|dshiftl|dshiftr|findloc|hypot|iall|iany|image_index|iparity|is_contiguous|lcobound|leadz|mask[lr]|merge_bits|norm2|num_images|parity|popcnt|poppar|shift[alr]|storage_size|this_image|trailz|ucobound)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(bessel_[jy][01n]|erf(c(_scaled)?)?|gamma|log_gamma)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(command_argument_count|extends_type_of|is_iostat_end|is_iostat_eor|new_line|same_type_as|selected_char_kind)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(ieee_(class|copy_sign|is_(finite|nan|negative|normal)|logb|next_after|rem|rint|scalb|selected_real_kind|support_(datatype|denormal|divide|inf|io|nan|rounding|sqrt|standard|underflow_control)|unordered|value))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(ieee_support_(flag|halting))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(c_(associated|funloc|loc|sizeof))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(compiler_(options|version))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(null)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(achar|adjustl|adjustr|all|allocated|associated|any|bit_size|btest|ceiling|count|cshift|digits|dot_product|eoshift|epsilon|exponent|floor|fraction|huge|iachar|iand|ibclr|ibits|ibset|ieor|ior|ishftc?|kind|lbound|len_trim|logical|matmul|maxexponent|maxloc|maxval|merge|minexponent|minloc|minval|modulo|nearest|not|pack|precision|present|product|radix|range|repeat|reshape|rrspacing|scale|scan|selected_(int|real)_kind|set_exponent|shape|size|spacing|spread|sum|tiny|transfer|transpose|trim|ubound|unpack|verify)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\b([cdi]?abs|acos|[ad]int|[ad]nint|aimag|amax[01]|amin[01]|d?asin|d?atan|d?atan2|char|conjg|[cd]?cos|d?cosh|cmplx|dble|i?dim|dmax1|dmin1|dprod|[cd]?exp|float|ichar|idint|ifix|index|int|len|lge|lgt|lle|llt|[acd]?log|[ad]?log10|max[01]?|min[01]?|[ad]?mod|(id)?nint|real|[di]?sign|[cd]?sin|d?sinh|sngl|[cd]?sqrt|d?tan|d?tanh)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"support.function.intrinsic.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]}]},\\\"intrinsic-subroutines\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(date_and_time|mvbits|random_number|random_seed|system_clock)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(cpu_time)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(ieee_([gs]et)_(rounding|underflow)_mode)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(ieee_([gs]et)_(flag|halting_mode|status))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(c_f_(p(?:|rocp)ointer))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(execute_command_line|get_command|get_command_argument|get_environment_variable|move_alloc)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]}]},\\\"invalid-character\\\":{\\\"match\\\":\\\"(?i)[^\\\\\\\\n!;\\\\\\\\s]+\\\",\\\"name\\\":\\\"invalid.error.character.fortran\\\"},\\\"invalid-word\\\":{\\\"match\\\":\\\"(?i)\\\\\\\\b\\\\\\\\w+\\\\\\\\b\\\",\\\"name\\\":\\\"invalid.error.word.fortran\\\"},\\\"language-binding-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(bind)\\\\\\\\s*\\\\\\\\(\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.bind.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\\)|(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"(?i)\\\\\\\\b(c)\\\\\\\\b\\\",\\\"name\\\":\\\"variable.parameter.fortran\\\"},{\\\"include\\\":\\\"#dummy-variable\\\"},{\\\"include\\\":\\\"$base\\\"}]},\\\"line-continuation-operator\\\":{\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.line-continuation.fortran\\\"}},\\\"match\\\":\\\"(?:^|(?<=;))\\\\\\\\s*(&)\\\"},{\\\"begin\\\":\\\"\\\\\\\\s*(&)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.line-continuation.fortran\\\"}},\\\"contentName\\\":\\\"meta.line-continuation.fortran\\\",\\\"end\\\":\\\"(?i)^(?:\\\\\\\\s*(&))?\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.line-continuation.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"match\\\":\\\"\\\\\\\\S[^!]*\\\",\\\"name\\\":\\\"invalid.error.line-cont.fortran\\\"}]}]},\\\"logical-constant\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"constant.language.logical.false.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"constant.language.logical.true.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*(?:(\\\\\\\\.false\\\\\\\\.)|(\\\\\\\\.true\\\\\\\\.))\\\"},\\\"logical-control-expression\\\":{\\\"begin\\\":\\\"\\\\\\\\G(?=\\\\\\\\s*\\\\\\\\()\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"name\\\":\\\"meta.expression.control.logical.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"}]},\\\"logical-operators\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"(?i)(\\\\\\\\s*\\\\\\\\.(and|eqv??|le|lt|ge|gt|ne|neqv|not|or)\\\\\\\\.)\\\",\\\"name\\\":\\\"keyword.logical.fortran\\\"},{\\\"match\\\":\\\"(==|/=|>=|(?<!=)>|<=?)\\\",\\\"name\\\":\\\"keyword.logical.fortran.modern\\\"}]},\\\"logical-type\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(logical)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.logical.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"contentName\\\":\\\"meta.type-spec.fortran\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.character.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.operator.multiplication.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"constant.numeric.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(logical)\\\\\\\\b(?:\\\\\\\\s*(\\\\\\\\*)\\\\\\\\s*(\\\\\\\\d*))?\\\"}]},\\\"module-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.module.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(module)\\\\\\\\b(?=\\\\\\\\s*(?:[\\\\\\\\n!;]|[^\\\\\\\\n!\\\\\\\"';]*\\\\\\\\b(?:function|procedure|subroutine)\\\\\\\\b))\\\"},\\\"module-definition\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\b(module)\\\\\\\\b)(?![^\\\\\\\\n!\\\\\\\"';]*\\\\\\\\b(?:function|procedure|subroutine)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.module.fortran\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.program.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(module)\\\\\\\\b\\\"},{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.class.module.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(?:(end\\\\\\\\s*module)(?:\\\\\\\\s+([_a-z]\\\\\\\\w*))?|(end))\\\\\\\\b\\\\\\\\s*([^\\\\\\\\n!;]+)?(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.endmodule.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.class.module.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.endmodule.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.module-definition.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*module\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.specification.module.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=\\\\\\\\s*end(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*module\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},{\\\"include\\\":\\\"$base\\\"}]}]}]},\\\"name-list\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\s*[a-z])\\\",\\\"contentName\\\":\\\"meta.name-list.fortran\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!);])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#brackets\\\"},{\\\"include\\\":\\\"#assignment-keyword\\\"},{\\\"include\\\":\\\"#operator-keyword\\\"},{\\\"include\\\":\\\"#variable\\\"}]},\\\"named-control-constructs\\\":{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)([a-z]\\\\\\\\w*)\\\\\\\\s*(:)(?=\\\\\\\\s*(?:associate|block(?!\\\\\\\\s*data)|critical|do|forall|if|select\\\\\\\\s*case|select\\\\\\\\s*type|select\\\\\\\\s*rank|where)\\\\\\\\b)\\\",\\\"contentName\\\":\\\"meta.named-construct.fortran.modern\\\",\\\"end\\\":\\\"(?i)(?!\\\\\\\\s*\\\\\\\\b(?:associate|block(?!\\\\\\\\s*data)|critical|do|forall|if|select\\\\\\\\s*case|select\\\\\\\\s*type|select\\\\\\\\s*rank|where)\\\\\\\\b)(?:\\\\\\\\b(\\\\\\\\1)\\\\\\\\b)?([^\\\\\\\\n!;\\\\\\\\s]*?)?(?=\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"meta.label.end.name.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"invalid.error.named-control-constructs.fortran.modern\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#unnamed-control-constructs\\\"}]},\\\"namelist-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(namelist)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.namelist.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},\\\"non-intrinsic-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.non-intrinsic.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(non_intrinsic)\\\\\\\\b\\\"},\\\"non-overridable-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.non-overridable.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(non_overridable)\\\\\\\\b\\\"},\\\"nopass-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.nopass.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(nopass)\\\\\\\\b\\\"},\\\"nullify-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(nullify)\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.nullify.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.nullify.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"numeric-constant\\\":{\\\"match\\\":\\\"(?i)[-+]?(\\\\\\\\b\\\\\\\\d+\\\\\\\\.?\\\\\\\\d*|\\\\\\\\.\\\\\\\\d+)(_\\\\\\\\w+|d[-+]?\\\\\\\\d+|e[-+]?\\\\\\\\d+(_\\\\\\\\w+)?)?(?![_a-z])\\\",\\\"name\\\":\\\"constant.numeric.fortran\\\"},\\\"numeric-type\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(?:(complex)|(double\\\\\\\\s*precision)|(double\\\\\\\\s*complex)|(integer)|(real))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.complex.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"storage.type.double.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"storage.type.doublecomplex.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"storage.type.integer.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"storage.type.real.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"contentName\\\":\\\"meta.type-spec.fortran\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.complex.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"storage.type.double.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"storage.type.doublecomplex.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"storage.type.integer.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"storage.type.real.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"storage.type.dimension.fortran\\\"},\\\"7\\\":{\\\"name\\\":\\\"keyword.operator.multiplication.fortran\\\"},\\\"8\\\":{\\\"name\\\":\\\"constant.numeric.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(?:(complex)|(double\\\\\\\\s*precision)|(double\\\\\\\\s*complex)|(integer)|(real)|(dimension))\\\\\\\\b(?:\\\\\\\\s*(\\\\\\\\*)\\\\\\\\s*(\\\\\\\\d*))?\\\"}]},\\\"operator-keyword\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(operator)\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.generic-spec.operator.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#arithmetic-operators\\\"},{\\\"include\\\":\\\"#logical-operators\\\"},{\\\"include\\\":\\\"#user-defined-operators\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},\\\"operators\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#arithmetic-operators\\\"},{\\\"include\\\":\\\"#assignment-operator\\\"},{\\\"include\\\":\\\"#derived-type-operators\\\"},{\\\"include\\\":\\\"#logical-operators\\\"},{\\\"include\\\":\\\"#pointer-operators\\\"},{\\\"include\\\":\\\"#string-operators\\\"},{\\\"include\\\":\\\"#user-defined-operators\\\"}]},\\\"optional-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.optional.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(optional)\\\\\\\\b\\\"},\\\"parameter-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.parameter.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(parameter)\\\\\\\\b\\\"},\\\"parentheses\\\":{\\\"begin\\\":\\\"\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#variable\\\"}]},\\\"parentheses-dummy-variables\\\":{\\\"begin\\\":\\\"\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#procedure-call-dummy-variable\\\"},{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#operators\\\"},{\\\"include\\\":\\\"#array-constructor\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#intrinsic-functions\\\"},{\\\"include\\\":\\\"#variable\\\"}]},\\\"pass-attribute\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(pass)\\\\\\\\s*\\\\\\\\(\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.pass.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\\)|(?=\\\\\\\\n)\\\",\\\"patterns\\\":[]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.pass.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(pass)\\\\\\\\b\\\"}]},\\\"pause-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(pause)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.pause.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.pause.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"pointer-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.pointer.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(pointer)\\\\\\\\b\\\"},\\\"pointer-operators\\\":{\\\"match\\\":\\\"(=>)\\\",\\\"name\\\":\\\"keyword.other.point.fortran\\\"},\\\"preprocessor\\\":{\\\"begin\\\":\\\"^\\\\\\\\s*(#:?)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.indicator.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\\n\\\",\\\"name\\\":\\\"meta.preprocessor\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-if-construct\\\"},{\\\"include\\\":\\\"#preprocessor-statements\\\"}]},\\\"preprocessor-arithmetic-operators\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.subtraction.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.operator.addition.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.operator.division.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.multiplication.fortran\\\"}},\\\"match\\\":\\\"(-)|(\\\\\\\\+)|(/)|(\\\\\\\\*)\\\"},\\\"preprocessor-assignment-operator\\\":{\\\"match\\\":\\\"(?<!=)(=)(?!=)\\\",\\\"name\\\":\\\"keyword.operator.assignment.preprocessor.fortran\\\"},\\\"preprocessor-comments\\\":{\\\"begin\\\":\\\"/\\\\\\\\*\\\",\\\"end\\\":\\\"\\\\\\\\*/\\\",\\\"name\\\":\\\"comment.preprocessor\\\"},\\\"preprocessor-constants\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#cpp-numeric-constant\\\"},{\\\"include\\\":\\\"#preprocessor-string-constant\\\"}]},\\\"preprocessor-define-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(define)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.define.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"meta.preprocessor.macro.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#preprocessor-constants\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},\\\"preprocessor-defined-function\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.defined.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(defined)\\\\\\\\b\\\"},\\\"preprocessor-error-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*(error)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.error.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"meta.preprocessor.macro.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#preprocessor-string-constant\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},\\\"preprocessor-if-construct\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(if)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.if.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"meta.preprocessor.conditional.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#cpp-numeric-constant\\\"},{\\\"include\\\":\\\"#preprocessor-logical-operators\\\"},{\\\"include\\\":\\\"#preprocessor-arithmetic-operators\\\"},{\\\"include\\\":\\\"#preprocessor-defined-function\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(ifdef)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.ifdef.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#cpp-numeric-constant\\\"},{\\\"include\\\":\\\"#preprocessor-logical-operators\\\"},{\\\"include\\\":\\\"#preprocessor-arithmetic-operators\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(ifndef)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.ifndef.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#cpp-numeric-constant\\\"},{\\\"include\\\":\\\"#preprocessor-logical-operators\\\"},{\\\"include\\\":\\\"#preprocessor-arithmetic-operators\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(else)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.else.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#cpp-numeric-constant\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(elif)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.elif.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#cpp-numeric-constant\\\"},{\\\"include\\\":\\\"#preprocessor-logical-operators\\\"},{\\\"include\\\":\\\"#preprocessor-arithmetic-operators\\\"},{\\\"include\\\":\\\"#preprocessor-defined-function\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(endif)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.endif.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"}]}]},\\\"preprocessor-include-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*(include)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.include.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"meta.preprocessor.include.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#preprocessor-string-constant\\\"},{\\\"begin\\\":\\\"<\\\",\\\"beginCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.begin.preprocessor.fortran\\\"}},\\\"end\\\":\\\">\\\",\\\"endCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.end.preprocessor.fortran\\\"}},\\\"name\\\":\\\"string.quoted.other.lt-gt.include.preprocessor.fortran\\\"},{\\\"include\\\":\\\"#line-continuation-operator\\\"}]},\\\"preprocessor-line-continuation-operator\\\":{\\\"begin\\\":\\\"\\\\\\\\s*(\\\\\\\\\\\\\\\\)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"constant.character.escape.line-continuation.preprocessor.fortran\\\"}},\\\"end\\\":\\\"(?i)^\\\"},\\\"preprocessor-logical-operators\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.and.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.equals.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.not_equals.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.or.fortran\\\"},\\\"5\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.less_eq.fortran\\\"},\\\"6\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.more_eq.fortran\\\"},\\\"7\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.less.fortran\\\"},\\\"8\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.more.fortran\\\"},\\\"9\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.complementary.fortran\\\"},\\\"10\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.xor.fortran\\\"},\\\"11\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.bitand.fortran\\\"},\\\"12\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.not.fortran\\\"},\\\"13\\\":{\\\"name\\\":\\\"keyword.operator.logical.preprocessor.bitor.fortran\\\"}},\\\"match\\\":\\\"(&&)|(==)|(!=)|(\\\\\\\\|\\\\\\\\|)|(<=)|(>=)|(<)|(>)|(~)|(\\\\\\\\^)|(&)|(!)|(\\\\\\\\|)\\\",\\\"name\\\":\\\"keyword.operator.logical.preprocessor.fortran\\\"},\\\"preprocessor-operators\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"},{\\\"include\\\":\\\"#preprocessor-logical-operators\\\"},{\\\"include\\\":\\\"#preprocessor-arithmetic-operators\\\"}]},\\\"preprocessor-pragma-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(pragma)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.pragma.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"meta.preprocessor.pragma.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#preprocessor-string-constant\\\"}]},\\\"preprocessor-statements\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-define-statement\\\"},{\\\"include\\\":\\\"#preprocessor-error-statement\\\"},{\\\"include\\\":\\\"#preprocessor-include-statement\\\"},{\\\"include\\\":\\\"#preprocessor-preprocessor-pragma-statement\\\"},{\\\"include\\\":\\\"#preprocessor-undefine-statement\\\"}]},\\\"preprocessor-string-constant\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\"\\\",\\\"beginCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.begin.preprocessor.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\"\\\",\\\"endCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.end.preprocessor.fortran\\\"}},\\\"name\\\":\\\"string.quoted.double.include.preprocessor.fortran\\\"},{\\\"begin\\\":\\\"'\\\",\\\"beginCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.begin.preprocessor.fortran\\\"}},\\\"end\\\":\\\"'\\\",\\\"endCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.end.preprocessor.fortran\\\"}},\\\"name\\\":\\\"string.quoted.single.include.preprocessor.fortran\\\"}]},\\\"preprocessor-undefine-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(undef)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.preprocessor.undef.fortran\\\"}},\\\"end\\\":\\\"(?=\\\\\\\\n)\\\",\\\"name\\\":\\\"meta.preprocessor.undef.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#preprocessor-comments\\\"},{\\\"include\\\":\\\"#preprocessor-line-continuation-operator\\\"}]},\\\"private-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.private.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(private)\\\\\\\\b\\\"},\\\"procedure-call-dummy-variable\\\":{\\\"match\\\":\\\"(?i)\\\\\\\\s*([a-z]\\\\\\\\w*)(?=\\\\\\\\s*=)(?!\\\\\\\\s*==)\\\",\\\"name\\\":\\\"variable.parameter.dummy-variable.fortran.modern\\\"},\\\"procedure-definition\\\":{\\\"begin\\\":\\\"(?i)(?=[^\\\\\\\\n!\\\\\\\"';]*\\\\\\\\bmodule\\\\\\\\s+procedure\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.procedure.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(module\\\\\\\\s+procedure)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.procedure.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.procedure.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(?:(end\\\\\\\\s*procedure)(?:\\\\\\\\s+([_a-z]\\\\\\\\w*))?|(end))\\\\\\\\b\\\\\\\\s*([^\\\\\\\\n!;]+)?(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.endprocedure.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.function.procedure.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.endprocedure.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.procedure-definition.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G(?!\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.first-line.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#invalid-character\\\"}]},{\\\"begin\\\":\\\"(?i)(?!\\\\\\\\s*(?:contains\\\\\\\\b|end\\\\\\\\s*[\\\\\\\\n!;]|end\\\\\\\\s*procedure\\\\\\\\b))\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\s*(?:contains\\\\\\\\b|end\\\\\\\\s*[\\\\\\\\n!;]|end\\\\\\\\s*procedure\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.specification.procedure.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$self\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\s*(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=\\\\\\\\s*end(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*procedure\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$self\\\"}]}]}]}]},\\\"procedure-name\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.procedure.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\"},\\\"procedure-name-list\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\s*[a-z])\\\",\\\"contentName\\\":\\\"meta.name-list.fortran\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?!\\\\\\\\s*\\\\\\\\n)\\\",\\\"end\\\":\\\"(,)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#procedure-name\\\"},{\\\"include\\\":\\\"#pointer-operators\\\"}]}]},\\\"procedure-specification-statement\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\bprocedure\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.specification.procedure.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#procedure-type\\\"},{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::|\\\\\\\\())\\\",\\\"contentName\\\":\\\"meta.attribute-list.procedure.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)|^|(?<=&)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!\\\\\\\\&,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#intent-attribute\\\"},{\\\"include\\\":\\\"#optional-attribute\\\"},{\\\"include\\\":\\\"#pointer-attribute\\\"},{\\\"include\\\":\\\"#protected-attribute\\\"},{\\\"include\\\":\\\"#save-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"include\\\":\\\"#procedure-name-list\\\"}]},\\\"procedure-type\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(procedure)\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.procedure.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"contentName\\\":\\\"meta.type-spec.fortran\\\",\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#types\\\"},{\\\"include\\\":\\\"#procedure-name\\\"}]},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.type.procedure.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\b(procedure)\\\\\\\\b\\\"}]},\\\"program-definition\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\b(program)\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.program.fortran\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.program.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(program)\\\\\\\\b\\\"},{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.program.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(?:(end\\\\\\\\s*program)(?:\\\\\\\\s+([_a-z]\\\\\\\\w*))?|(end))\\\\\\\\b\\\\\\\\s*([^\\\\\\\\n!;]+)?(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endprogram.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.program.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.control.endprogram.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.program-definition.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*program\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.specification.program.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=end(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*program\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},{\\\"include\\\":\\\"$base\\\"}]}]}]},\\\"protected-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.protected.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(protected)\\\\\\\\b\\\"},\\\"public-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.public.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(public)\\\\\\\\b\\\"},\\\"pure-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.impure.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"storage.modifier.pure.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(?:(impure)|(pure))\\\\\\\\b\\\"},\\\"recursive-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.non_recursive.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"storage.modifier.recursive.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(?:(non_recursive)|(recursive))\\\\\\\\b\\\"},\\\"result-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(result)\\\\\\\\s*(\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.result.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#dummy-variable\\\"}]},\\\"return-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(return)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.return.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.return.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"save-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.save.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(save)\\\\\\\\b\\\"},\\\"select-case-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(select\\\\\\\\s*case)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.selectcase.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*select)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endselect.fortran\\\"}},\\\"name\\\":\\\"meta.block.select.case.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(case)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.case.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.default.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(default)\\\\\\\\b\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"$base\\\"}]},\\\"select-rank-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(select\\\\\\\\s*rank)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.selectrank.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*select)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endselect.fortran\\\"}},\\\"name\\\":\\\"meta.block.select.rank.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(rank)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.rank.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.default.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(default)\\\\\\\\b\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"$base\\\"}]},\\\"select-type-construct\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(select\\\\\\\\s*type)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.selecttype.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*select)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endselect.fortran\\\"}},\\\"name\\\":\\\"meta.block.select.type.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"begin\\\":\\\"(?i)\\\\\\\\b(?:(class)|(type))\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.class.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"keyword.control.type.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.default.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(default)\\\\\\\\b\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.is.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(is)\\\\\\\\b\\\"},{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"$base\\\"}]},\\\"sequence-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.sequence.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(sequence)\\\\\\\\b\\\"},\\\"specification-statements\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#attribute-specification-statement\\\"},{\\\"include\\\":\\\"#common-statement\\\"},{\\\"include\\\":\\\"#data-statement\\\"},{\\\"include\\\":\\\"#equivalence-statement\\\"},{\\\"include\\\":\\\"#implicit-statement\\\"},{\\\"include\\\":\\\"#namelist-statement\\\"},{\\\"include\\\":\\\"#use-statement\\\"}]},\\\"stop-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(stop)\\\\\\\\b(?:\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b)?\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.stop.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"meta.label.stop.stop\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.control.stop.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#string-operators\\\"},{\\\"include\\\":\\\"#invalid-character\\\"}]},\\\"string-constant\\\":{\\\"patterns\\\":[{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"'\\\",\\\"beginCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.begin.fortran\\\"}},\\\"end\\\":\\\"'\\\",\\\"endCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.end.fortran\\\"}},\\\"name\\\":\\\"string.quoted.single.fortran\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"''\\\",\\\"name\\\":\\\"constant.character.escape.apostrophe.fortran\\\"}]},{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"\\\\\\\"\\\",\\\"beginCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.begin.fortran\\\"}},\\\"end\\\":\\\"\\\\\\\"\\\",\\\"endCaptures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.string.end.fortran\\\"}},\\\"name\\\":\\\"string.quoted.double.fortran\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"\\\\\\\"\\\\\\\"\\\",\\\"name\\\":\\\"constant.character.escape.quote.fortran\\\"}]}]},\\\"string-line-continuation-operator\\\":{\\\"begin\\\":\\\"(&)(?=\\\\\\\\s*\\\\\\\\n)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.line-continuation.fortran\\\"}},\\\"end\\\":\\\"(?i)^(?:(?=\\\\\\\\s*[^!\\\\\\\\&\\\\\\\\s])|\\\\\\\\s*(&))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.line-continuation.fortran\\\"}},\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"match\\\":\\\"\\\\\\\\S.*\\\",\\\"name\\\":\\\"invalid.error.string-line-cont.fortran\\\"}]},\\\"string-operators\\\":{\\\"match\\\":\\\"(//)\\\",\\\"name\\\":\\\"keyword.other.concatination.fortran\\\"},\\\"submodule-definition\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\b(submodule)\\\\\\\\s*\\\\\\\\()\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.submodule.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(submodule)\\\\\\\\s*(\\\\\\\\()\\\\\\\\s*(\\\\\\\\w+)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.submodule.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"entity.name.class.submodule.fortran\\\"}},\\\"end\\\":\\\"(\\\\\\\\))\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"patterns\\\":[]},{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.module.submodule.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(?:(end\\\\\\\\s*submodule)(?:\\\\\\\\s+([_a-z]\\\\\\\\w*))?|(end))\\\\\\\\b\\\\\\\\s*([^\\\\\\\\n!;]+)?(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.endsubmodule.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.module.submodule.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.endsubmodule.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.submodule.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*submodule\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.specification.submodule.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=\\\\\\\\s*end(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*submodule\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},{\\\"include\\\":\\\"$base\\\"}]}]}]},\\\"subroutine-definition\\\":{\\\"begin\\\":\\\"(?i)(?=([^\\\\\\\\n!\\\\\\\"':;](?!\\\\\\\\bend))*\\\\\\\\bsubroutine\\\\\\\\b)\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.subroutine.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\G\\\\\\\\s*(?!\\\\\\\\bsubroutine\\\\\\\\b))\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bsubroutine\\\\\\\\b)\\\",\\\"name\\\":\\\"meta.attribute-list.subroutine.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#elemental-attribute\\\"},{\\\"include\\\":\\\"#module-attribute\\\"},{\\\"include\\\":\\\"#pure-attribute\\\"},{\\\"include\\\":\\\"#recursive-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(subroutine)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.subroutine.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"}},\\\"end\\\":\\\"(?i)\\\\\\\\b(?:(end\\\\\\\\s*subroutine)(?:\\\\\\\\s+([_a-z]\\\\\\\\w*))?|(end))\\\\\\\\b\\\\\\\\s*([^\\\\\\\\n!;]+)?(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.other.endsubroutine.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"entity.name.function.subroutine.fortran\\\"},\\\"3\\\":{\\\"name\\\":\\\"keyword.other.endsubroutine.fortran\\\"},\\\"4\\\":{\\\"name\\\":\\\"invalid.error.subroutine.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\\G(?!\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.first-line.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#dummy-variable-list\\\"},{\\\"include\\\":\\\"#language-binding-attribute\\\"}]},{\\\"begin\\\":\\\"(?i)(?!\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*subroutine\\\\\\\\b))\\\",\\\"end\\\":\\\"(?i)(?=\\\\\\\\bend(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*subroutine\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.specification.subroutine.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\b(contains)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.contains.fortran\\\"}},\\\"end\\\":\\\"(?i)(?=end(?:\\\\\\\\s*[\\\\\\\\n!;]|\\\\\\\\s*subroutine\\\\\\\\b))\\\",\\\"name\\\":\\\"meta.block.contains.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]},{\\\"include\\\":\\\"$base\\\"}]}]}]}]},\\\"sync-all-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(sync (?:all|memory))(\\\\\\\\s*(?=\\\\\\\\())?\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.sync-all-memory.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.sync-all-memory.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"sync-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(sync (?:images|team))\\\\\\\\s*(?=\\\\\\\\()\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.sync-images-team.fortran\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.parentheses.left.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.parentheses.right.fortran\\\"}},\\\"name\\\":\\\"meta.statement.sync-images-team.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"}]},\\\"target-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.target.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(target)\\\\\\\\b\\\"},\\\"type-specification-statements\\\":{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\b(?:character|class|complex|double\\\\\\\\s*precision|double\\\\\\\\s*complex|integer|logical|real|type|dimension)\\\\\\\\b(?![^\\\\\\\\n!\\\\\\\"':;]*\\\\\\\\bfunction\\\\\\\\b))\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!);])\\\",\\\"name\\\":\\\"meta.specification.type.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#types\\\"},{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::))\\\",\\\"contentName\\\":\\\"meta.attribute-list.type-specification-statements.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)|^|(?<=&)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!\\\\\\\\&,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#access-attribute\\\"},{\\\"include\\\":\\\"#allocatable-attribute\\\"},{\\\"include\\\":\\\"#asynchronous-attribute\\\"},{\\\"include\\\":\\\"#codimension-attribute\\\"},{\\\"include\\\":\\\"#contiguous-attribute\\\"},{\\\"include\\\":\\\"#dimension-attribute\\\"},{\\\"include\\\":\\\"#external-attribute\\\"},{\\\"include\\\":\\\"#intent-attribute\\\"},{\\\"include\\\":\\\"#intrinsic-attribute\\\"},{\\\"include\\\":\\\"#language-binding-attribute\\\"},{\\\"include\\\":\\\"#optional-attribute\\\"},{\\\"include\\\":\\\"#parameter-attribute\\\"},{\\\"include\\\":\\\"#pointer-attribute\\\"},{\\\"include\\\":\\\"#protected-attribute\\\"},{\\\"include\\\":\\\"#save-attribute\\\"},{\\\"include\\\":\\\"#target-attribute\\\"},{\\\"include\\\":\\\"#value-attribute\\\"},{\\\"include\\\":\\\"#volatile-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"include\\\":\\\"#name-list\\\"}]},\\\"types\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#character-type\\\"},{\\\"include\\\":\\\"#derived-type\\\"},{\\\"include\\\":\\\"#logical-type\\\"},{\\\"include\\\":\\\"#numeric-type\\\"}]},\\\"unnamed-control-constructs\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#associate-construct\\\"},{\\\"include\\\":\\\"#block-construct\\\"},{\\\"include\\\":\\\"#critical-construct\\\"},{\\\"include\\\":\\\"#do-construct\\\"},{\\\"include\\\":\\\"#forall-construct\\\"},{\\\"include\\\":\\\"#if-construct\\\"},{\\\"include\\\":\\\"#select-case-construct\\\"},{\\\"include\\\":\\\"#select-type-construct\\\"},{\\\"include\\\":\\\"#select-rank-construct\\\"},{\\\"include\\\":\\\"#where-construct\\\"}]},\\\"use-statement\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\b(use)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.use.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"name\\\":\\\"meta.statement.use.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?=\\\\\\\\s*(,|::|\\\\\\\\())\\\",\\\"contentName\\\":\\\"meta.attribute-list.namelist.fortran\\\",\\\"end\\\":\\\"(::)|(?=[\\\\\\\\n!;])\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.double-colon.fortran\\\"}},\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!,;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#intrinsic-attribute\\\"},{\\\"include\\\":\\\"#non-intrinsic-attribute\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]}]},{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"entity.name.class.module.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(,)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"punctuation.comma.fortran\\\"}},\\\"end\\\":\\\"(?=::|[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(only\\\\\\\\s*:)\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.only.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#operator-keyword\\\"},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)(?=\\\\\\\\s*[a-z])\\\",\\\"contentName\\\":\\\"meta.name-list.fortran\\\",\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#operator-keyword\\\"},{\\\"include\\\":\\\"$base\\\"}]}]}]}]},\\\"user-defined-operators\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.operator.user-defined.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*(\\\\\\\\.[a-z]+\\\\\\\\.)\\\"},\\\"value-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.value.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(value)\\\\\\\\b\\\"},\\\"variable\\\":{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)\\\\\\\\b(?=[a-z])\\\",\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"name\\\":\\\"meta.parameter.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#brackets\\\"},{\\\"include\\\":\\\"#derived-type-operators\\\"},{\\\"include\\\":\\\"#parentheses-dummy-variables\\\"},{\\\"include\\\":\\\"#word\\\"}]},\\\"volatile-attribute\\\":{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"storage.modifier.volatile.fortran\\\"}},\\\"match\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(volatile)\\\\\\\\b\\\"},\\\"where-construct\\\":{\\\"patterns\\\":[{\\\"applyEndPatternLast\\\":1,\\\"begin\\\":\\\"(?i)\\\\\\\\b(where)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.where.fortran\\\"}},\\\"end\\\":\\\"(?<!\\\\\\\\G)\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#logical-control-expression\\\"},{\\\"begin\\\":\\\"(?<=\\\\\\\\))(?=\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"(?i)\\\\\\\\b(end\\\\\\\\s*where)\\\\\\\\b\\\",\\\"endCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.endwhere.fortran\\\"}},\\\"name\\\":\\\"meta.block.where.fortran\\\",\\\"patterns\\\":[{\\\"begin\\\":\\\"(?i)\\\\\\\\s*\\\\\\\\b(else\\\\\\\\s*where)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.elsewhere.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},{\\\"include\\\":\\\"$base\\\"}]},{\\\"begin\\\":\\\"(?i)(?<=\\\\\\\\))(?!\\\\\\\\s*[\\\\\\\\n!;])\\\",\\\"end\\\":\\\"\\\\\\\\n\\\",\\\"name\\\":\\\"meta.statement.control.where.fortran\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"$base\\\"}]}]}]},\\\"while-attribute\\\":{\\\"begin\\\":\\\"(?i)\\\\\\\\G\\\\\\\\s*\\\\\\\\b(while)\\\\\\\\b\\\",\\\"beginCaptures\\\":{\\\"1\\\":{\\\"name\\\":\\\"keyword.control.while.fortran\\\"}},\\\"end\\\":\\\"(?=[\\\\\\\\n!;])\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#parentheses\\\"},{\\\"include\\\":\\\"#invalid-word\\\"}]},\\\"word\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"(?i)(?:\\\\\\\\G|(?<=%))\\\\\\\\s*\\\\\\\\b([a-z]\\\\\\\\w*)\\\\\\\\b\\\"}]}},\\\"scopeName\\\":\\\"source.fortran.free\\\",\\\"aliases\\\":[\\\"f90\\\",\\\"f95\\\",\\\"f03\\\",\\\"f08\\\",\\\"f18\\\"]}\"))\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([\nlang\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2hpa2lqcy9sYW5ncy9kaXN0L2ZvcnRyYW4tZnJlZS1mb3JtLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsd0NBQXdDLHNQQUFzUCxvRUFBb0UsZUFBZSw0Q0FBNEMsRUFBRSw4QkFBOEIsRUFBRSxtQ0FBbUMsZUFBZSxtREFBbUQsRUFBRSxtQ0FBbUMsZUFBZSxtREFBbUQsR0FBRywrQ0FBK0MsOEJBQThCLEVBQUUsMEJBQTBCLEVBQUUsMkJBQTJCLEVBQUUsMkJBQTJCLEVBQUUsbUNBQW1DLEVBQUUsNkJBQTZCLEVBQUUsbUNBQW1DLEVBQUUsa0NBQWtDLEVBQUUsdUNBQXVDLEVBQUUscUNBQXFDLEVBQUUsbUNBQW1DLEVBQUUsb0NBQW9DLEVBQUUsc0NBQXNDLEVBQUUsdUNBQXVDLEVBQUUsc0NBQXNDLEVBQUUseUNBQXlDLEVBQUUsc0NBQXNDLEVBQUUsNENBQTRDLEVBQUUsbURBQW1ELEVBQUUsK0NBQStDLEVBQUUsMENBQTBDLEVBQUUsb0NBQW9DLEVBQUUsb0NBQW9DLEVBQUUsc0NBQXNDLEVBQUUscUNBQXFDLEVBQUUsMEJBQTBCLGtCQUFrQixrQkFBa0IsMkdBQTJHLG9CQUFvQiwyQkFBMkIsRUFBRSwyQkFBMkIsRUFBRSxxQ0FBcUMsRUFBRSxtQ0FBbUMsRUFBRSw2QkFBNkIsRUFBRSwwQkFBMEIsRUFBRSxvQ0FBb0MsRUFBRSxrQ0FBa0MsRUFBRSwwQkFBMEIsRUFBRSxrQkFBa0IscUZBQXFGLE9BQU8sdURBQXVELFFBQVEsd0RBQXdELFFBQVEsbURBQW1ELHNDQUFzQyxPQUFPLG9EQUFvRCxnQkFBZ0IsY0FBYyxPQUFPLDREQUE0RCxRQUFRLCtEQUErRCxzRUFBc0UsRUFBRSw4QkFBOEIsRUFBRSxvQkFBb0IsZUFBZSw2SUFBNkksT0FBTywrQ0FBK0MsUUFBUSwyQ0FBMkMsUUFBUSw2Q0FBNkMsUUFBUSw0Q0FBNEMsUUFBUSw2Q0FBNkMsUUFBUSwwQ0FBMEMsUUFBUSwwQ0FBMEMsUUFBUSw0Q0FBNEMsUUFBUSwyQ0FBMkMsU0FBUyxtREFBbUQsc0JBQXNCLHNCQUFzQixPQUFPLG9EQUFvRCx1REFBdUQsNkNBQTZDLEVBQUUsOEJBQThCLEVBQUUsRUFBRSxjQUFjLE9BQU8sK0NBQStDLFFBQVEsNkNBQTZDLFFBQVEsNENBQTRDLFFBQVEsMkNBQTJDLFFBQVEsMENBQTBDLFFBQVEsNkNBQTZDLHdGQUF3RixFQUFFLDRFQUE0RSxPQUFPLDJDQUEyQyxRQUFRLDBDQUEwQyxRQUFRLG1EQUFtRCx5Q0FBeUMsT0FBTyxvREFBb0QsZ0JBQWdCLDZDQUE2QyxFQUFFLEVBQUUsY0FBYyxPQUFPLDRDQUE0QyxxQ0FBcUMsRUFBRSx5QkFBeUIsY0FBYyxPQUFPLCtDQUErQyxtREFBbUQseUNBQXlDLDJFQUEyRSxPQUFPLG9EQUFvRCxRQUFRLGdEQUFnRCxpRUFBaUUsT0FBTywwREFBMEQsNkRBQTZELHNCQUFzQixFQUFFLHVCQUF1QixlQUFlLG1DQUFtQyxFQUFFLGtDQUFrQyxFQUFFLDRCQUE0QixjQUFjLE9BQU8sbURBQW1ELGlEQUFpRCx5QkFBeUIsb0VBQW9FLE9BQU8sOENBQThDLFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCw2REFBNkQsNkNBQTZDLEVBQUUsMkJBQTJCLGNBQWMsT0FBTyxrREFBa0QsUUFBUSwrQ0FBK0MsUUFBUSwrQ0FBK0MsUUFBUSw0Q0FBNEMsUUFBUSxzREFBc0Qsa0VBQWtFLHdCQUF3QixnSEFBZ0gsMEJBQTBCLEVBQUUsZ0RBQWdELE9BQU8sK0NBQStDLHVDQUF1QyxPQUFPLCtDQUErQyxnQkFBZ0IsMEJBQTBCLEVBQUUsMkJBQTJCLEVBQUUsMkJBQTJCLEVBQUUsbUNBQW1DLEVBQUUsNkJBQTZCLEVBQUUscUNBQXFDLEVBQUUsMEJBQTBCLEVBQUUsRUFBRSx1QkFBdUIsZUFBZSx3REFBd0QsT0FBTyw2Q0FBNkMsc0JBQXNCLHVFQUF1RSxjQUFjLE9BQU8seUNBQXlDLHdDQUF3QyxFQUFFLHNCQUFzQixFQUFFLEVBQUUseUJBQXlCLCtFQUErRSxPQUFPLDZEQUE2RCxRQUFRLG1EQUFtRCxzQ0FBc0MsT0FBTyxvREFBb0QsZ0JBQWdCLHFDQUFxQyxFQUFFLDhCQUE4QixFQUFFLDBCQUEwQixzRkFBc0YsMEJBQTBCLDBFQUEwRSxPQUFPLGdEQUFnRCxrSEFBa0gsT0FBTyxtREFBbUQsZ0JBQWdCLHNCQUFzQixFQUFFLDZCQUE2QixjQUFjLE9BQU8sb0RBQW9ELHVEQUF1RCx3Q0FBd0MsMlBBQTJQLGdGQUFnRixrQ0FBa0MsRUFBRSx1Q0FBdUMsRUFBRSx3Q0FBd0MsRUFBRSx1Q0FBdUMsRUFBRSxzQ0FBc0MsRUFBRSxxQ0FBcUMsRUFBRSxvQ0FBb0MsRUFBRSxrQ0FBa0MsRUFBRSxxQ0FBcUMsRUFBRSw0Q0FBNEMsRUFBRSxvQ0FBb0MsRUFBRSxxQ0FBcUMsRUFBRSxtQ0FBbUMsRUFBRSxxQ0FBcUMsRUFBRSxnQ0FBZ0MsRUFBRSxrQ0FBa0MsRUFBRSxpQ0FBaUMsRUFBRSxvQ0FBb0MsRUFBRSw0R0FBNEcsc0JBQXNCLE9BQU8sb0RBQW9ELGdCQUFnQiw4QkFBOEIsRUFBRSxFQUFFLDJCQUEyQixFQUFFLHNCQUFzQiwrRUFBK0UsT0FBTyxnREFBZ0QsMEdBQTBHLE9BQU8sbURBQW1ELGdCQUFnQixzQkFBc0IsRUFBRSw0QkFBNEIsOEZBQThGLE9BQU8sZ0RBQWdELFFBQVEsNkNBQTZDLGtJQUFrSSxPQUFPLG9EQUFvRCxRQUFRLDRDQUE0QyxRQUFRLG9EQUFvRCxRQUFRLDBEQUEwRCxxREFBcUQsc0JBQXNCLEVBQUUsZUFBZSwrQ0FBK0MsT0FBTywrQ0FBK0Msa0NBQWtDLE9BQU8sK0NBQStDLGdCQUFnQiwwQkFBMEIsRUFBRSwyQkFBMkIsRUFBRSwyQkFBMkIsRUFBRSxtQ0FBbUMsRUFBRSw2QkFBNkIsRUFBRSxxQ0FBcUMsRUFBRSwwQkFBMEIsRUFBRSxxQkFBcUIsZUFBZSw0REFBNEQsT0FBTywyQ0FBMkMsc0JBQXNCLHFFQUFxRSxrR0FBa0csT0FBTyxvQ0FBb0MsUUFBUSxzQ0FBc0MsUUFBUSxzREFBc0QseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLHVDQUF1QyxFQUFFLGtGQUFrRixPQUFPLHFEQUFxRCxRQUFRLG1EQUFtRCx5Q0FBeUMsT0FBTyxvREFBb0QsZ0JBQWdCLDZDQUE2QyxFQUFFLEVBQUUsY0FBYyxPQUFPLHNEQUFzRCxvRUFBb0UsS0FBSyxFQUFFLHNCQUFzQixFQUFFLEVBQUUscUJBQXFCLGVBQWUscUVBQXFFLE9BQU8sNENBQTRDLFFBQVEsbURBQW1ELG9GQUFvRixPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSxjQUFjLE9BQU8sNENBQTRDLFFBQVEscURBQXFELFFBQVEsdUNBQXVDLHlFQUF5RSxFQUFFLDRCQUE0QixrRkFBa0YsT0FBTyxtREFBbUQsdUNBQXVDLDBCQUEwQixFQUFFLGVBQWUsd0VBQXdFLHVCQUF1Qix3REFBd0QsT0FBTyw2Q0FBNkMsc0JBQXNCLG9CQUFvQixzQkFBc0IsRUFBRSwyQkFBMkIsdUVBQXVFLE9BQU8sNENBQTRDLHNCQUFzQixvQkFBb0IsNkJBQTZCLEVBQUUsOEJBQThCLEVBQUUsZ0JBQWdCLGVBQWUsa0NBQWtDLEVBQUUsa0NBQWtDLEVBQUUsaUNBQWlDLEVBQUUsMkJBQTJCLGNBQWMsT0FBTyxpREFBaUQscURBQXFELHlCQUF5QixlQUFlLGdFQUFnRSxPQUFPLCtDQUErQyxzQkFBc0IseUVBQXlFLG1DQUFtQyxFQUFFLEVBQUUseUJBQXlCLGVBQWUsMENBQTBDLEVBQUUsNENBQTRDLEVBQUUseUJBQXlCLGVBQWUsa0NBQWtDLEVBQUUsZ0NBQWdDLEVBQUUsb0NBQW9DLEVBQUUsaUNBQWlDLEVBQUUsaUNBQWlDLEVBQUUsc0NBQXNDLEVBQUUsZ0NBQWdDLEVBQUUsZ0NBQWdDLEVBQUUsaUNBQWlDLEVBQUUsa0NBQWtDLEVBQUUsZ0NBQWdDLEVBQUUsaUNBQWlDLEVBQUUseUNBQXlDLEVBQUUsMkJBQTJCLGNBQWMsT0FBTyxlQUFlLHdDQUF3QyxpQ0FBaUMsZ0JBQWdCLGNBQWMsT0FBTyxnREFBZ0QsUUFBUSw2REFBNkQsMkZBQTJGLEVBQUUsUUFBUSx3REFBd0QsUUFBUSw4Q0FBOEMsUUFBUSw2REFBNkQsMkZBQTJGLEVBQUUsUUFBUSx3REFBd0QsUUFBUSx5REFBeUQsUUFBUSw0REFBNEQsUUFBUSw2REFBNkQsU0FBUyxzRUFBc0UsMkZBQTJGLEVBQUUsU0FBUywwREFBMEQsU0FBUyxrREFBa0Qsb1FBQW9RLEVBQUUsY0FBYyxPQUFPLHlEQUF5RCwyRkFBMkYsRUFBRSxRQUFRLHdEQUF3RCxRQUFRLGdEQUFnRCxRQUFRLHlEQUF5RCwyRkFBMkYsRUFBRSxRQUFRLHdEQUF3RCxRQUFRLHFEQUFxRCxRQUFRLHdEQUF3RCxRQUFRLHlEQUF5RCxRQUFRLGtFQUFrRSwyRkFBMkYsRUFBRSxTQUFTLDBEQUEwRCxTQUFTLGtEQUFrRCxnUkFBZ1IsRUFBRSxjQUFjLE9BQU8sMkNBQTJDLFFBQVEsd0RBQXdELDJGQUEyRixFQUFFLFFBQVEsd0RBQXdELFFBQVEsbURBQW1ELFFBQVEsa0RBQWtELDBKQUEwSixFQUFFLGNBQWMsT0FBTywwQ0FBMEMsUUFBUSx1REFBdUQsMkZBQTJGLEVBQUUsUUFBUSx3REFBd0QsUUFBUSxtREFBbUQsUUFBUSxrREFBa0QsbUpBQW1KLEVBQUUsY0FBYyxPQUFPLGdEQUFnRCxRQUFRLDZEQUE2RCwyRkFBMkYsRUFBRSxRQUFRLHdEQUF3RCxRQUFRLHlEQUF5RCxRQUFRLDREQUE0RCxRQUFRLDZEQUE2RCxRQUFRLHNFQUFzRSwyRkFBMkYsRUFBRSxRQUFRLG1EQUFtRCxRQUFRLGtEQUFrRCxtT0FBbU8sRUFBRSxjQUFjLE9BQU8seURBQXlELDJGQUEyRixFQUFFLFFBQVEsd0RBQXdELFFBQVEscURBQXFELFFBQVEsd0RBQXdELFFBQVEseURBQXlELFFBQVEsa0VBQWtFLDJGQUEyRixFQUFFLFFBQVEsbURBQW1ELFFBQVEsa0RBQWtELCtPQUErTyxFQUFFLG9HQUFvRyxFQUFFLEdBQUcsd0VBQXdFLHlCQUF5QiwwREFBMEQsT0FBTyxnREFBZ0QsZ0hBQWdILE9BQU8sbURBQW1ELGdCQUFnQixzQkFBc0IsRUFBRSxzQkFBc0IsZUFBZSw2REFBNkQsT0FBTyw0Q0FBNEMsc0JBQXNCLGlFQUFpRSxFQUFFLHFCQUFxQixzREFBc0QsT0FBTywyQ0FBMkMsc0JBQXNCLG9CQUFvQixzQkFBc0IsRUFBRSwyQkFBMkIsc0VBQXNFLE9BQU8sZ0RBQWdELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCwrREFBK0QsNkNBQTZDLEVBQUUseUJBQXlCLGNBQWMsT0FBTyxnREFBZ0QsOENBQThDLG1CQUFtQixxR0FBcUcsT0FBTyx3Q0FBd0MsUUFBUSx1Q0FBdUMsUUFBUSxrREFBa0QsUUFBUSx1Q0FBdUMsaUZBQWlGLE9BQU8sb0RBQW9ELHFFQUFxRSw2Q0FBNkMsRUFBRSxxREFBcUQsZ0ZBQWdGLGdGQUFnRixrQ0FBa0MsRUFBRSxvQ0FBb0MsRUFBRSxtQ0FBbUMsRUFBRSxxREFBcUQsY0FBYyxPQUFPLDBDQUEwQyxRQUFRLHVDQUF1QyxRQUFRLG9FQUFvRSxRQUFRLG1EQUFtRCxRQUFRLHlEQUF5RCw0R0FBNEcsS0FBSyxxREFBcUQsK0RBQStELHNFQUFzRSxnQ0FBZ0MsRUFBRSxnSkFBZ0osc0JBQXNCLE9BQU8sb0RBQW9ELGdCQUFnQixxQ0FBcUMsT0FBTyx3Q0FBd0MsMEJBQTBCLG9CQUFvQixrQ0FBa0MsRUFBRSxnQ0FBZ0MsRUFBRSxrQ0FBa0MsRUFBRSw4QkFBOEIsRUFBRSxtQ0FBbUMsRUFBRSxFQUFFLEVBQUUscUNBQXFDLEVBQUUsZ0RBQWdELDhJQUE4SSw4Q0FBOEMseUVBQXlFLHVCQUF1QixFQUFFLDRDQUE0QyxFQUFFLHFJQUFxSSxzQkFBc0IsT0FBTyxvREFBb0QsZ0JBQWdCLHFDQUFxQyxPQUFPLHdDQUF3QywwQkFBMEIsb0JBQW9CLGtDQUFrQyxFQUFFLHVDQUF1QyxFQUFFLHVDQUF1QyxFQUFFLHNDQUFzQyxFQUFFLHFDQUFxQyxFQUFFLG1DQUFtQyxFQUFFLDhCQUE4QixFQUFFLEVBQUUsRUFBRSwyQkFBMkIsRUFBRSxvREFBb0QsNkRBQTZELGdGQUFnRixrQ0FBa0MsRUFBRSxtQ0FBbUMsRUFBRSwwREFBMEQsdURBQXVELE9BQU8sbURBQW1ELHNCQUFzQiw0RUFBNEUsdURBQXVELHNCQUFzQixPQUFPLG9EQUFvRCwrRkFBK0YsOEJBQThCLEVBQUUsRUFBRSxnQ0FBZ0MsRUFBRSw0REFBNEQseURBQXlELE9BQU8scURBQXFELHNCQUFzQiw4RUFBOEUsdUpBQXVKLHNCQUFzQixPQUFPLG9EQUFvRCxnQkFBZ0IsOENBQThDLE9BQU8sd0NBQXdDLCtCQUErQixvQkFBb0Isa0NBQWtDLEVBQUUsOEJBQThCLEVBQUUsRUFBRSxFQUFFLDhGQUE4RixvQkFBb0IsNkJBQTZCLEVBQUUsb0NBQW9DLEVBQUUsa0NBQWtDLEVBQUUsZ0NBQWdDLEVBQUUsbUNBQW1DLEVBQUUsRUFBRSxvREFBb0QsK0RBQStELHNFQUFzRSxnQ0FBZ0MsRUFBRSwrSUFBK0ksc0JBQXNCLE9BQU8sb0RBQW9ELGdCQUFnQiw4Q0FBOEMsT0FBTyx3Q0FBd0MsK0JBQStCLHdEQUF3RCxrQ0FBa0MsRUFBRSxvQ0FBb0MsRUFBRSwyQ0FBMkMsRUFBRSxrQ0FBa0MsRUFBRSxnQ0FBZ0MsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLEVBQUUscUNBQXFDLEVBQUUsOEJBQThCLGlGQUFpRixPQUFPLDJDQUEyQyxzQkFBc0Isc0VBQXNFLDJIQUEySCxzQkFBc0IsT0FBTyxvREFBb0QsZ0JBQWdCLHFDQUFxQyxPQUFPLHdDQUF3QywwQkFBMEIsb0JBQW9CLGtDQUFrQyxFQUFFLG9DQUFvQyxFQUFFLDRDQUE0QyxFQUFFLG1DQUFtQyxFQUFFLDhCQUE4QixFQUFFLEVBQUUsRUFBRSxtRUFBbUUsT0FBTyx1Q0FBdUMseUJBQXlCLCtFQUErRSxPQUFPLDZDQUE2QyxRQUFRLHNDQUFzQyxRQUFRLGlEQUFpRCxnQkFBZ0IscUNBQXFDLEVBQUUsMEJBQTBCLEVBQUUsNE1BQTRNLDBCQUEwQixFQUFFLGdFQUFnRSxFQUFFLGdFQUFnRSxFQUFFLGdFQUFnRSxFQUFFLDJEQUEyRCxFQUFFLEVBQUUsMERBQTBELE9BQU8sK0NBQStDLHNHQUFzRywwQkFBMEIsRUFBRSwrREFBK0QsRUFBRSxxRUFBcUUsRUFBRSx1RUFBdUUsRUFBRSwrREFBK0QsRUFBRSxFQUFFLEVBQUUsNkJBQTZCLGNBQWMsT0FBTyw2Q0FBNkMseUJBQXlCLDBCQUEwQiwyRUFBMkUsT0FBTyxpREFBaUQsdUNBQXVDLDZDQUE2QyxFQUFFLG1CQUFtQixlQUFlLGNBQWMsT0FBTyw0Q0FBNEMsMkNBQTJDLEVBQUUsc0NBQXNDLElBQUksdUJBQXVCLE9BQU8sd0NBQXdDLFFBQVEsdUNBQXVDLHlCQUF5QixrRkFBa0YsbURBQW1ELHlCQUF5QixPQUFPLHdDQUF3QyxzQkFBc0Isb0JBQW9CLHNDQUFzQyxFQUFFLGlDQUFpQyxFQUFFLHNCQUFzQixFQUFFLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSxvREFBb0QsT0FBTyx5Q0FBeUMseUVBQXlFLE9BQU8sOENBQThDLFFBQVEsNENBQTRDLDZEQUE2RCxtREFBbUQseUJBQXlCLE9BQU8sd0NBQXdDLHNCQUFzQiwyREFBMkQsc0NBQXNDLEVBQUUsaUNBQWlDLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSx1SUFBdUksc0JBQXNCLEVBQUUsRUFBRSxFQUFFLHFCQUFxQixjQUFjLE9BQU8seUNBQXlDLDJEQUEyRCwwQkFBMEIsb0RBQW9ELE9BQU8sOERBQThELDhDQUE4QyxPQUFPLDREQUE0RCxzREFBc0QsZ0NBQWdDLEVBQUUsMEJBQTBCLGNBQWMsT0FBTyxpREFBaUQsK0NBQStDLHNCQUFzQixlQUFlLDZEQUE2RCxPQUFPLDRDQUE0QyxzQkFBc0Isc0VBQXNFLG1FQUFtRSxPQUFPLGlEQUFpRCxzQkFBc0Isb0JBQW9CLHFDQUFxQyxFQUFFLGtDQUFrQyxFQUFFLDRDQUE0QyxFQUFFLEVBQUUsRUFBRSwyQkFBMkIsc0RBQXNELE9BQU8sMkNBQTJDLDREQUE0RCxPQUFPLCtDQUErQywrQ0FBK0MsZ0RBQWdELE9BQU8sd0NBQXdDLHNCQUFzQixvQkFBb0IsNENBQTRDLEVBQUUsOEJBQThCLEVBQUUsRUFBRSxzS0FBc0ssMEJBQTBCLEVBQUUsNERBQTRELE9BQU8sK0NBQStDLHNCQUFzQixpRkFBaUYsOEdBQThHLHNCQUFzQixPQUFPLG9EQUFvRCxnQkFBZ0IsOEJBQThCLEVBQUUsRUFBRSwwQkFBMEIsRUFBRSwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsNEJBQTRCLDZEQUE2RCxPQUFPLDZDQUE2QyxzQkFBc0Isb0JBQW9CLDJDQUEyQyxPQUFPLHVDQUF1Qyx1QkFBdUIsb0JBQW9CLDZDQUE2QyxFQUFFLEVBQUUsMkJBQTJCLHVFQUF1RSxPQUFPLGdEQUFnRCxzQkFBc0IsMEVBQTBFLDJCQUEyQixFQUFFLGtDQUFrQyxFQUFFLDBCQUEwQixFQUFFLG1DQUFtQyxFQUFFLHNCQUFzQiwrRUFBK0UsT0FBTywyQ0FBMkMsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELDBEQUEwRCw2Q0FBNkMsRUFBRSwyQkFBMkIsZUFBZSxvQ0FBb0MsRUFBRSxzQ0FBc0MsRUFBRSwrQkFBK0IsRUFBRSxtQ0FBbUMsRUFBRSxxQkFBcUIsNERBQTRELE9BQU8sMkNBQTJDLHNCQUFzQixzRUFBc0UseUNBQXlDLHNEQUFzRCx3QkFBd0IsT0FBTyxnREFBZ0QsaUVBQWlFLE9BQU8sMERBQTBELDZEQUE2RCxzQkFBc0IsRUFBRSx3QkFBd0IscUVBQXFFLE9BQU8sK0NBQStDLDRDQUE0QyxzRkFBc0YsRUFBRSx5QkFBeUIsY0FBYyxPQUFPLGdEQUFnRCw4Q0FBOEMsMkJBQTJCLGNBQWMsT0FBTyxpREFBaUQscUZBQXFGLHVCQUF1QixrRkFBa0YsT0FBTyw2Q0FBNkMsdUNBQXVDLHNDQUFzQyxrRkFBa0YsNkJBQTZCLEVBQUUsOEJBQThCLEVBQUUsRUFBRSx1Q0FBdUMsa0VBQWtFLE9BQU8sZ0RBQWdELHVEQUF1RCxzQkFBc0IsRUFBRSxFQUFFLDJDQUEyQyx5RkFBeUYsc0JBQXNCLEVBQUUsRUFBRSwwQkFBMEIscUVBQXFFLE9BQU8sK0NBQStDLFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCw4REFBOEQsNkNBQTZDLEVBQUUsMEJBQTBCLG1DQUFtQyxrRkFBa0YsdURBQXVELGdLQUFnSyxxQ0FBcUMsRUFBRSxrQ0FBa0MsRUFBRSxnQ0FBZ0MsRUFBRSxxQ0FBcUMsRUFBRSx1QkFBdUIsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLDBEQUEwRCxPQUFPLDZDQUE2QyxzQkFBc0Isb0JBQW9CLHdFQUF3RSxPQUFPLDJDQUEyQyxxR0FBcUcsZUFBZSxzQkFBc0IsT0FBTywrQ0FBK0MsUUFBUSwwQ0FBMEMsUUFBUSwrQ0FBK0MsUUFBUSw2Q0FBNkMsZ0JBQWdCLGtDQUFrQywwQkFBMEIsa0VBQWtFLHFDQUFxQyxFQUFFLGtDQUFrQyxFQUFFLDRDQUE0QyxFQUFFLEVBQUUsNENBQTRDLG9FQUFvRSxnR0FBZ0csMERBQTBELE9BQU8sK0NBQStDLHNDQUFzQyxrRkFBa0Ysc0JBQXNCLEVBQUUsRUFBRSxzQkFBc0IsRUFBRSxFQUFFLEVBQUUsRUFBRSx3Q0FBd0MsMkRBQTJELE9BQU8sZ0RBQWdELHNCQUFzQixnRUFBZ0UsbUhBQW1ILE9BQU8sOENBQThDLFFBQVEsa0RBQWtELFFBQVEsaURBQWlELFFBQVEscURBQXFELFFBQVEsb0RBQW9ELGtKQUFrSixPQUFPLGtEQUFrRCxRQUFRLDhDQUE4QyxRQUFRLGtEQUFrRCxRQUFRLGlEQUFpRCxRQUFRLHlEQUF5RCxRQUFRLG9EQUFvRCxnQkFBZ0IsK0NBQStDLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSxzS0FBc0ssT0FBTyw0Q0FBNEMsUUFBUSxrREFBa0QsUUFBUSxzQ0FBc0MsUUFBUSw4REFBOEQsUUFBUSxvREFBb0Qsa0pBQWtKLE9BQU8sa0RBQWtELFFBQVEsNENBQTRDLFFBQVEsa0RBQWtELFFBQVEsc0NBQXNDLFFBQVEsa0VBQWtFLFFBQVEsb0RBQW9ELGdCQUFnQiwrQ0FBK0MsRUFBRSxzQkFBc0IsRUFBRSxFQUFFLCtJQUErSSxPQUFPLHdDQUF3QyxRQUFRLHlDQUF5QyxRQUFRLGtEQUFrRCxRQUFRLDZDQUE2QyxRQUFRLCtDQUErQyxRQUFRLDJEQUEyRCxRQUFRLG9EQUFvRCxzS0FBc0ssT0FBTyxrREFBa0QsUUFBUSx3Q0FBd0MsUUFBUSx5Q0FBeUMsUUFBUSxrREFBa0QsUUFBUSw2Q0FBNkMsUUFBUSwrQ0FBK0MsUUFBUSwrREFBK0QsUUFBUSxvREFBb0QsZ0JBQWdCLCtDQUErQyxFQUFFLHNCQUFzQixFQUFFLEVBQUUsd0VBQXdFLE9BQU8sMkNBQTJDLDZGQUE2RixPQUFPLGtEQUFrRCxRQUFRLDJDQUEyQyxnQkFBZ0IsK0NBQStDLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSxxQkFBcUIsa0VBQWtFLE9BQU8sMkNBQTJDLHNCQUFzQixxRUFBcUUsc0JBQXNCLEVBQUUsbUJBQW1CLGVBQWUsb0RBQW9ELE9BQU8seUNBQXlDLHNCQUFzQixvQkFBb0IsNENBQTRDLEVBQUUsNERBQTRELE9BQU8sMkNBQTJDLG9HQUFvRyxPQUFPLDRDQUE0QyxnQkFBZ0IsOERBQThELE9BQU8sNkNBQTZDLHNCQUFzQixvQkFBb0IsNkJBQTZCLEVBQUUsY0FBYyxPQUFPLDBDQUEwQyxRQUFRLHdDQUF3Qyx3REFBd0QsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLHNEQUFzRCxPQUFPLDJDQUEyQyw0REFBNEQsK0JBQStCLDRCQUE0QixvQkFBb0IsY0FBYyxPQUFPLHFDQUFxQyxRQUFRLCtDQUErQyw0REFBNEQsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLHlHQUF5RyxzQkFBc0IsRUFBRSxFQUFFLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSx1REFBdUQsbUVBQW1FLHNCQUFzQixFQUFFLEVBQUUsRUFBRSw4QkFBOEIsZUFBZSxvQ0FBb0MsRUFBRSxnQ0FBZ0MsRUFBRSxpQ0FBaUMsRUFBRSxxQ0FBcUMsRUFBRSxzQ0FBc0MsRUFBRSx5QkFBeUIsMERBQTBELE9BQU8sNkNBQTZDLHNCQUFzQixpRUFBaUUsY0FBYyxPQUFPLHlDQUF5QywwQ0FBMEMsRUFBRSxzQkFBc0IsRUFBRSx1QkFBdUIsd0RBQXdELE9BQU8sOENBQThDLHNCQUFzQixnRUFBZ0UsbUVBQW1FLE9BQU8sb0RBQW9ELHNCQUFzQixvQkFBb0IsMkJBQTJCLEVBQUUsRUFBRSxnREFBZ0QsT0FBTyx3Q0FBd0Msc0JBQXNCLG9CQUFvQixjQUFjLE9BQU8sd0NBQXdDLDhDQUE4QyxFQUFFLGNBQWMsT0FBTyx5Q0FBeUMsK0NBQStDLEVBQUUscUVBQXFFLE9BQU8sd0NBQXdDLFFBQVEsMENBQTBDLHNCQUFzQixvQkFBb0IsMkJBQTJCLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLHdCQUF3Qix5REFBeUQsT0FBTyw4Q0FBOEMsc0JBQXNCLGdFQUFnRSxpQ0FBaUMsRUFBRSxtQ0FBbUMsRUFBRSx1QkFBdUIsc0VBQXNFLE9BQU8sNkNBQTZDLFFBQVEsbURBQW1ELDhCQUE4QixzQkFBc0IsT0FBTyxtREFBbUQsZ0JBQWdCLGNBQWMsT0FBTyxvREFBb0QsUUFBUSxnREFBZ0QsUUFBUSxrREFBa0QsMERBQTBELEVBQUUsOEJBQThCLEVBQUUsaUNBQWlDLGVBQWUsb0RBQW9ELEVBQUUsb0RBQW9ELEVBQUUsbURBQW1ELEVBQUUsb0NBQW9DLGlDQUFpQyw4Q0FBOEMsa0VBQWtFLG1LQUFtSyxrQ0FBa0MsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLGlFQUFpRSxPQUFPLDhDQUE4QyxzQkFBc0Isb0JBQW9CLGNBQWMsT0FBTyxvREFBb0QsK0JBQStCLEVBQUUscUNBQXFDLEVBQUUsRUFBRSwwQkFBMEIsY0FBYyxPQUFPLGlEQUFpRCwrQ0FBK0MsMEJBQTBCLGVBQWUsbVNBQW1TLE9BQU8sZ0RBQWdELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSw4R0FBOEcsT0FBTyxnREFBZ0QsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLHVLQUF1SyxPQUFPLGdEQUFnRCxRQUFRLG1EQUFtRCx5Q0FBeUMsT0FBTyxvREFBb0QsZ0JBQWdCLDZDQUE2QyxFQUFFLEVBQUUsMlFBQTJRLE9BQU8sZ0RBQWdELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSx1RkFBdUYsT0FBTyxnREFBZ0QsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLDRGQUE0RixPQUFPLGlEQUFpRCx5Q0FBeUMsT0FBTyxvREFBb0QsZ0JBQWdCLDZDQUE2QyxFQUFFLEVBQUUsc0ZBQXNGLE9BQU8sZ0RBQWdELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSxnRUFBZ0UsT0FBTyxnREFBZ0QsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLHVqQkFBdWpCLE9BQU8sZ0RBQWdELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSwwWEFBMFgsT0FBTyxnREFBZ0QsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLDRCQUE0QixlQUFlLGtJQUFrSSxPQUFPLHFEQUFxRCxRQUFRLG1EQUFtRCx5Q0FBeUMsT0FBTyxvREFBb0QsZ0JBQWdCLDZDQUE2QyxFQUFFLEVBQUUsK0VBQStFLE9BQU8scURBQXFELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSw4R0FBOEcsT0FBTyxxREFBcUQsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLCtHQUErRyxPQUFPLHFEQUFxRCxRQUFRLG1EQUFtRCx5Q0FBeUMsT0FBTyxvREFBb0QsZ0JBQWdCLDZDQUE2QyxFQUFFLEVBQUUsNkZBQTZGLE9BQU8scURBQXFELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSxnS0FBZ0ssT0FBTyxxREFBcUQsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLHdCQUF3Qix5QkFBeUIsdURBQXVELG1CQUFtQiwyRUFBMkUsaUNBQWlDLGtFQUFrRSxPQUFPLDRDQUE0Qyw0Q0FBNEMsd0VBQXdFLEVBQUUsZ0NBQWdDLEVBQUUsc0JBQXNCLEVBQUUsaUNBQWlDLGVBQWUsY0FBYyxPQUFPLHlEQUF5RCx1QkFBdUIsY0FBYyxFQUFFLDJDQUEyQyxPQUFPLHlEQUF5RCxxR0FBcUcsT0FBTyx5REFBeUQsZ0JBQWdCLDBCQUEwQixFQUFFLHNFQUFzRSxFQUFFLEVBQUUsdUJBQXVCLGNBQWMsT0FBTyxxREFBcUQsUUFBUSxxREFBcUQsZ0VBQWdFLGlDQUFpQyw4SEFBOEgsNkJBQTZCLEVBQUUsd0JBQXdCLGVBQWUsZ0hBQWdILEVBQUUsaUZBQWlGLEVBQUUsbUJBQW1CLGVBQWUsbUVBQW1FLE9BQU8sMENBQTBDLFFBQVEsbURBQW1ELG9GQUFvRixPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSxjQUFjLE9BQU8sNENBQTRDLFFBQVEscURBQXFELFFBQVEsdUNBQXVDLHVFQUF1RSxFQUFFLHVCQUF1QixjQUFjLE9BQU8sOENBQThDLDZEQUE2RCxnQkFBZ0Isa0RBQWtELHdCQUF3Qix1REFBdUQsc0VBQXNFLHFEQUFxRCxjQUFjLE9BQU8sNENBQTRDLGlEQUFpRCxFQUFFLDZGQUE2RixPQUFPLCtDQUErQyw2RkFBNkYsZUFBZSxzQkFBc0IsT0FBTyw2Q0FBNkMsUUFBUSw4Q0FBOEMsUUFBUSw2Q0FBNkMsUUFBUSxzREFBc0QsZ0JBQWdCLDhEQUE4RCw0RkFBNEYsMERBQTBELE9BQU8sK0NBQStDLDRDQUE0QyxnRkFBZ0Ysc0JBQXNCLEVBQUUsRUFBRSxzQkFBc0IsRUFBRSxFQUFFLEVBQUUsZ0JBQWdCLG1HQUFtRyxvQkFBb0IsMkJBQTJCLEVBQUUsMkJBQTJCLEVBQUUscUNBQXFDLEVBQUUsbUNBQW1DLEVBQUUsNkJBQTZCLEVBQUUsMEJBQTBCLEVBQUUsb0NBQW9DLEVBQUUsa0NBQWtDLEVBQUUsMEJBQTBCLEVBQUUsK0JBQStCLDRhQUE0YSwyQkFBMkIsc0JBQXNCLE9BQU8seUNBQXlDLFFBQVEsb0VBQW9FLGdCQUFnQiw0Q0FBNEMsRUFBRSx5QkFBeUIsMERBQTBELE9BQU8sK0NBQStDLHNCQUFzQixvQkFBb0Isc0JBQXNCLEVBQUUsOEJBQThCLGNBQWMsT0FBTyxxREFBcUQsbURBQW1ELGdDQUFnQyxjQUFjLE9BQU8sdURBQXVELHFEQUFxRCx1QkFBdUIsY0FBYyxPQUFPLDhDQUE4Qyw0Q0FBNEMsd0JBQXdCLG1FQUFtRSxPQUFPLDZDQUE2QyxRQUFRLG1EQUFtRCx5Q0FBeUMsT0FBTyxvREFBb0QsNERBQTRELDZDQUE2QyxFQUFFLHVCQUF1QiwySkFBMkosbUJBQW1CLGVBQWUsc0lBQXNJLE9BQU8sMENBQTBDLFFBQVEseUNBQXlDLFFBQVEsZ0RBQWdELFFBQVEsMENBQTBDLFFBQVEsdUNBQXVDLFFBQVEsbURBQW1ELG9GQUFvRixPQUFPLG9EQUFvRCxnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSxjQUFjLE9BQU8sMENBQTBDLFFBQVEseUNBQXlDLFFBQVEsZ0RBQWdELFFBQVEsMENBQTBDLFFBQVEsdUNBQXVDLFFBQVEsNENBQTRDLFFBQVEscURBQXFELFFBQVEsdUNBQXVDLHNKQUFzSixFQUFFLHVCQUF1Qix3RUFBd0UsT0FBTywyREFBMkQsUUFBUSxtREFBbUQsc0NBQXNDLE9BQU8sb0RBQW9ELGdCQUFnQixzQ0FBc0MsRUFBRSxtQ0FBbUMsRUFBRSx3Q0FBd0MsRUFBRSw4QkFBOEIsRUFBRSxnQkFBZ0IsZUFBZSxzQ0FBc0MsRUFBRSxxQ0FBcUMsRUFBRSx3Q0FBd0MsRUFBRSxtQ0FBbUMsRUFBRSxtQ0FBbUMsRUFBRSxrQ0FBa0MsRUFBRSx3Q0FBd0MsRUFBRSx5QkFBeUIsY0FBYyxPQUFPLGdEQUFnRCw4Q0FBOEMsMEJBQTBCLGNBQWMsT0FBTyxpREFBaUQsK0NBQStDLGtCQUFrQiwrQ0FBK0MsT0FBTyxtREFBbUQsc0NBQXNDLE9BQU8sb0RBQW9ELGdCQUFnQiwwQkFBMEIsRUFBRSwyQkFBMkIsRUFBRSwyQkFBMkIsRUFBRSxtQ0FBbUMsRUFBRSw2QkFBNkIsRUFBRSxxQ0FBcUMsRUFBRSwwQkFBMEIsRUFBRSxrQ0FBa0MsK0NBQStDLE9BQU8sbURBQW1ELHNDQUFzQyxPQUFPLG9EQUFvRCxnQkFBZ0IsK0NBQStDLEVBQUUsMEJBQTBCLEVBQUUsMkJBQTJCLEVBQUUsMkJBQTJCLEVBQUUsbUNBQW1DLEVBQUUsNkJBQTZCLEVBQUUscUNBQXFDLEVBQUUsMEJBQTBCLEVBQUUscUJBQXFCLGVBQWUsa0VBQWtFLE9BQU8sNENBQTRDLDZDQUE2QyxFQUFFLGNBQWMsT0FBTyw0Q0FBNEMsMENBQTBDLEVBQUUsc0JBQXNCLDZEQUE2RCxPQUFPLDRDQUE0QyxzQkFBc0Isc0VBQXNFLDJCQUEyQixFQUFFLG1DQUFtQyxFQUFFLHdCQUF3QixjQUFjLE9BQU8sK0NBQStDLDZDQUE2Qyx3QkFBd0IsNERBQTRELG1CQUFtQiw4Q0FBOEMsT0FBTyw2REFBNkQsaUVBQWlFLDJDQUEyQyxFQUFFLHlDQUF5QyxFQUFFLHdDQUF3QyxjQUFjLE9BQU8sa0RBQWtELFFBQVEsK0NBQStDLFFBQVEsK0NBQStDLFFBQVEsc0RBQXNELHVDQUF1Qyx1Q0FBdUMsMkZBQTJGLDRCQUE0QiwwRUFBMEUsNkJBQTZCLGVBQWUsc0NBQXNDLEVBQUUsOENBQThDLEVBQUUsb0NBQW9DLG1FQUFtRSxPQUFPLDBEQUEwRCxtRkFBbUYsdUNBQXVDLEVBQUUsd0NBQXdDLEVBQUUseURBQXlELEVBQUUsb0NBQW9DLGNBQWMsT0FBTywyREFBMkQsdUNBQXVDLG1DQUFtQyw2REFBNkQsT0FBTyx5REFBeUQsbUZBQW1GLHVDQUF1QyxFQUFFLDhDQUE4QyxFQUFFLHlEQUF5RCxFQUFFLGdDQUFnQyxlQUFlLCtEQUErRCxPQUFPLHNEQUFzRCx5RkFBeUYsdUNBQXVDLEVBQUUsc0NBQXNDLEVBQUUsZ0RBQWdELEVBQUUsbURBQW1ELEVBQUUsK0NBQStDLEVBQUUseURBQXlELEVBQUUsRUFBRSxrRUFBa0UsT0FBTyx5REFBeUQsc0NBQXNDLHVDQUF1QyxFQUFFLHNDQUFzQyxFQUFFLGdEQUFnRCxFQUFFLG1EQUFtRCxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsbUVBQW1FLE9BQU8sMERBQTBELHNDQUFzQyx1Q0FBdUMsRUFBRSxzQ0FBc0MsRUFBRSxnREFBZ0QsRUFBRSxtREFBbUQsRUFBRSx5REFBeUQsRUFBRSxFQUFFLGlFQUFpRSxPQUFPLHdEQUF3RCxzQ0FBc0MsdUNBQXVDLEVBQUUsc0NBQXNDLEVBQUUsRUFBRSxpRUFBaUUsT0FBTyx3REFBd0Qsc0NBQXNDLHVDQUF1QyxFQUFFLHNDQUFzQyxFQUFFLGdEQUFnRCxFQUFFLG1EQUFtRCxFQUFFLCtDQUErQyxFQUFFLHlEQUF5RCxFQUFFLEVBQUUsa0VBQWtFLE9BQU8seURBQXlELHNDQUFzQyx1Q0FBdUMsRUFBRSxFQUFFLHFDQUFxQywrREFBK0QsT0FBTywyREFBMkQscUZBQXFGLHVDQUF1QyxFQUFFLDhDQUE4QyxFQUFFLG1DQUFtQyxPQUFPLHVFQUF1RSxnQ0FBZ0MsT0FBTyxxRUFBcUUscUVBQXFFLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLGtEQUFrRCxPQUFPLCtFQUErRSxtQkFBbUIscUNBQXFDLGNBQWMsT0FBTywrREFBK0QsUUFBUSxrRUFBa0UsUUFBUSxzRUFBc0UsUUFBUSw4REFBOEQsUUFBUSxtRUFBbUUsUUFBUSxtRUFBbUUsUUFBUSxnRUFBZ0UsUUFBUSxnRUFBZ0UsUUFBUSx5RUFBeUUsU0FBUywrREFBK0QsU0FBUyxrRUFBa0UsU0FBUywrREFBK0QsU0FBUyxrRUFBa0Usb0pBQW9KLDZCQUE2QixlQUFlLHlEQUF5RCxFQUFFLGdEQUFnRCxFQUFFLG1EQUFtRCxFQUFFLG9DQUFvQyxtRUFBbUUsT0FBTywwREFBMEQsb0ZBQW9GLHVDQUF1QyxFQUFFLDhDQUE4QyxFQUFFLDhCQUE4QixlQUFlLCtDQUErQyxFQUFFLDhDQUE4QyxFQUFFLGdEQUFnRCxFQUFFLDREQUE0RCxFQUFFLGlEQUFpRCxFQUFFLG1DQUFtQyxlQUFlLHNDQUFzQyxPQUFPLHVFQUF1RSxtQ0FBbUMsT0FBTyxxRUFBcUUsZ0VBQWdFLEVBQUUsbUNBQW1DLE9BQU8sdUVBQXVFLGdDQUFnQyxPQUFPLHFFQUFxRSxnRUFBZ0UsRUFBRSxzQ0FBc0Msa0VBQWtFLE9BQU8seURBQXlELG1GQUFtRix1Q0FBdUMsRUFBRSx5REFBeUQsRUFBRSx3QkFBd0IsY0FBYyxPQUFPLCtDQUErQyw2Q0FBNkMsb0NBQW9DLDJIQUEySCwyQkFBMkIsaUNBQWlDLDBEQUEwRCx3REFBd0QsNkVBQTZFLE9BQU8sOENBQThDLHNCQUFzQixvQkFBb0Isd0VBQXdFLE9BQU8scURBQXFELHNHQUFzRyxlQUFlLHNCQUFzQixPQUFPLGdEQUFnRCxRQUFRLG9EQUFvRCxRQUFRLGdEQUFnRCxRQUFRLHlEQUF5RCxnQkFBZ0Isa0NBQWtDLDBCQUEwQix5REFBeUQsbUNBQW1DLEVBQUUsRUFBRSwyREFBMkQsdUZBQXVGLHFHQUFxRyxzQkFBc0IsRUFBRSxFQUFFLDJEQUEyRCxPQUFPLCtDQUErQyw0Q0FBNEMsbUZBQW1GLHNCQUFzQixFQUFFLEVBQUUsRUFBRSxFQUFFLHFCQUFxQixjQUFjLE9BQU8scURBQXFELGlEQUFpRCwwQkFBMEIsa0dBQWtHLG9CQUFvQix1REFBdUQsc0JBQXNCLE9BQU8sd0NBQXdDLGdCQUFnQixnQ0FBZ0MsRUFBRSxtQ0FBbUMsRUFBRSxFQUFFLHdDQUF3QywrREFBK0Qsc0VBQXNFLGdDQUFnQyxFQUFFLHlIQUF5SCxzQkFBc0IsT0FBTyxvREFBb0QsZ0JBQWdCLDhDQUE4QyxPQUFPLHdDQUF3QywrQkFBK0Isb0JBQW9CLGtDQUFrQyxFQUFFLGtDQUFrQyxFQUFFLG9DQUFvQyxFQUFFLG1DQUFtQyxFQUFFLHFDQUFxQyxFQUFFLGdDQUFnQyxFQUFFLDhCQUE4QixFQUFFLEVBQUUsRUFBRSxxQ0FBcUMsRUFBRSxxQkFBcUIsZUFBZSxtRUFBbUUsT0FBTyw0Q0FBNEMsUUFBUSxtREFBbUQsaUZBQWlGLE9BQU8sb0RBQW9ELGdCQUFnQix1QkFBdUIsRUFBRSxnQ0FBZ0MsRUFBRSxFQUFFLGNBQWMsT0FBTyw2Q0FBNkMseUNBQXlDLEVBQUUseUJBQXlCLCtEQUErRCxzREFBc0QsY0FBYyxPQUFPLDhDQUE4QyxrREFBa0QsRUFBRSw2RkFBNkYsT0FBTywwQ0FBMEMsOEZBQThGLGVBQWUsc0JBQXNCLE9BQU8sZ0RBQWdELFFBQVEseUNBQXlDLFFBQVEsZ0RBQWdELFFBQVEsdURBQXVELGdCQUFnQiw4REFBOEQsOEZBQThGLDBEQUEwRCxPQUFPLCtDQUErQyxzQ0FBc0MsaUZBQWlGLHNCQUFzQixFQUFFLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSxFQUFFLDBCQUEwQixjQUFjLE9BQU8saURBQWlELCtDQUErQyx1QkFBdUIsY0FBYyxPQUFPLDhDQUE4Qyw0Q0FBNEMscUJBQXFCLGNBQWMsT0FBTyw2Q0FBNkMsUUFBUSw0Q0FBNEMsdURBQXVELDBCQUEwQixjQUFjLE9BQU8sb0RBQW9ELFFBQVEsaURBQWlELG1FQUFtRSx1QkFBdUIsc0VBQXNFLE9BQU8sNENBQTRDLFFBQVEsbURBQW1ELHNDQUFzQyxPQUFPLG9EQUFvRCxnQkFBZ0IsZ0NBQWdDLEVBQUUsdUJBQXVCLDhEQUE4RCxPQUFPLDZDQUE2QyxzQkFBc0IsdUVBQXVFLG1DQUFtQyxFQUFFLHFCQUFxQixjQUFjLE9BQU8sNENBQTRDLDBDQUEwQyw0QkFBNEIsa0VBQWtFLE9BQU8saURBQWlELDhEQUE4RCxPQUFPLGdEQUFnRCw0REFBNEQsNkJBQTZCLEVBQUUsc0RBQXNELE9BQU8sMkNBQTJDLDBCQUEwQixvQkFBb0IsY0FBYyxPQUFPLDhDQUE4QyxrREFBa0QsRUFBRSw2QkFBNkIsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLHNCQUFzQixFQUFFLDRCQUE0QixrRUFBa0UsT0FBTyxpREFBaUQsOERBQThELE9BQU8sZ0RBQWdELDREQUE0RCw2QkFBNkIsRUFBRSxzREFBc0QsT0FBTywyQ0FBMkMsMEJBQTBCLG9CQUFvQixjQUFjLE9BQU8sOENBQThDLGtEQUFrRCxFQUFFLDZCQUE2QixFQUFFLDhCQUE4QixFQUFFLEVBQUUsc0JBQXNCLEVBQUUsNEJBQTRCLGtFQUFrRSxPQUFPLGlEQUFpRCw4REFBOEQsT0FBTyxnREFBZ0QsNERBQTRELDZCQUE2QixFQUFFLGtFQUFrRSxPQUFPLDJDQUEyQyxRQUFRLDJDQUEyQywwQkFBMEIsb0JBQW9CLGNBQWMsT0FBTyw4Q0FBOEMsa0RBQWtELEVBQUUsY0FBYyxPQUFPLHlDQUF5Qyw2Q0FBNkMsRUFBRSw2QkFBNkIsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLHNCQUFzQixFQUFFLHlCQUF5QixjQUFjLE9BQU8sZ0RBQWdELDhDQUE4QywrQkFBK0IsZUFBZSxtREFBbUQsRUFBRSxrQ0FBa0MsRUFBRSxnQ0FBZ0MsRUFBRSx1Q0FBdUMsRUFBRSxvQ0FBb0MsRUFBRSxvQ0FBb0MsRUFBRSwrQkFBK0IsRUFBRSxxQkFBcUIsOEZBQThGLE9BQU8sMENBQTBDLFFBQVEsbUNBQW1DLHNCQUFzQixxRUFBcUUsMkJBQTJCLEVBQUUsa0NBQWtDLEVBQUUsbUNBQW1DLEVBQUUsc0JBQXNCLGVBQWUsNkRBQTZELE9BQU8sMERBQTBELGdDQUFnQyxPQUFPLHdEQUF3RCwwREFBMEQsMkVBQTJFLEVBQUUsRUFBRSxnRUFBZ0UsT0FBTywwREFBMEQsbUNBQW1DLE9BQU8sd0RBQXdELDBEQUEwRCw0RUFBNEUsRUFBRSxFQUFFLHdDQUF3QyxvREFBb0QsT0FBTyx5REFBeUQsMEVBQTBFLE9BQU8seURBQXlELGdCQUFnQiwwQkFBMEIsRUFBRSwwRUFBMEUsRUFBRSx1QkFBdUIsb0VBQW9FLDJCQUEyQix1RUFBdUUsd0RBQXdELDRGQUE0RixPQUFPLDZDQUE2QyxRQUFRLGtEQUFrRCxRQUFRLGtEQUFrRCxzQ0FBc0MsT0FBTyxtREFBbUQsaUJBQWlCLEVBQUUsNkZBQTZGLE9BQU8sbURBQW1ELHNHQUFzRyxlQUFlLHNCQUFzQixPQUFPLGdEQUFnRCxRQUFRLGtEQUFrRCxRQUFRLGdEQUFnRCxRQUFRLDhDQUE4QyxnQkFBZ0IsOERBQThELGtHQUFrRywwREFBMEQsT0FBTywrQ0FBK0MsNENBQTRDLG1GQUFtRixzQkFBc0IsRUFBRSxFQUFFLHNCQUFzQixFQUFFLEVBQUUsRUFBRSw0QkFBNEIsbUNBQW1DLDREQUE0RCx5REFBeUQsc0tBQXNLLHFDQUFxQyxFQUFFLGtDQUFrQyxFQUFFLGdDQUFnQyxFQUFFLHFDQUFxQyxFQUFFLDhCQUE4QixFQUFFLEVBQUUsa0VBQWtFLE9BQU8sK0NBQStDLHNCQUFzQixvQkFBb0Isd0VBQXdFLE9BQU8sc0RBQXNELGlHQUFpRyxlQUFlLHNCQUFzQixPQUFPLGlEQUFpRCxRQUFRLHFEQUFxRCxRQUFRLGlEQUFpRCxRQUFRLCtDQUErQyxnQkFBZ0Isa0NBQWtDLDBCQUEwQix5REFBeUQscUNBQXFDLEVBQUUsNENBQTRDLEVBQUUsRUFBRSw0Q0FBNEMsc0VBQXNFLG9HQUFvRywwREFBMEQsT0FBTywrQ0FBK0Msc0NBQXNDLG9GQUFvRixzQkFBc0IsRUFBRSxFQUFFLHNCQUFzQixFQUFFLEVBQUUsRUFBRSxFQUFFLHlCQUF5QixrRkFBa0YsT0FBTyxxREFBcUQsUUFBUSxtREFBbUQseUNBQXlDLE9BQU8sb0RBQW9ELG9FQUFvRSw2Q0FBNkMsRUFBRSxxQkFBcUIsZ0ZBQWdGLE9BQU8sc0RBQXNELFFBQVEsbURBQW1ELHlDQUF5QyxPQUFPLG9EQUFvRCxxRUFBcUUsNkNBQTZDLEVBQUUsdUJBQXVCLGNBQWMsT0FBTyw4Q0FBOEMsNENBQTRDLG9DQUFvQyx3SkFBd0osK0NBQStDLGlFQUFpRSx1QkFBdUIsRUFBRSx1SUFBdUksc0JBQXNCLE9BQU8sb0RBQW9ELGdCQUFnQiw4Q0FBOEMsT0FBTyx3Q0FBd0MsK0JBQStCLG9CQUFvQixrQ0FBa0MsRUFBRSx1Q0FBdUMsRUFBRSx3Q0FBd0MsRUFBRSx1Q0FBdUMsRUFBRSxzQ0FBc0MsRUFBRSxxQ0FBcUMsRUFBRSxvQ0FBb0MsRUFBRSxrQ0FBa0MsRUFBRSxxQ0FBcUMsRUFBRSw0Q0FBNEMsRUFBRSxvQ0FBb0MsRUFBRSxxQ0FBcUMsRUFBRSxtQ0FBbUMsRUFBRSxxQ0FBcUMsRUFBRSxnQ0FBZ0MsRUFBRSxrQ0FBa0MsRUFBRSxpQ0FBaUMsRUFBRSxvQ0FBb0MsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLEVBQUUsMkJBQTJCLEVBQUUsWUFBWSxlQUFlLGdDQUFnQyxFQUFFLDhCQUE4QixFQUFFLDhCQUE4QixFQUFFLDhCQUE4QixFQUFFLGlDQUFpQyxlQUFlLHFDQUFxQyxFQUFFLGlDQUFpQyxFQUFFLG9DQUFvQyxFQUFFLDhCQUE4QixFQUFFLGtDQUFrQyxFQUFFLDhCQUE4QixFQUFFLHVDQUF1QyxFQUFFLHVDQUF1QyxFQUFFLHVDQUF1QyxFQUFFLGlDQUFpQyxFQUFFLG9CQUFvQixxREFBcUQsT0FBTywwQ0FBMEMsc0JBQXNCLDREQUE0RCx3SEFBd0gsc0JBQXNCLE9BQU8sb0RBQW9ELGdCQUFnQixxQ0FBcUMsT0FBTyx3Q0FBd0MsMEJBQTBCLG9CQUFvQixxQ0FBcUMsRUFBRSx5Q0FBeUMsRUFBRSw4QkFBOEIsRUFBRSxFQUFFLEVBQUUsbUVBQW1FLE9BQU8sK0NBQStDLHNCQUFzQixvQkFBb0IscUNBQXFDLE9BQU8sd0NBQXdDLHlCQUF5QixvQkFBb0IsOERBQThELE9BQU8sMkNBQTJDLHNCQUFzQixvQkFBb0Isa0NBQWtDLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSxrR0FBa0csb0JBQW9CLGtDQUFrQyxFQUFFLHNCQUFzQixFQUFFLEVBQUUsRUFBRSxFQUFFLDZCQUE2QixjQUFjLE9BQU8sb0RBQW9ELDRDQUE0QyxzQkFBc0IsY0FBYyxPQUFPLDZDQUE2QywyQ0FBMkMsZUFBZSxxSUFBcUksMEJBQTBCLEVBQUUsd0NBQXdDLEVBQUUsNkNBQTZDLEVBQUUsc0JBQXNCLEVBQUUseUJBQXlCLGNBQWMsT0FBTyxnREFBZ0QsOENBQThDLHNCQUFzQixlQUFlLGlGQUFpRixPQUFPLDRDQUE0Qyx1Q0FBdUMsNENBQTRDLEVBQUUsdUNBQXVDLGlFQUFpRSxPQUFPLCtDQUErQyxzREFBc0QsdUVBQXVFLE9BQU8sZ0RBQWdELHNCQUFzQixvQkFBb0IsNkJBQTZCLEVBQUUsOEJBQThCLEVBQUUsRUFBRSxzQkFBc0IsRUFBRSxFQUFFLDJDQUEyQyx3RkFBd0Ysc0JBQXNCLEVBQUUsRUFBRSxFQUFFLHNCQUFzQixrRUFBa0UsT0FBTyw0Q0FBNEMsc0JBQXNCLG9CQUFvQiw2QkFBNkIsRUFBRSw4QkFBOEIsRUFBRSxXQUFXLGVBQWUsZ0VBQWdFLEdBQUcsNkZBQTZGOztBQUVueDhGLGlFQUFlO0FBQ2Y7QUFDQSxDQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEJIQVJHQVZcXERvd25sb2Fkc1xcZ3B0LWNsb25lXFxub2RlX21vZHVsZXNcXEBzaGlraWpzXFxsYW5nc1xcZGlzdFxcZm9ydHJhbi1mcmVlLWZvcm0ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxhbmcgPSBPYmplY3QuZnJlZXplKEpTT04ucGFyc2UoXCJ7XFxcImRpc3BsYXlOYW1lXFxcIjpcXFwiRm9ydHJhbiAoRnJlZSBGb3JtKVxcXCIsXFxcImZpbGVUeXBlc1xcXCI6W1xcXCJmOTBcXFwiLFxcXCJGOTBcXFwiLFxcXCJmOTVcXFwiLFxcXCJGOTVcXFwiLFxcXCJmMDNcXFwiLFxcXCJGMDNcXFwiLFxcXCJmMDhcXFwiLFxcXCJGMDhcXFwiLFxcXCJmMThcXFwiLFxcXCJGMThcXFwiLFxcXCJmcHBcXFwiLFxcXCJGUFBcXFwiLFxcXCIucGZcXFwiLFxcXCIuUEZcXFwiXSxcXFwiZmlyc3RMaW5lTWF0Y2hcXFwiOlxcXCIoP2kpLVxcXFxcXFxcKi0gbW9kZTogZm9ydHJhbiBmcmVlIC1cXFxcXFxcXCotXFxcIixcXFwiaW5qZWN0aW9uc1xcXCI6e1xcXCJzb3VyY2UuZm9ydHJhbi5mcmVlIC0gKCBzdHJpbmcgfCBjb21tZW50IHwgbWV0YS5wcmVwcm9jZXNzb3IgKVxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNsaW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3JcXFwifV19LFxcXCJzdHJpbmcucXVvdGVkLmRvdWJsZS5mb3J0cmFuXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N0cmluZy1saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9XX0sXFxcInN0cmluZy5xdW90ZWQuc2luZ2xlLmZvcnRyYW5cXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjc3RyaW5nLWxpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIn1dfX0sXFxcIm5hbWVcXFwiOlxcXCJmb3J0cmFuLWZyZWUtZm9ybVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3NvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb25zdGFudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2FycmF5LWNvbnN0cnVjdG9yXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2luY2x1ZGUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ltcG9ydC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjYmxvY2stZGF0YS1kZWZpbml0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Z1bmN0aW9uLWRlZmluaXRpb25cXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbW9kdWxlLWRlZmluaXRpb25cXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvZ3JhbS1kZWZpbml0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N1Ym1vZHVsZS1kZWZpbml0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N1YnJvdXRpbmUtZGVmaW5pdGlvblxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcm9jZWR1cmUtZGVmaW5pdGlvblxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkZXJpdmVkLXR5cGUtZGVmaW5pdGlvblxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNlbnVtLWJsb2NrLWNvbnN0cnVjdFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRlcmZhY2UtYmxvY2stY29uc3RydWN0c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcm9jZWR1cmUtc3BlY2lmaWNhdGlvbi1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjdHlwZS1zcGVjaWZpY2F0aW9uLXN0YXRlbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjc3BlY2lmaWNhdGlvbi1zdGF0ZW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbnRyb2wtY29uc3RydWN0c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb250cm9sLXN0YXRlbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZXhlY3V0aW9uLXN0YXRlbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50cmluc2ljLWZ1bmN0aW9uc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2YXJpYWJsZVxcXCJ9XSxcXFwicmVwb3NpdG9yeVxcXCI6e1xcXCJJTy1pdGVtLWxpc3RcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxzKltcXFxcXFxcIicwLTlhLXpdKVxcXCIsXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5uYW1lLWxpc3QuZm9ydHJhblxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hKTtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbnN0YW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNvcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50cmluc2ljLWZ1bmN0aW9uc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhcnJheS1jb25zdHJ1Y3RvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNicmFja2V0c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhc3NpZ25tZW50LWtleXdvcmRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjb3BlcmF0b3Ita2V5d29yZFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2YXJpYWJsZVxcXCJ9XX0sXFxcIklPLWtleXdvcmRzXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoPzoocmVhZCl8KHdyaXRlKSlcXFxcXFxcXHMqKFxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5nZW5lcmljLXNwZWMucmVhZC5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5nZW5lcmljLXNwZWMud3JpdGUuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIihcXFxcXFxcXCkpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5nZW5lcmljLXNwZWMuZm9ybWF0dGVkLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmdlbmVyaWMtc3BlYy51bmZvcm1hdHRlZC5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKD86KGZvcm1hdHRlZCl8KHVuZm9ybWF0dGVkKSlcXFxcXFxcXGJcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSxcXFwiSU8tc3RhdGVtZW50c1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKD86KGJhY2tzcGFjZSl8KGNsb3NlKXwoZW5kZmlsZSl8KGZvcm1hdCl8KGlucXVpcmUpfChvcGVuKXwocmVhZCl8KHJld2luZCl8KHdyaXRlKSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmJhY2tzcGFjZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5jbG9zZS5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbmRmaWxlLmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmZvcm1hdC5mb3J0cmFuXFxcIn0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5pbnF1aXJlLmZvcnRyYW5cXFwifSxcXFwiNlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLm9wZW4uZm9ydHJhblxcXCJ9LFxcXCI3XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucmVhZC5mb3J0cmFuXFxcIn0sXFxcIjhcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5yZXdpbmQuZm9ydHJhblxcXCJ9LFxcXCI5XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wud3JpdGUuZm9ydHJhblxcXCJ9LFxcXCIxMFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5JTy5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI0lPLWl0ZW0tbGlzdFxcXCJ9XX0se1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuYmFja3NwYWNlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZGZpbGUuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZm9ybWF0LmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByaW50LmZvcnRyYW5cXFwifSxcXFwiNVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnJlYWQuZm9ydHJhblxcXCJ9LFxcXCI2XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucmV3aW5kLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/OihiYWNrc3BhY2UpfChlbmRmaWxlKXwoZm9ybWF0KXwocHJpbnQpfChyZWFkKXwocmV3aW5kKSlcXFxcXFxcXGJcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/OihmbHVzaCl8KHdhaXQpKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZmx1c2guZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wud2FpdC5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmZsdXNoLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihmbHVzaClcXFxcXFxcXGJcXFwifV19LFxcXCJhYnN0cmFjdC1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5mb3J0cmFuLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoYWJzdHJhY3QpXFxcXFxcXFxiXFxcIn0sXFxcImFic3RyYWN0LWludGVyZmFjZS1ibG9jay1jb25zdHJ1Y3RcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGFic3RyYWN0KVxcXFxcXFxccysoaW50ZXJmYWNlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5hdHRyaWJ1dGUuZm9ydHJhbi5tb2Rlcm5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmludGVyZmFjZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGVuZFxcXFxcXFxccyppbnRlcmZhY2UpXFxcXFxcXFxiXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZGludGVyZmFjZS5mb3J0cmFuLm1vZGVyblxcXCJ9fSxcXFwibmFtZVxcXCI6XFxcIm1ldGEuaW50ZXJmYWNlLmFic3RyYWN0LmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSxcXFwiYWNjZXNzLWF0dHJpYnV0ZVxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcml2YXRlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwdWJsaWMtYXR0cmlidXRlXFxcIn1dfSxcXFwiYWxsb2NhdGFibGUtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuYWxsb2NhdGFibGUuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihhbGxvY2F0YWJsZSlcXFxcXFxcXGJcXFwifSxcXFwiYWxsb2NhdGUtc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihhbGxvY2F0ZSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmFsbG9jYXRlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5hbGxvY2F0ZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSxcXFwiYXJpdGhtZXRpYy1vcGVyYXRvcnNcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5zdWJ0cmFjdGlvbi5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuYWRkaXRpb24uZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmRpdmlzaW9uLmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5wb3dlci5mb3J0cmFuXFxcIn0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubXVsdGlwbGljYXRpb24uZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoLSl8KFxcXFxcXFxcKyl8Lyg/IVsvPVxcXFxcXFxcXFxcXFxcXFxdKXwoXFxcXFxcXFwqXFxcXFxcXFwqKXwoXFxcXFxcXFwqKVxcXCJ9LFxcXCJhcnJheS1jb25zdHJ1Y3RvclxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooXFxcXFxcXFxbfFxcXFxcXFxcKC8pKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuY29udHJ1Y3Rvci5hcnJheVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2JyYWNrZXRzXFxcIn0se1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxccyooXFxcXFxcXFwoLylcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmJyYWNrZXQubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoL1xcXFxcXFxcKSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5icmFja2V0LmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29tbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29uc3RhbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI29wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhcnJheS1jb25zdHJ1Y3RvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRyaW5zaWMtZnVuY3Rpb25zXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ZhcmlhYmxlXFxcIn1dfV19LFxcXCJhc3NpZ24tc3RhdGVtZW50XFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoYXNzaWduKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmFzc2lnbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5jb250cm9sLmFzc2lnbi5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC50by5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHRvKVxcXFxcXFxcYlxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19LFxcXCJhc3NpZ25tZW50LWtleXdvcmRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihhc3NpZ25tZW50KVxcXFxcXFxccyooXFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmdlbmVyaWMtc3BlYy5hc3NpZ25tZW50LmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoXFxcXFxcXFwpKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Fzc2lnbm1lbnQtb3BlcmF0b3JcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSxcXFwiYXNzaWdubWVudC1vcGVyYXRvclxcXCI6e1xcXCJtYXRjaFxcXCI6XFxcIig/PCFbLzw9Pl0pKD0pKD8hWz0+XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5hc3NpZ25tZW50LmZvcnRyYW5cXFwifSxcXFwiYXNzb2NpYXRlLWNvbnN0cnVjdFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoYXNzb2NpYXRlKVxcXFxcXFxcYig/PVxcXFxcXFxccypcXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuYXNzb2NpYXRlLmZvcnRyYW5cXFwifX0sXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5ibG9jay5hc3NvY2lhdGUuZm9ydHJhblxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmFzc29jaWF0ZSlcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kYXNzb2NpYXRlLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LFxcXCJhc3luY2hyb25vdXMtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuYXN5bmNocm9ub3VzLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoYXN5bmNocm9ub3VzKVxcXFxcXFxcYlxcXCJ9LFxcXCJhdHRyaWJ1dGUtc3BlY2lmaWNhdGlvbi1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxiKD86YWxsb2NhdGFibGV8YXN5bmNocm9ub3VzfGNvbnRpZ3VvdXN8ZXh0ZXJuYWx8aW50cmluc2ljfG9wdGlvbmFsfHBhcmFtZXRlcnxwb2ludGVyfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xzYXZlfHRhcmdldHx2YWx1ZXx2b2xhdGlsZSlcXFxcXFxcXGJ8KGJpbmR8ZGltZW5zaW9ufGludGVudClcXFxcXFxcXHMqXFxcXFxcXFwofChjb2RpbWVuc2lvbilcXFxcXFxcXHMqXFxcXFxcXFxbKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmF0dHJpYnV0ZS1zcGVjaWZpY2F0aW9uLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNhY2Nlc3MtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2FsbG9jYXRhYmxlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhc3luY2hyb25vdXMtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvZGltZW5zaW9uLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb250aWd1b3VzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkaW1lbnNpb24tYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2V4dGVybmFsLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRlbnQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludHJpbnNpYy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjb3B0aW9uYWwtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmFtZXRlci1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcG9pbnRlci1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvdGVjdGVkLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNzYXZlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN0YXJnZXQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ZhbHVlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2b2xhdGlsZS1hdHRyaWJ1dGVcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD89XFxcXFxcXFxzKjo6KVxcXCIsXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5hdHRyaWJ1dGUtbGlzdC5ub3JtYWwuZm9ydHJhblxcXCIsXFxcImVuZFxcXCI6XFxcIig6Oil8KD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmRvdWJsZS1jb2xvbi5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNuYW1lLWxpc3RcXFwifV19LFxcXCJibG9jay1jb25zdHJ1Y3RcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGJsb2NrKVxcXFxcXFxcYig/IVxcXFxcXFxccypcXFxcXFxcXGJkYXRhXFxcXFxcXFxiKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmFzc29jaWF0ZS5mb3J0cmFuXFxcIn19LFxcXCJjb250ZW50TmFtZVxcXCI6XFxcIm1ldGEuYmxvY2suYmxvY2suZm9ydHJhblxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmJsb2NrKVxcXFxcXFxcYlxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbmRhc3NvY2lhdGUuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0sXFxcImJsb2NrLWRhdGEtZGVmaW5pdGlvblxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoYmxvY2tcXFxcXFxcXHMqZGF0YSlcXFxcXFxcXGIoPzpcXFxcXFxcXHMrKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGIpP1xcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmJsb2NrLWRhdGEuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5ibG9jay1kYXRhLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoPzooZW5kXFxcXFxcXFxzKmJsb2NrXFxcXFxcXFxzKmRhdGEpKD86XFxcXFxcXFxzKyhcXFxcXFxcXDIpKT98KGVuZCkpXFxcXFxcXFxiKD86XFxcXFxcXFxzKihcXFxcXFxcXFMoKD8hXFxcXFxcXFxuKS4pKikpP1xcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbmQtYmxvY2stZGF0YS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmJsb2NrLWRhdGEuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kLWJsb2NrLWRhdGEuZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLmJsb2NrLWRhdGEtZGVmaW5pdGlvbi5mb3J0cmFuXFxcIn19LFxcXCJuYW1lXFxcIjpcXFwibWV0YS5ibG9jay1kYXRhLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSxcXFwiYnJhY2tldHNcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcXHMqKFxcXFxcXFxcWylcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmJyYWNrZXQubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoXSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5icmFja2V0LmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29tbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29uc3RhbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI29wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhcnJheS1jb25zdHJ1Y3RvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRyaW5zaWMtZnVuY3Rpb25zXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ZhcmlhYmxlXFxcIn1dfSxcXFwiY2FsbC1zdGF0ZW1lbnRcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoY2FsbClcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5jYWxsLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmNvbnRyb2wuY2FsbC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccyooW2Etel1cXFxcXFxcXHcqKSglKShbYS16XVxcXFxcXFxcdyopXFxcXFxcXFxiXFxcXFxcXFxzKig/PVxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInZhcmlhYmxlLm90aGVyLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5hY2Nlc3Nvci5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmZ1bmN0aW9uLnN1YnJvdXRpbmUuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRyaW5zaWMtc3Vicm91dGluZXNcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoW2Etel1cXFxcXFxcXHcqKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5zdWJyb3V0aW5lLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5zdWJyb3V0aW5lLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoW2Etel1cXFxcXFxcXHcqKVxcXFxcXFxcYig/PVxcXFxcXFxccypbXFxcXFxcXFxuITtdKVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19LFxcXCJjaGFyYWN0ZXItdHlwZVxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGNoYXJhY3RlcilcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLmNoYXJhY3Rlci5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLnR5cGUtc3BlYy5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLmNoYXJhY3Rlci5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubXVsdGlwbGljYXRpb24uZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5udW1lcmljLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihjaGFyYWN0ZXIpXFxcXFxcXFxiKD86XFxcXFxcXFxzKihcXFxcXFxcXCopXFxcXFxcXFxzKihcXFxcXFxcXGQqKSk/XFxcIn1dfSxcXFwiY29kaW1lbnNpb24tYXR0cmlidXRlXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoY29kaW1lbnNpb24pKD89XFxcXFxcXFxzKlxcXFxcXFxcWylcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuY29kaW1lbnNpb24uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNicmFja2V0c1xcXCJ9XX0sXFxcImNvbW1lbnRzXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiIVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVxcXFxcXFxcbilcXFwiLFxcXCJuYW1lXFxcIjpcXFwiY29tbWVudC5saW5lLmZvcnRyYW5cXFwifSxcXFwiY29tbW9uLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoY29tbW9uKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbW1vbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LFxcXCJjb25jdXJyZW50LWF0dHJpYnV0ZVxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKGNvbmN1cnJlbnQpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wud2hpbGUuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LFxcXCJjb25zdGFudHNcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjbG9naWNhbC1jb25zdGFudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNudW1lcmljLWNvbnN0YW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N0cmluZy1jb25zdGFudFxcXCJ9XX0sXFxcImNvbnRpZ3VvdXMtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuY29udGlnb3VzLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoY29udGlndW91cylcXFxcXFxcXGJcXFwifSxcXFwiY29udGludWUtc3RhdGVtZW50XFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKGNvbnRpbnVlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbnRpbnVlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmNvbnRyb2wuY29udGludWUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtY2hhcmFjdGVyXFxcIn1dfV19LFxcXCJjb250cm9sLWNvbnN0cnVjdHNcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjbmFtZWQtY29udHJvbC1jb25zdHJ1Y3RzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3VubmFtZWQtY29udHJvbC1jb25zdHJ1Y3RzXFxcIn1dfSxcXFwiY29udHJvbC1zdGF0ZW1lbnRzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Fzc2lnbi1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjY2FsbC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29udGludWUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2N5Y2xlLXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNlbnRyeS1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZXJyb3Itc3RvcC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZXhpdC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZ290by1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGF1c2Utc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3JldHVybi1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjc3RvcC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjd2hlcmUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ltYWdlLWNvbnRyb2wtc3RhdGVtZW50XFxcIn1dfSxcXFwiY3BwLW51bWVyaWMtY29uc3RhbnRcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMFxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoPz0uKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOnt9LFxcXCJlbmRcXFwiOlxcXCIkXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOnt9LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci51bml0LmhleGFkZWNpbWFsLmNwcFxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5udW1lcmljLmhleGFkZWNpbWFsLmNwcFxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/PD1cXFxcXFxcXGgpJyg/PVxcXFxcXFxcaClcXFwiLFxcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmNvbnN0YW50Lm51bWVyaWMuY3BwXFxcIn1dfSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmNvbnN0YW50Lm51bWVyaWMuY3BwXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuaGV4YWRlY2ltYWwuY3BwXFxcIn0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuaGV4YWRlY2ltYWwuY3BwXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifV19LFxcXCI2XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifSxcXFwiN1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci51bml0LmV4cG9uZW50LmhleGFkZWNpbWFsLmNwcFxcXCJ9LFxcXCI4XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLnBsdXMuZXhwb25lbnQuaGV4YWRlY2ltYWwuY3BwXFxcIn0sXFxcIjlcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubWludXMuZXhwb25lbnQuaGV4YWRlY2ltYWwuY3BwXFxcIn0sXFxcIjEwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5udW1lcmljLmV4cG9uZW50LmhleGFkZWNpbWFsLmNwcFxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/PD1cXFxcXFxcXGgpJyg/PVxcXFxcXFxcaClcXFwiLFxcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmNvbnN0YW50Lm51bWVyaWMuY3BwXFxcIn1dfSxcXFwiMTFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIudW5pdC5zdWZmaXguZmxvYXRpbmctcG9pbnQuY3BwXFxcIn0sXFxcIjEyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQudXNlci1kZWZpbmVkLmNwcFxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXEcoMFtYeF0pKFxcXFxcXFxcaCg/OlxcXFxcXFxcaHwoKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkpKik/KCg/PD1cXFxcXFxcXGgpXFxcXFxcXFwufFxcXFxcXFxcLig/PVxcXFxcXFxcaCkpKFxcXFxcXFxcaCg/OlxcXFxcXFxcaHwoKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkpKik/KD86KD88IScpKFtQcF0pKFxcXFxcXFxcKz8pKC0/KShbMC05XSg/OlswLTldfCg/PD1cXFxcXFxcXGgpJyg/PVxcXFxcXFxcaCkpKikpPyhbRkxmbF0oPyFcXFxcXFxcXHcpKT8oKD86XFxcXFxcXFx3KD88IVtQcFxcXFxcXFxcaF0pXFxcXFxcXFx3Kik/KSRcXFwifSx7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuZGVjaW1hbC5jcHBcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCIoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpXFxcIixcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9XX0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5udW1lcmljLmRlY2ltYWwucG9pbnQuY3BwXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuZGVjaW1hbC5jcHBcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCIoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpXFxcIixcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9XX0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9LFxcXCI2XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQuZXhwb25lbnQuZGVjaW1hbC5jcHBcXFwifSxcXFwiN1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5wbHVzLmV4cG9uZW50LmRlY2ltYWwuY3BwXFxcIn0sXFxcIjhcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubWludXMuZXhwb25lbnQuZGVjaW1hbC5jcHBcXFwifSxcXFwiOVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubnVtZXJpYy5leHBvbmVudC5kZWNpbWFsLmNwcFxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/PD1cXFxcXFxcXGgpJyg/PVxcXFxcXFxcaClcXFwiLFxcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmNvbnN0YW50Lm51bWVyaWMuY3BwXFxcIn1dfSxcXFwiMTBcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIudW5pdC5zdWZmaXguZmxvYXRpbmctcG9pbnQuY3BwXFxcIn0sXFxcIjExXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQudXNlci1kZWZpbmVkLmNwcFxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXEcoPz1bLjAtOV0pKD8hMFtCWGJ4XSkoWzAtOV0oPzpbMC05XXwoKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkpKik/KCg/PD1bMC05XSlcXFxcXFxcXC58XFxcXFxcXFwuKD89WzAtOV0pKShbMC05XSg/OlswLTldfCgoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpKSkqKT8oPzooPzwhJykoW0VlXSkoXFxcXFxcXFwrPykoLT8pKFswLTldKD86WzAtOV18KD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkqKSk/KFtGTGZsXSg/IVxcXFxcXFxcdykpPygoPzpcXFxcXFxcXHcoPzwhWzAtOUVlXSlcXFxcXFxcXHcqKT8pJFxcXCJ9LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci51bml0LmJpbmFyeS5jcHBcXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubnVtZXJpYy5iaW5hcnkuY3BwXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifV19LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci51bml0LnN1ZmZpeC5pbnRlZ2VyLmNwcFxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQudXNlci1kZWZpbmVkLmNwcFxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXEcoMFtCYl0pKFswMV0oPzpbMDFdfCgoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpKSkqKSgoPzpbVXVdfFtVdV1sbD98W1V1XUxMP3xsbD9bVXVdP3xMTD9bVXVdP3xbRmZdKSg/IVxcXFxcXFxcdykpPygoPzpcXFxcXFxcXHcoPzwhWzAtOV0pXFxcXFxcXFx3Kik/KSRcXFwifSx7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIudW5pdC5vY3RhbC5jcHBcXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubnVtZXJpYy5vY3RhbC5jcHBcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCIoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpXFxcIixcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9XX0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQuc3VmZml4LmludGVnZXIuY3BwXFxcIn0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIudW5pdC51c2VyLWRlZmluZWQuY3BwXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcRygwKSgoPzpbMC03XXwoKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkpKykoKD86W1V1XXxbVXVdbGw/fFtVdV1MTD98bGw/W1V1XT98TEw/W1V1XT98W0ZmXSkoPyFcXFxcXFxcXHcpKT8oKD86XFxcXFxcXFx3KD88IVswLTldKVxcXFxcXFxcdyopPykkXFxcIn0se1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQuaGV4YWRlY2ltYWwuY3BwXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuaGV4YWRlY2ltYWwuY3BwXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifV19LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci51bml0LmV4cG9uZW50LmhleGFkZWNpbWFsLmNwcFxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLnBsdXMuZXhwb25lbnQuaGV4YWRlY2ltYWwuY3BwXFxcIn0sXFxcIjZcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubWludXMuZXhwb25lbnQuaGV4YWRlY2ltYWwuY3BwXFxcIn0sXFxcIjdcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuZXhwb25lbnQuaGV4YWRlY2ltYWwuY3BwXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5zZXBhcmF0b3IuY29uc3RhbnQubnVtZXJpYy5jcHBcXFwifV19LFxcXCI4XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQuc3VmZml4LmludGVnZXIuY3BwXFxcIn0sXFxcIjlcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIudW5pdC51c2VyLWRlZmluZWQuY3BwXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcRygwW1h4XSkoXFxcXFxcXFxoKD86XFxcXFxcXFxofCgoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpKSkqKSg/Oig/PCEnKShbUHBdKShcXFxcXFxcXCs/KSgtPykoWzAtOV0oPzpbMC05XXwoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpKSopKT8oKD86W1V1XXxbVXVdbGw/fFtVdV1MTD98bGw/W1V1XT98TEw/W1V1XT98W0ZmXSkoPyFcXFxcXFxcXHcpKT8oKD86XFxcXFxcXFx3KD88IVtQcFxcXFxcXFxcaF0pXFxcXFxcXFx3Kik/KSRcXFwifSx7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuZGVjaW1hbC5jcHBcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCIoPzw9XFxcXFxcXFxoKScoPz1cXFxcXFxcXGgpXFxcIixcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9XX0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnNlcGFyYXRvci5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQuZXhwb25lbnQuZGVjaW1hbC5jcHBcXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5wbHVzLmV4cG9uZW50LmRlY2ltYWwuY3BwXFxcIn0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubWludXMuZXhwb25lbnQuZGVjaW1hbC5jcHBcXFwifSxcXFwiNlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubnVtZXJpYy5leHBvbmVudC5kZWNpbWFsLmNwcFxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/PD1cXFxcXFxcXGgpJyg/PVxcXFxcXFxcaClcXFwiLFxcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmNvbnN0YW50Lm51bWVyaWMuY3BwXFxcIn1dfSxcXFwiN1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci51bml0LnN1ZmZpeC5pbnRlZ2VyLmNwcFxcXCJ9LFxcXCI4XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuaXQudXNlci1kZWZpbmVkLmNwcFxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXEcoPz1bLjAtOV0pKD8hMFtCWGJ4XSkoWzAtOV0oPzpbMC05XXwoKD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkpKikoPzooPzwhJykoW0VlXSkoXFxcXFxcXFwrPykoLT8pKFswLTldKD86WzAtOV18KD88PVxcXFxcXFxcaCknKD89XFxcXFxcXFxoKSkqKSk/KCg/OltVdV18W1V1XWxsP3xbVXVdTEw/fGxsP1tVdV0/fExMP1tVdV0/fFtGZl0pKD8hXFxcXFxcXFx3KSk/KCg/OlxcXFxcXFxcdyg/PCFbMC05RWVdKVxcXFxcXFxcdyopPykkXFxcIn0se1xcXCJtYXRjaFxcXCI6XFxcIig/OlsnLjAtOUEtWl9hLXpdfCg/PD1bRVBlcF0pWy0rXSkrXFxcIixcXFwibmFtZVxcXCI6XFxcImludmFsaWQuaWxsZWdhbC5jb25zdGFudC5udW1lcmljLmNwcFxcXCJ9XX1dfX0sXFxcIm1hdGNoXFxcIjpcXFwiKD88IVxcXFxcXFxcdylcXFxcXFxcXC4/XFxcXFxcXFxkKD86WycuMC05QS1aX2Etel18KD88PVtFUGVwXSlbLStdKSpcXFwifSxcXFwiY3JpdGljYWwtY29uc3RydWN0XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihjcml0aWNhbClcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5hc3NvY2lhdGUuZm9ydHJhblxcXCJ9fSxcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmNyaXRpY2FsLmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGVuZFxcXFxcXFxccypjcml0aWNhbClcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kYXNzb2NpYXRlLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LFxcXCJjeWNsZS1zdGF0ZW1lbnRcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoY3ljbGUpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuY3ljbGUuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zdGF0ZW1lbnQuY29udHJvbC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOltdfV19LFxcXCJkYXRhLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZGF0YSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5kYXRhLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0sXFxcImRlYWxsb2NhdGUtc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihkZWFsbG9jYXRlKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZGVhbGxvY2F0ZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zdGF0ZW1lbnQuZGVhbGxvY2F0ZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSxcXFwiZGVmZXJyZWQtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuZGVmZXJyZWQuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihkZWZlcnJlZClcXFxcXFxcXGJcXFwifSxcXFwiZGVyaXZlZC10eXBlXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/OihjbGFzcyl8KHR5cGUpKVxcXFxcXFxccyooXFxcXFxcXFwoKVxcXFxcXFxccyooKFthLXpdXFxcXFxcXFx3Kil8XFxcXFxcXFwqKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLmNsYXNzLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLnR5cGUuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUudHlwZS5mb3J0cmFuXFxcIn19LFxcXCJjb250ZW50TmFtZVxcXCI6XFxcIm1ldGEudHlwZS1zcGVjLmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoXFxcXFxcXFwpKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnNwZWNpZmljYXRpb24udHlwZS5kZXJpdmVkLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LFxcXCJkZXJpdmVkLXR5cGUtY29tcG9uZW50LWF0dHJpYnV0ZS1zcGVjaWZpY2F0aW9uXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxccypcXFxcXFxcXGIoPzpwcml2YXRlfHNlcXVlbmNlKVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5hdHRyaWJ1dGUtc3BlY2lmaWNhdGlvbi5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNzZXF1ZW5jZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC1jaGFyYWN0ZXJcXFwifV19LFxcXCJkZXJpdmVkLXR5cGUtY29tcG9uZW50LXBhcmFtZXRlci1zcGVjaWZpY2F0aW9uXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5pbnRlZ2VyLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLmF0dHJpYnV0ZS5kZXJpdmVkLXR5cGUucGFyYW1ldGVyLmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5kb3VibGUtY29sb24uZm9ydHJhblxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5kZXJpdmVkLXR5cGUucGFyYW1ldGVyLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihpbnRlZ2VyKVxcXFxcXFxccyooLClcXFxcXFxcXHMqKGtpbmR8bGVuKVxcXFxcXFxccyooPzooOjopXFxcXFxcXFxzKihbYS16XVxcXFxcXFxcdyopPyk/XFxcXFxcXFxzKig/PVtcXFxcXFxcXG4hO10pXFxcIn0sXFxcImRlcml2ZWQtdHlwZS1jb21wb25lbnQtcHJvY2VkdXJlLXNwZWNpZmljYXRpb25cXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxicHJvY2VkdXJlXFxcXFxcXFxiKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3BlY2lmaWNhdGlvbi5wcm9jZWR1cmUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3Byb2NlZHVyZS10eXBlXFxcIn0se1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooLHw6OnxcXFxcXFxcXCgpKVxcXCIsXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5hdHRyaWJ1dGUtbGlzdC5kZXJpdmVkLXR5cGUtY29tcG9uZW50LXByb2NlZHVyZS5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiEsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNub3Bhc3MtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtd29yZFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwb2ludGVyLWF0dHJpYnV0ZVxcXCJ9XX1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvY2VkdXJlLW5hbWUtbGlzdFxcXCJ9XX0sXFxcImRlcml2ZWQtdHlwZS1jb21wb25lbnQtdHlwZS1zcGVjaWZpY2F0aW9uXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcYig/OmNoYXJhY3RlcnxjbGFzc3xjb21wbGV4fGRvdWJsZVxcXFxcXFxccypwcmVjaXNpb258ZG91YmxlXFxcXFxcXFxzKmNvbXBsZXh8aW50ZWdlcnxsb2dpY2FsfHJlYWx8dHlwZSlcXFxcXFxcXGIoPyFbXlxcXFxcXFxcbiFcXFxcXFxcIic6O10qXFxcXFxcXFxiZnVuY3Rpb25cXFxcXFxcXGIpKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3BlY2lmaWNhdGlvbi5kZXJpdmVkLXR5cGUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3R5cGVzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2xpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIn0se1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooLHw6OikpXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLmF0dHJpYnV0ZS1saXN0LmRlcml2ZWQtdHlwZS1jb21wb25lbnQtdHlwZS5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiEsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhbGxvY2F0YWJsZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29kaW1lbnNpb24tYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbnRpZ3VvdXMtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2RpbWVuc2lvbi1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcG9pbnRlci1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNuYW1lLWxpc3RcXFwifV19LFxcXCJkZXJpdmVkLXR5cGUtY29udGFpbnMtYXR0cmlidXRlLXNwZWNpZmljYXRpb25cXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxicHJpdmF0ZVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5hdHRyaWJ1dGUtc3BlY2lmaWNhdGlvbi5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLWNoYXJhY3RlclxcXCJ9XX0sXFxcImRlcml2ZWQtdHlwZS1jb250YWlucy1maW5hbC1wcm9jZWR1cmUtc3BlY2lmaWNhdGlvblxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZmluYWwpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLnR5cGUuZmluYWwtcHJvY2VkdXJlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3BlY2lmaWNhdGlvbi5wcm9jZWR1cmUuZmluYWwuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooOjopKVxcXCIsXFxcImVuZFxcXCI6XFxcIig6Oil8KD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmRvdWJsZS1jb2xvbi5mb3J0cmFuXFxcIn19LFxcXCJuYW1lXFxcIjpcXFwibWV0YS5hdHRyaWJ1dGUtbGlzdC5kZXJpdmVkLXR5cGUtY29udGFpbnMtZmluYWwtcHJvY2VkdXJlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcm9jZWR1cmUtbmFtZVxcXCJ9XX0sXFxcImRlcml2ZWQtdHlwZS1jb250YWlucy1nZW5lcmljLXByb2NlZHVyZS1zcGVjaWZpY2F0aW9uXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihnZW5lcmljKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLnByb2NlZHVyZS5nZW5lcmljLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3BlY2lmaWNhdGlvbi5wcm9jZWR1cmUuZ2VuZXJpYy5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD89XFxcXFxcXFxzKigsfDo6fFxcXFxcXFxcKCkpXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLmF0dHJpYnV0ZS1saXN0LmRlcml2ZWQtdHlwZS1jb250YWlucy1nZW5lcmljLXByb2NlZHVyZS5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKXxefCg/PD0mKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiFcXFxcXFxcXCYsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19XX0se1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccypbYS16XSlcXFwiLFxcXCJjb250ZW50TmFtZVxcXCI6XFxcIm1ldGEubmFtZS1saXN0LmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI0lPLWtleXdvcmRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Fzc2lnbm1lbnQta2V5d29yZFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNvcGVyYXRvci1rZXl3b3JkXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3Byb2NlZHVyZS1uYW1lXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BvaW50ZXItb3BlcmF0b3JzXFxcIn1dfV19LFxcXCJkZXJpdmVkLXR5cGUtY29udGFpbnMtcHJvY2VkdXJlLXNwZWNpZmljYXRpb25cXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxicHJvY2VkdXJlXFxcXFxcXFxiKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3BlY2lmaWNhdGlvbi5wcm9jZWR1cmUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3Byb2NlZHVyZS10eXBlXFxcIn0se1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooLHw6OnxcXFxcXFxcXCgpKVxcXCIsXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5hdHRyaWJ1dGUtbGlzdC5kZXJpdmVkLXR5cGUtY29udGFpbnMtcHJvY2VkdXJlLmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoOjopfCg/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5kb3VibGUtY29sb24uZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKCwpfF58KD88PSYpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5jb21tYS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz06OnxbXFxcXFxcXFxuIVxcXFxcXFxcJiw7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zb21ldGhpbmcuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2FjY2Vzcy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZGVmZXJyZWQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI25vbi1vdmVycmlkYWJsZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbm9wYXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19XX0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3Byb2NlZHVyZS1uYW1lLWxpc3RcXFwifV19LFxcXCJkZXJpdmVkLXR5cGUtZGVmaW5pdGlvblxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIodHlwZSlcXFxcXFxcXGIoPyFcXFxcXFxcXHMqKFxcXFxcXFxcKHxpc1xcXFxcXFxcYnw9KSlcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC50eXBlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuZGVyaXZlZC10eXBlLmRlZmluaXRpb24uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxcRyg/PVxcXFxcXFxccyooLHw6OikpXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLmF0dHJpYnV0ZS1saXN0LmRlcml2ZWQtdHlwZS5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiEsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhYnN0cmFjdC1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZXh0ZW5kcy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihbYS16XVxcXFxcXFxcdyopXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS50eXBlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSkoPzpefCg/PD07KSlcXFxcXFxcXHMqKGVuZFxcXFxcXFxccyp0eXBlKSg/OlxcXFxcXFxccysoPzooXFxcXFxcXFwxKXwoXFxcXFxcXFx3KykpKT9cXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kdHlwZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLnR5cGUuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLmRlcml2ZWQtdHlwZS5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNkdW1teS12YXJpYWJsZS1saXN0XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJiZWdpblxcXCI6XFxcIig/aSleKD8hXFxcXFxcXFxzKlxcXFxcXFxcYig/OmNvbnRhaW5zfGVuZFxcXFxcXFxccyp0eXBlKVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoP2kpXig/PVxcXFxcXFxccypcXFxcXFxcXGIoPzpjb250YWluc3xlbmRcXFxcXFxcXHMqdHlwZSlcXFxcXFxcXGIpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYmxvY2suc3BlY2lmaWNhdGlvbi5kZXJpdmVkLXR5cGUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Rlcml2ZWQtdHlwZS1jb21wb25lbnQtYXR0cmlidXRlLXNwZWNpZmljYXRpb25cXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZGVyaXZlZC10eXBlLWNvbXBvbmVudC1wYXJhbWV0ZXItc3BlY2lmaWNhdGlvblxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkZXJpdmVkLXR5cGUtY29tcG9uZW50LXByb2NlZHVyZS1zcGVjaWZpY2F0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Rlcml2ZWQtdHlwZS1jb21wb25lbnQtdHlwZS1zcGVjaWZpY2F0aW9uXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihjb250YWlucylcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5jb250YWlucy5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxzKmVuZFxcXFxcXFxccyp0eXBlXFxcXFxcXFxiKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmNvbnRhaW5zLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkZXJpdmVkLXR5cGUtY29udGFpbnMtYXR0cmlidXRlLXNwZWNpZmljYXRpb25cXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZGVyaXZlZC10eXBlLWNvbnRhaW5zLWZpbmFsLXByb2NlZHVyZS1zcGVjaWZpY2F0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Rlcml2ZWQtdHlwZS1jb250YWlucy1nZW5lcmljLXByb2NlZHVyZS1zcGVjaWZpY2F0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Rlcml2ZWQtdHlwZS1jb250YWlucy1wcm9jZWR1cmUtc3BlY2lmaWNhdGlvblxcXCJ9XX1dfV19LFxcXCJkZXJpdmVkLXR5cGUtb3BlcmF0b3JzXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuc2VsZWN0b3IuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXHMqKCUpXFxcIn0sXFxcImRpbWVuc2lvbi1hdHRyaWJ1dGVcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihkaW1lbnNpb24pKD89XFxcXFxcXFxzKlxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuZGltZW5zaW9uLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSxcXFwiZG8tY29uc3RydWN0XFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kZG8uZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGVuZFxcXFxcXFxccypkbylcXFxcXFxcXGJcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihkbylcXFxcXFxcXHMrKFxcXFxcXFxcZHsxLDV9KVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmRvLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubnVtZXJpYy5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD86XnwoPzw9OykpKD89XFxcXFxcXFxzKlxcXFxcXFxcYlxcXFxcXFxcMlxcXFxcXFxcYilcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5kby5sYWJlbGVkLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHKD86XFxcXFxcXFxzKigsKXwoPyFcXFxcXFxcXHMqW1xcXFxcXFxcbiE7XSkpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5jb21tYS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbmN1cnJlbnQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3doaWxlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZG8pXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZG8uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/Oihjb250aW51ZSl8KGVuZFxcXFxcXFxccypkbykpXFxcXFxcXFxiXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbnRpbnVlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZGRvLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmRvLnVubGFiZWxlZC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcRyg/OlxcXFxcXFxccyooLCl8KD8hXFxcXFxcXFxzKltcXFxcXFxcXG4hO10pKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5sb29wLWNvbnRyb2wuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbmN1cnJlbnQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3doaWxlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/IVxcXFxcXFxccypcXFxcXFxcXGIoY29udGludWV8ZW5kXFxcXFxcXFxzKmRvKVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxzKlxcXFxcXFxcYihjb250aW51ZXxlbmRcXFxcXFxcXHMqZG8pXFxcXFxcXFxiKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19XX1dfSxcXFwiZHVtbXktdmFyaWFibGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwidmFyaWFibGUucGFyYW1ldGVyLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKSg/Ol58KD88PVtcXFxcXFxcXCYoLF0pKVxcXFxcXFxccyooW2Etel1cXFxcXFxcXHcqKVxcXCJ9LFxcXCJkdW1teS12YXJpYWJsZS1saXN0XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiXFxcXFxcXFxHXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnBhcmFtZXRlcnMuYmVnaW4uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiXFxcXFxcXFwpfCg/PVxcXFxcXFxcbilcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnBhcmFtZXRlcnMuZW5kLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmR1bW15LXZhcmlhYmxlLWxpc3RcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNkdW1teS12YXJpYWJsZVxcXCJ9XX0sXFxcImVsZW1lbnRhbC1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5lbGVtZW50YWwuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihlbGVtZW50YWwpXFxcXFxcXFxiXFxcIn0sXFxcImVudHJ5LXN0YXRlbWVudFxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihlbnRyeSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbnRyeS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5jb250cm9sLmVudHJ5LmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihbYS16XVxcXFxcXFxcdyopXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5lbnRyeS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2R1bW15LXZhcmlhYmxlLWxpc3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcmVzdWx0LXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNsYW5ndWFnZS1iaW5kaW5nLWF0dHJpYnV0ZVxcXCJ9XX1dfV19LFxcXCJlbnVtLWJsb2NrLWNvbnN0cnVjdFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW51bSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbnVtLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmVudW0pXFxcXFxcXFxiXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZC1lbnVtLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmVudW0uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxcR1xcXFxcXFxccyooLClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmNvbW1hLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/IVxcXFxcXFxccypcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmVudW0pXFxcXFxcXFxiKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmVudW0pXFxcXFxcXFxiKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLnNwZWNpZmljYXRpb24uZW51bS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29tbWVudHNcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihlbnVtZXJhdG9yKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5lbnVtZXJhdG9yLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmVudW1lcmF0b3Itc3BlY2lmaWNhdGlvbi5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD89XFxcXFxcXFxzKigsfDo6KSlcXFwiLFxcXCJjb250ZW50TmFtZVxcXCI6XFxcIm1ldGEuYXR0cmlidXRlLWxpc3QuZW51bS5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtd29yZFxcXCJ9XX0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI25hbWUtbGlzdFxcXCJ9XX1dfV19LFxcXCJlcXVpdmFsZW5jZS1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGVxdWl2YWxlbmNlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbW1vbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxcR3woLClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bnR1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiEsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfV19LFxcXCJlcnJvci1zdG9wLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKGVycm9yXFxcXFxcXFxzK3N0b3ApXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZXJyb3JzdG9wLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmNvbnRyb2wuZXJyb3JzdG9wLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb25zdGFudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjc3RyaW5nLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2YXJpYWJsZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLWNoYXJhY3RlclxcXCJ9XX0sXFxcImV2ZW50LXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZXZlbnQgKD86cG9zdHx3YWl0KSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmV2ZW50LmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5ldmVudC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSxcXFwiZXhlY3V0aW9uLXN0YXRlbWVudHNcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWxsb2NhdGUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2RlYWxsb2NhdGUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI0lPLXN0YXRlbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbnVsbGlmeS1zdGF0ZW1lbnRcXFwifV19LFxcXCJleGl0LXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKGV4aXQpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZXhpdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5jb250cm9sLmV4aXQuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbXX0sXFxcImV4cGxpY2l0LWludGVyZmFjZS1ibG9jay1jb25zdHJ1Y3RcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGludGVyZmFjZSlcXFxcXFxcXGIoPz1cXFxcXFxcXHMqW1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5pbnRlcmZhY2UuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihlbmRcXFxcXFxcXHMqaW50ZXJmYWNlKVxcXFxcXFxcYlxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbmRpbnRlcmZhY2UuZm9ydHJhbi5tb2Rlcm5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmludGVyZmFjZS5leHBsaWNpdC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0sXFxcImV4dGVuZHMtYXR0cmlidXRlXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoZXh0ZW5kcylcXFxcXFxcXHMqXFxcXFxcXFwoXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmV4dGVuZHMuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiXFxcXFxcXFwpfCg/PVxcXFxcXFxcbilcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihbYS16XVxcXFxcXFxcdyopXFxcXFxcXFxiXFxcIixcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLnR5cGUuZm9ydHJhblxcXCJ9XX0sXFxcImV4dGVybmFsLWF0dHJpYnV0ZVxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmV4dGVybmFsLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoZXh0ZXJuYWwpXFxcXFxcXFxiXFxcIn0sXFxcImZhaWwtaW1hZ2Utc3RhdGVtZW50XFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5mYWlsLWltYWdlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiXFxcXFxcXFxiKGZhaWwgaW1hZ2UpXFxcXFxcXFxiXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmZhaWwtaW1hZ2UuZm9ydHJhblxcXCJ9LFxcXCJmb3JhbGwtY29uc3RydWN0XFxcIjp7XFxcImFwcGx5RW5kUGF0dGVybkxhc3RcXFwiOjEsXFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihmb3JhbGwpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZm9yYWxsLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcRyg/IVxcXFxcXFxccypbXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEubG9vcC1jb250cm9sLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoPzw9XFxcXFxcXFwpKSg/PVxcXFxcXFxccypbXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmZvcmFsbClcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kZm9yYWxsLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmZvcmFsbC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPzw9XFxcXFxcXFwpKSg/IVxcXFxcXFxccypbXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZFxcXCI6XFxcIlxcXFxcXFxcblxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5jb250cm9sLmZvcmFsbC5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX1dfSxcXFwiZm9ybS10ZWFtLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZm9ybSB0ZWFtKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZm9ybS10ZWFtLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5mb3JtLXRlYW0uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0sXFxcImZ1bmN0aW9uLWRlZmluaXRpb25cXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89KFteXFxcXFxcXFxuIVxcXFxcXFwiJzo7XSg/IVxcXFxcXFxcYmVuZCkoPyFcXFxcXFxcXGJzdWJyb3V0aW5lXFxcXFxcXFxiKSkqXFxcXFxcXFxiZnVuY3Rpb25cXFxcXFxcXGIpXFxcIixcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5mdW5jdGlvbi5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcR1xcXFxcXFxccyooPyFcXFxcXFxcXGJmdW5jdGlvblxcXFxcXFxcYikpXFxcIixcXFwiZW5kXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcYmZ1bmN0aW9uXFxcXFxcXFxiKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmF0dHJpYnV0ZS1saXN0LmZ1bmN0aW9uLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNlbGVtZW50YWwtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI21vZHVsZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHVyZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcmVjdXJzaXZlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN0eXBlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGZ1bmN0aW9uKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5mdW5jdGlvbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmZ1bmN0aW9uLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKD86KGVuZFxcXFxcXFxccypmdW5jdGlvbikoPzpcXFxcXFxcXHMrKFtfYS16XVxcXFxcXFxcdyopKT98KGVuZCkpXFxcXFxcXFxiXFxcXFxcXFxzKihbXlxcXFxcXFxcbiE7XSspPyg/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5lbmRmdW5jdGlvbi5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmZ1bmN0aW9uLmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5lbmRmdW5jdGlvbi5mb3J0cmFuXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcImludmFsaWQuZXJyb3IuZnVuY3Rpb24uZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiXFxcXFxcXFxHKD8hXFxcXFxcXFxzKltcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5mdW5jdGlvbi5maXJzdC1saW5lLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNkdW1teS12YXJpYWJsZS1saXN0XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3Jlc3VsdC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD8hXFxcXFxcXFxiZW5kKD86XFxcXFxcXFxzKltcXFxcXFxcXG4hO118XFxcXFxcXFxzKmZ1bmN0aW9uXFxcXFxcXFxiKSlcXFwiLFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxiZW5kKD86XFxcXFxcXFxzKltcXFxcXFxcXG4hO118XFxcXFxcXFxzKmZ1bmN0aW9uXFxcXFxcXFxiKSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5ibG9jay5zcGVjaWZpY2F0aW9uLmZ1bmN0aW9uLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGNvbnRhaW5zKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbnRhaW5zLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSkoPz1lbmQoPzpcXFxcXFxcXHMqW1xcXFxcXFxcbiE7XXxcXFxcXFxcXHMqZnVuY3Rpb25cXFxcXFxcXGIpKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmNvbnRhaW5zLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX1dfV19XX0sXFxcImdlbmVyaWMtaW50ZXJmYWNlLWJsb2NrLWNvbnN0cnVjdFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoaW50ZXJmYWNlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmludGVyZmFjZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmludGVyZmFjZS5nZW5lcmljLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihhc3NpZ25tZW50KVxcXFxcXFxccyooXFxcXFxcXFwoKVxcXFxcXFxccyooPzooPSl8KFxcXFxcXFxcUy4qKSlcXFxcXFxcXHMqKFxcXFxcXFxcKSlcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuYXNzaWdubWVudC5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmFzc2lnbm1lbnQuZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLmdlbmVyaWMtaW50ZXJmYWNlLmZvcnRyYW5cXFwifSxcXFwiNVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihlbmRcXFxcXFxcXHMqaW50ZXJmYWNlKVxcXFxcXFxcYig/OlxcXFxcXFxccypcXFxcXFxcXGIoXFxcXFxcXFwxKVxcXFxcXFxcYlxcXFxcXFxccyooXFxcXFxcXFwoKVxcXFxcXFxccyooPzooXFxcXFxcXFwzKXwoXFxcXFxcXFxTLiopKVxcXFxcXFxccyooXFxcXFxcXFwpKSk/XFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZGludGVyZmFjZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuYXNzaWdubWVudC5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmFzc2lnbm1lbnQuZm9ydHJhblxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLmdlbmVyaWMtaW50ZXJmYWNlLWVuZC5mb3J0cmFuXFxcIn0sXFxcIjZcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludGVyZmFjZS1wcm9jZWR1cmUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihvcGVyYXRvcilcXFxcXFxcXHMqKFxcXFxcXFxcKClcXFxcXFxcXHMqKD86KFxcXFxcXFxcLlthLXpdK1xcXFxcXFxcLnw9PXwvPXw+PXxbPD5dfDw9fFstKy9dfC8vfFxcXFxcXFxcKlxcXFxcXFxcKj8pfChcXFxcXFxcXFMuKikpXFxcXFxcXFxzKihcXFxcXFxcXCkpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLm9wZXJhdG9yLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLmdlbmVyaWMtaW50ZXJmYWNlLWJsb2NrLW9wLmZvcnRyYW5cXFwifSxcXFwiNVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihlbmRcXFxcXFxcXHMqaW50ZXJmYWNlKVxcXFxcXFxcYig/OlxcXFxcXFxccypcXFxcXFxcXGIoXFxcXFxcXFwxKVxcXFxcXFxcYlxcXFxcXFxccyooXFxcXFxcXFwoKVxcXFxcXFxccyooPzooXFxcXFxcXFwzKXwoXFxcXFxcXFxTLiopKVxcXFxcXFxccyooXFxcXFxcXFwpKSk/XFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZGludGVyZmFjZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIub3BlcmF0b3IuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5mb3J0cmFuXFxcIn0sXFxcIjVcXFwiOntcXFwibmFtZVxcXCI6XFxcImludmFsaWQuZXJyb3IuZ2VuZXJpYy1pbnRlcmZhY2UtYmxvY2stb3AtZW5kLmZvcnRyYW5cXFwifSxcXFwiNlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50ZXJmYWNlLXByb2NlZHVyZS1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKD86KHJlYWQpfCh3cml0ZSkpXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcXFxcXFxzKig/Oihmb3JtYXR0ZWQpfCh1bmZvcm1hdHRlZCl8KFxcXFxcXFxcUy4qKSlcXFxcXFxcXHMqKFxcXFxcXFxcKSlcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIucmVhZC5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIud3JpdGUuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5mb3JtYXR0ZWQuZm9ydHJhblxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnVuZm9ybWF0dGVkLmZvcnRyYW5cXFwifSxcXFwiNlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiaW52YWxpZC5lcnJvci5nZW5lcmljLWludGVyZmFjZS1ibG9jay5mb3J0cmFuXFxcIn0sXFxcIjdcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmludGVyZmFjZSlcXFxcXFxcXGIoPzpcXFxcXFxcXHMqXFxcXFxcXFxiKD86KFxcXFxcXFxcMil8KFxcXFxcXFxcMykpXFxcXFxcXFxiXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcXFxcXFxzKig/OihcXFxcXFxcXDQpfChcXFxcXFxcXDUpfChcXFxcXFxcXFMuKikpXFxcXFxcXFxzKihcXFxcXFxcXCkpKT9cXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kaW50ZXJmYWNlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5yZWFkLmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci53cml0ZS5mb3J0cmFuXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLmZvcm1hdHRlZC5mb3J0cmFuXFxcIn0sXFxcIjZcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIudW5mb3JtYXR0ZWQuZm9ydHJhblxcXCJ9LFxcXCI3XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLmdlbmVyaWMtaW50ZXJmYWNlLWJsb2NrLWVuZC5mb3J0cmFuXFxcIn0sXFxcIjhcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludGVyZmFjZS1wcm9jZWR1cmUtc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihbYS16XVxcXFxcXFxcdyopXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGVuZFxcXFxcXFxccyppbnRlcmZhY2UpXFxcXFxcXFxiKD86XFxcXFxcXFxzKlxcXFxcXFxcYihcXFxcXFxcXDEpXFxcXFxcXFxiKT9cXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kaW50ZXJmYWNlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24uZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50ZXJmYWNlLXByb2NlZHVyZS1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX1dfSxcXFwiZ290by1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihnb1xcXFxcXFxccyp0bylcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5nb3RvLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmNvbnRyb2wuZ290by5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0sXFxcImlmLWNvbnN0cnVjdFxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGlmKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmlmLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjbG9naWNhbC1jb250cm9sLWV4cHJlc3Npb25cXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIodGhlbilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC50aGVuLmZvcnRyYW5cXFwifX0sXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5ibG9jay5pZi5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihlbmRcXFxcXFxcXHMqaWYpXFxcXFxcXFxiXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZGlmLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZWxzZVxcXFxcXFxccyppZilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbHNlaWYuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnRoZW4uZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJtZXRhLmxhYmVsLmVsc2VpZi5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXGIodGhlbilcXFxcXFxcXGIoXFxcXFxcXFxzKlthLXpdXFxcXFxcXFx3Kik/XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtd29yZFxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZWxzZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5lbHNlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmlmKVxcXFxcXFxcYilcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoPyEoXFxcXFxcXFxzKihbXFxcXFxcXFxuITtdKSkpXFxcIixcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwibWV0YS5sYWJlbC5lbHNlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiaW52YWxpZC5lcnJvci5sYWJlbC5lbHNlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiXFxcXFxcXFxzKihbYS16XVxcXFxcXFxcdyopP1xcXFxcXFxccypcXFxcXFxcXGIoXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/IVxcXFxcXFxcYihlbmRcXFxcXFxcXHMqaWYpXFxcXFxcXFxiKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGIoZW5kXFxcXFxcXFxzKmlmKVxcXFxcXFxcYilcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxccypbYS16XSlcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5jb250cm9sLmlmLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19XX0sXFxcImltYWdlLWNvbnRyb2wtc3RhdGVtZW50XFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N5bmMtYWxsLXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNzeW5jLXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNldmVudC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZm9ybS10ZWFtLXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNmYWlsLWltYWdlLXN0YXRlbWVudFxcXCJ9XX0sXFxcImltcGxpY2l0LXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoaW1wbGljaXQpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLmltcGxpY2l0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmltcGxpY2l0LmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5ub25lLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIobm9uZSlcXFxcXFxcXGJcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0sXFxcImltcG9ydC1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGltcG9ydClcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5pbmNsdWRlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmluY2x1ZGUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqKD86KDo6KXwoPz1bYS16XSkpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmRvdWJsZS1jb2xvbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI25hbWUtbGlzdFxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxcR1xcXFxcXFxccyooLClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmNvbW1hLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuYWxsLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoYWxsKVxcXFxcXFxcYlxcXCJ9LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5ub25lLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIobm9uZSlcXFxcXFxcXGJcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIob25seSlcXFxcXFxcXHMqKDopXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLm9ubHkuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLmNvbG9uLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjbmFtZS1saXN0XFxcIn1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfV19LFxcXCJpbmNsdWRlLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoaW5jbHVkZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5pbmNsdWRlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LmluY2x1ZGUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N0cmluZy1jb25zdGFudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLWNoYXJhY3RlclxcXCJ9XX0sXFxcImludGVudC1hdHRyaWJ1dGVcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihpbnRlbnQpXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmludGVudC5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKFxcXFxcXFxcKSl8KD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmludGVudC5pbi1vdXQuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmludGVudC5pbi5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuaW50ZW50Lm91dC5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoPzooaW5cXFxcXFxcXHMqb3V0KXwoaW4pfChvdXQpKVxcXFxcXFxcYlxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LFxcXCJpbnRlcmZhY2UtYmxvY2stY29uc3RydWN0c1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNhYnN0cmFjdC1pbnRlcmZhY2UtYmxvY2stY29uc3RydWN0XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2V4cGxpY2l0LWludGVyZmFjZS1ibG9jay1jb25zdHJ1Y3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZ2VuZXJpYy1pbnRlcmZhY2UtYmxvY2stY29uc3RydWN0XFxcIn1dfSxcXFwiaW50ZXJmYWNlLXByb2NlZHVyZS1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89W15cXFxcXFxcXG4hXFxcXFxcXCInO10qXFxcXFxcXFxicHJvY2VkdXJlXFxcXFxcXFxiKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LnByb2NlZHVyZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcR1xcXFxcXFxccyooPyFcXFxcXFxcXGJwcm9jZWR1cmVcXFxcXFxcXGIpKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGJwcm9jZWR1cmVcXFxcXFxcXGIpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYXR0cmlidXRlLWxpc3QuaW50ZXJmYWNlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNtb2R1bGUtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtd29yZFxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHByb2NlZHVyZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIucHJvY2VkdXJlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiXFxcXFxcXFxHXFxcXFxcXFxzKig6OilcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvY2VkdXJlLW5hbWUtbGlzdFxcXCJ9XX1dfSxcXFwiaW50cmluc2ljLWF0dHJpYnV0ZVxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmludHJpbnNpYy5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKGludHJpbnNpYylcXFxcXFxcXGJcXFwifSxcXFwiaW50cmluc2ljLWZ1bmN0aW9uc1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGFjb3NofGFzaW5ofGF0YW5ofGJnZXxiZ3R8YmxlfGJsdHxkc2hpZnRsfGRzaGlmdHJ8ZmluZGxvY3xoeXBvdHxpYWxsfGlhbnl8aW1hZ2VfaW5kZXh8aXBhcml0eXxpc19jb250aWd1b3VzfGxjb2JvdW5kfGxlYWR6fG1hc2tbbHJdfG1lcmdlX2JpdHN8bm9ybTJ8bnVtX2ltYWdlc3xwYXJpdHl8cG9wY250fHBvcHBhcnxzaGlmdFthbHJdfHN0b3JhZ2Vfc2l6ZXx0aGlzX2ltYWdlfHRyYWlsenx1Y29ib3VuZClcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3VwcG9ydC5mdW5jdGlvbi5pbnRyaW5zaWMuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihiZXNzZWxfW2p5XVswMW5dfGVyZihjKF9zY2FsZWQpPyk/fGdhbW1hfGxvZ19nYW1tYSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3VwcG9ydC5mdW5jdGlvbi5pbnRyaW5zaWMuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihjb21tYW5kX2FyZ3VtZW50X2NvdW50fGV4dGVuZHNfdHlwZV9vZnxpc19pb3N0YXRfZW5kfGlzX2lvc3RhdF9lb3J8bmV3X2xpbmV8c2FtZV90eXBlX2FzfHNlbGVjdGVkX2NoYXJfa2luZClcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3VwcG9ydC5mdW5jdGlvbi5pbnRyaW5zaWMuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihpZWVlXyhjbGFzc3xjb3B5X3NpZ258aXNfKGZpbml0ZXxuYW58bmVnYXRpdmV8bm9ybWFsKXxsb2difG5leHRfYWZ0ZXJ8cmVtfHJpbnR8c2NhbGJ8c2VsZWN0ZWRfcmVhbF9raW5kfHN1cHBvcnRfKGRhdGF0eXBlfGRlbm9ybWFsfGRpdmlkZXxpbmZ8aW98bmFufHJvdW5kaW5nfHNxcnR8c3RhbmRhcmR8dW5kZXJmbG93X2NvbnRyb2wpfHVub3JkZXJlZHx2YWx1ZSkpXFxcXFxcXFxzKig/PVxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN1cHBvcnQuZnVuY3Rpb24uaW50cmluc2ljLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoaWVlZV9zdXBwb3J0XyhmbGFnfGhhbHRpbmcpKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdXBwb3J0LmZ1bmN0aW9uLmludHJpbnNpYy5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGNfKGFzc29jaWF0ZWR8ZnVubG9jfGxvY3xzaXplb2YpKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdXBwb3J0LmZ1bmN0aW9uLmludHJpbnNpYy5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoY29tcGlsZXJfKG9wdGlvbnN8dmVyc2lvbikpXFxcXFxcXFxzKig/PVxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN1cHBvcnQuZnVuY3Rpb24uaW50cmluc2ljLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIobnVsbClcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3VwcG9ydC5mdW5jdGlvbi5pbnRyaW5zaWMuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihhY2hhcnxhZGp1c3RsfGFkanVzdHJ8YWxsfGFsbG9jYXRlZHxhc3NvY2lhdGVkfGFueXxiaXRfc2l6ZXxidGVzdHxjZWlsaW5nfGNvdW50fGNzaGlmdHxkaWdpdHN8ZG90X3Byb2R1Y3R8ZW9zaGlmdHxlcHNpbG9ufGV4cG9uZW50fGZsb29yfGZyYWN0aW9ufGh1Z2V8aWFjaGFyfGlhbmR8aWJjbHJ8aWJpdHN8aWJzZXR8aWVvcnxpb3J8aXNoZnRjP3xraW5kfGxib3VuZHxsZW5fdHJpbXxsb2dpY2FsfG1hdG11bHxtYXhleHBvbmVudHxtYXhsb2N8bWF4dmFsfG1lcmdlfG1pbmV4cG9uZW50fG1pbmxvY3xtaW52YWx8bW9kdWxvfG5lYXJlc3R8bm90fHBhY2t8cHJlY2lzaW9ufHByZXNlbnR8cHJvZHVjdHxyYWRpeHxyYW5nZXxyZXBlYXR8cmVzaGFwZXxycnNwYWNpbmd8c2NhbGV8c2NhbnxzZWxlY3RlZF8oaW50fHJlYWwpX2tpbmR8c2V0X2V4cG9uZW50fHNoYXBlfHNpemV8c3BhY2luZ3xzcHJlYWR8c3VtfHRpbnl8dHJhbnNmZXJ8dHJhbnNwb3NlfHRyaW18dWJvdW5kfHVucGFja3x2ZXJpZnkpXFxcXFxcXFxzKig/PVxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN1cHBvcnQuZnVuY3Rpb24uaW50cmluc2ljLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoW2NkaV0/YWJzfGFjb3N8W2FkXWludHxbYWRdbmludHxhaW1hZ3xhbWF4WzAxXXxhbWluWzAxXXxkP2FzaW58ZD9hdGFufGQ/YXRhbjJ8Y2hhcnxjb25qZ3xbY2RdP2Nvc3xkP2Nvc2h8Y21wbHh8ZGJsZXxpP2RpbXxkbWF4MXxkbWluMXxkcHJvZHxbY2RdP2V4cHxmbG9hdHxpY2hhcnxpZGludHxpZml4fGluZGV4fGludHxsZW58bGdlfGxndHxsbGV8bGx0fFthY2RdP2xvZ3xbYWRdP2xvZzEwfG1heFswMV0/fG1pblswMV0/fFthZF0/bW9kfChpZCk/bmludHxyZWFsfFtkaV0/c2lnbnxbY2RdP3NpbnxkP3Npbmh8c25nbHxbY2RdP3NxcnR8ZD90YW58ZD90YW5oKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdXBwb3J0LmZ1bmN0aW9uLmludHJpbnNpYy5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19XX0sXFxcImludHJpbnNpYy1zdWJyb3V0aW5lc1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihkYXRlX2FuZF90aW1lfG12Yml0c3xyYW5kb21fbnVtYmVyfHJhbmRvbV9zZWVkfHN5c3RlbV9jbG9jaylcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24uc3Vicm91dGluZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihjcHVfdGltZSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24uc3Vicm91dGluZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihpZWVlXyhbZ3NdZXQpXyhyb3VuZGluZ3x1bmRlcmZsb3cpX21vZGUpXFxcXFxcXFxzKig/PVxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmZ1bmN0aW9uLnN1YnJvdXRpbmUuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoaWVlZV8oW2dzXWV0KV8oZmxhZ3xoYWx0aW5nX21vZGV8c3RhdHVzKSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24uc3Vicm91dGluZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD88IVxcXFxcXFxcRylcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihjX2ZfKHAoPzp8cm9jcClvaW50ZXIpKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5zdWJyb3V0aW5lLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKGV4ZWN1dGVfY29tbWFuZF9saW5lfGdldF9jb21tYW5kfGdldF9jb21tYW5kX2FyZ3VtZW50fGdldF9lbnZpcm9ubWVudF92YXJpYWJsZXxtb3ZlX2FsbG9jKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi5zdWJyb3V0aW5lLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX1dfSxcXFwiaW52YWxpZC1jaGFyYWN0ZXJcXFwiOntcXFwibWF0Y2hcXFwiOlxcXCIoP2kpW15cXFxcXFxcXG4hO1xcXFxcXFxcc10rXFxcIixcXFwibmFtZVxcXCI6XFxcImludmFsaWQuZXJyb3IuY2hhcmFjdGVyLmZvcnRyYW5cXFwifSxcXFwiaW52YWxpZC13b3JkXFxcIjp7XFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYlxcXFxcXFxcdytcXFxcXFxcXGJcXFwiLFxcXCJuYW1lXFxcIjpcXFwiaW52YWxpZC5lcnJvci53b3JkLmZvcnRyYW5cXFwifSxcXFwibGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihiaW5kKVxcXFxcXFxccypcXFxcXFxcXChcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIuYmluZC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCJcXFxcXFxcXCl8KD89XFxcXFxcXFxuKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoYylcXFxcXFxcXGJcXFwiLFxcXCJuYW1lXFxcIjpcXFwidmFyaWFibGUucGFyYW1ldGVyLmZvcnRyYW5cXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZHVtbXktdmFyaWFibGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0sXFxcImxpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxpbmUtY29udGludWF0aW9uLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD86XnwoPzw9OykpXFxcXFxcXFxzKigmKVxcXCJ9LHtcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcXHMqKCYpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxpbmUtY29udGludWF0aW9uLmZvcnRyYW5cXFwifX0sXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5saW5lLWNvbnRpbnVhdGlvbi5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKD9pKV4oPzpcXFxcXFxcXHMqKCYpKT9cXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxpbmUtY29udGludWF0aW9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcU1teIV0qXFxcIixcXFwibmFtZVxcXCI6XFxcImludmFsaWQuZXJyb3IubGluZS1jb250LmZvcnRyYW5cXFwifV19XX0sXFxcImxvZ2ljYWwtY29uc3RhbnRcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubGFuZ3VhZ2UubG9naWNhbC5mYWxzZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lmxhbmd1YWdlLmxvZ2ljYWwudHJ1ZS5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqKD86KFxcXFxcXFxcLmZhbHNlXFxcXFxcXFwuKXwoXFxcXFxcXFwudHJ1ZVxcXFxcXFxcLikpXFxcIn0sXFxcImxvZ2ljYWwtY29udHJvbC1leHByZXNzaW9uXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiXFxcXFxcXFxHKD89XFxcXFxcXFxzKlxcXFxcXFxcKClcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmV4cHJlc3Npb24uY29udHJvbC5sb2dpY2FsLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9XX0sXFxcImxvZ2ljYWwtb3BlcmF0b3JzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/aSkoXFxcXFxcXFxzKlxcXFxcXFxcLihhbmR8ZXF2Pz98bGV8bHR8Z2V8Z3R8bmV8bmVxdnxub3R8b3IpXFxcXFxcXFwuKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmxvZ2ljYWwuZm9ydHJhblxcXCJ9LHtcXFwibWF0Y2hcXFwiOlxcXCIoPT18Lz18Pj18KD88IT0pPnw8PT8pXFxcIixcXFwibmFtZVxcXCI6XFxcImtleXdvcmQubG9naWNhbC5mb3J0cmFuLm1vZGVyblxcXCJ9XX0sXFxcImxvZ2ljYWwtdHlwZVxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGxvZ2ljYWwpXFxcXFxcXFxzKig/PVxcXFxcXFxcKClcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5sb2dpY2FsLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJjb250ZW50TmFtZVxcXCI6XFxcIm1ldGEudHlwZS1zcGVjLmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0se1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLnR5cGUuY2hhcmFjdGVyLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5tdWx0aXBsaWNhdGlvbi5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGxvZ2ljYWwpXFxcXFxcXFxiKD86XFxcXFxcXFxzKihcXFxcXFxcXCopXFxcXFxcXFxzKihcXFxcXFxcXGQqKSk/XFxcIn1dfSxcXFwibW9kdWxlLWF0dHJpYnV0ZVxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLm1vZHVsZS5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKG1vZHVsZSlcXFxcXFxcXGIoPz1cXFxcXFxcXHMqKD86W1xcXFxcXFxcbiE7XXxbXlxcXFxcXFxcbiFcXFxcXFxcIic7XSpcXFxcXFxcXGIoPzpmdW5jdGlvbnxwcm9jZWR1cmV8c3Vicm91dGluZSlcXFxcXFxcXGIpKVxcXCJ9LFxcXCJtb2R1bGUtZGVmaW5pdGlvblxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGIobW9kdWxlKVxcXFxcXFxcYikoPyFbXlxcXFxcXFxcbiFcXFxcXFxcIic7XSpcXFxcXFxcXGIoPzpmdW5jdGlvbnxwcm9jZWR1cmV8c3Vicm91dGluZSlcXFxcXFxcXGIpXFxcIixcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5tb2R1bGUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm90aGVyLnByb2dyYW0uZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihtb2R1bGUpXFxcXFxcXFxiXFxcIn0se1xcXCJhcHBseUVuZFBhdHRlcm5MYXN0XFxcIjoxLFxcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmNsYXNzLm1vZHVsZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKD86KGVuZFxcXFxcXFxccyptb2R1bGUpKD86XFxcXFxcXFxzKyhbX2Etel1cXFxcXFxcXHcqKSk/fChlbmQpKVxcXFxcXFxcYlxcXFxcXFxccyooW15cXFxcXFxcXG4hO10rKT8oPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuZW5kbW9kdWxlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuY2xhc3MubW9kdWxlLmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5lbmRtb2R1bGUuZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLm1vZHVsZS1kZWZpbml0aW9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxcR1xcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGJlbmQoPzpcXFxcXFxcXHMqW1xcXFxcXFxcbiE7XXxcXFxcXFxcXHMqbW9kdWxlXFxcXFxcXFxiKSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5ibG9jay5zcGVjaWZpY2F0aW9uLm1vZHVsZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihjb250YWlucylcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5jb250YWlucy5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxzKmVuZCg/OlxcXFxcXFxccypbXFxcXFxcXFxuITtdfFxcXFxcXFxccyptb2R1bGVcXFxcXFxcXGIpKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmNvbnRhaW5zLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX1dfV19LFxcXCJuYW1lLWxpc3RcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxzKlthLXpdKVxcXCIsXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5uYW1lLWxpc3QuZm9ydHJhblxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hKTtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbnN0YW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNvcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50cmluc2ljLWZ1bmN0aW9uc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhcnJheS1jb25zdHJ1Y3RvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNicmFja2V0c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhc3NpZ25tZW50LWtleXdvcmRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjb3BlcmF0b3Ita2V5d29yZFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2YXJpYWJsZVxcXCJ9XX0sXFxcIm5hbWVkLWNvbnRyb2wtY29uc3RydWN0c1xcXCI6e1xcXCJhcHBseUVuZFBhdHRlcm5MYXN0XFxcIjoxLFxcXCJiZWdpblxcXCI6XFxcIig/aSkoW2Etel1cXFxcXFxcXHcqKVxcXFxcXFxccyooOikoPz1cXFxcXFxcXHMqKD86YXNzb2NpYXRlfGJsb2NrKD8hXFxcXFxcXFxzKmRhdGEpfGNyaXRpY2FsfGRvfGZvcmFsbHxpZnxzZWxlY3RcXFxcXFxcXHMqY2FzZXxzZWxlY3RcXFxcXFxcXHMqdHlwZXxzZWxlY3RcXFxcXFxcXHMqcmFua3x3aGVyZSlcXFxcXFxcXGIpXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLm5hbWVkLWNvbnN0cnVjdC5mb3J0cmFuLm1vZGVyblxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPyFcXFxcXFxcXHMqXFxcXFxcXFxiKD86YXNzb2NpYXRlfGJsb2NrKD8hXFxcXFxcXFxzKmRhdGEpfGNyaXRpY2FsfGRvfGZvcmFsbHxpZnxzZWxlY3RcXFxcXFxcXHMqY2FzZXxzZWxlY3RcXFxcXFxcXHMqdHlwZXxzZWxlY3RcXFxcXFxcXHMqcmFua3x3aGVyZSlcXFxcXFxcXGIpKD86XFxcXFxcXFxiKFxcXFxcXFxcMSlcXFxcXFxcXGIpPyhbXlxcXFxcXFxcbiE7XFxcXFxcXFxzXSo/KT8oPz1cXFxcXFxcXHMqW1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJtZXRhLmxhYmVsLmVuZC5uYW1lLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiaW52YWxpZC5lcnJvci5uYW1lZC1jb250cm9sLWNvbnN0cnVjdHMuZm9ydHJhbi5tb2Rlcm5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3VubmFtZWQtY29udHJvbC1jb25zdHJ1Y3RzXFxcIn1dfSxcXFwibmFtZWxpc3Qtc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihuYW1lbGlzdClcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5uYW1lbGlzdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LFxcXCJub24taW50cmluc2ljLWF0dHJpYnV0ZVxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLm5vbi1pbnRyaW5zaWMuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihub25faW50cmluc2ljKVxcXFxcXFxcYlxcXCJ9LFxcXCJub24tb3ZlcnJpZGFibGUtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIubm9uLW92ZXJyaWRhYmxlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIobm9uX292ZXJyaWRhYmxlKVxcXFxcXFxcYlxcXCJ9LFxcXCJub3Bhc3MtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIubm9wYXNzLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIobm9wYXNzKVxcXFxcXFxcYlxcXCJ9LFxcXCJudWxsaWZ5LXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIobnVsbGlmeSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLm51bGxpZnkuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50Lm51bGxpZnkuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0sXFxcIm51bWVyaWMtY29uc3RhbnRcXFwiOntcXFwibWF0Y2hcXFwiOlxcXCIoP2kpWy0rXT8oXFxcXFxcXFxiXFxcXFxcXFxkK1xcXFxcXFxcLj9cXFxcXFxcXGQqfFxcXFxcXFxcLlxcXFxcXFxcZCspKF9cXFxcXFxcXHcrfGRbLStdP1xcXFxcXFxcZCt8ZVstK10/XFxcXFxcXFxkKyhfXFxcXFxcXFx3Kyk/KT8oPyFbX2Etel0pXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMuZm9ydHJhblxcXCJ9LFxcXCJudW1lcmljLXR5cGVcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/Oihjb21wbGV4KXwoZG91YmxlXFxcXFxcXFxzKnByZWNpc2lvbil8KGRvdWJsZVxcXFxcXFxccypjb21wbGV4KXwoaW50ZWdlcil8KHJlYWwpKVxcXFxcXFxccyooPz1cXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLnR5cGUuY29tcGxleC5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5kb3VibGUuZm9ydHJhblxcXCJ9LFxcXCIzXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLnR5cGUuZG91YmxlY29tcGxleC5mb3J0cmFuXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5pbnRlZ2VyLmZvcnRyYW5cXFwifSxcXFwiNVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLnJlYWwuZm9ydHJhblxcXCJ9LFxcXCI2XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS50eXBlLXNwZWMuZm9ydHJhblxcXCIsXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXMtZHVtbXktdmFyaWFibGVzXFxcIn1dfSx7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5jb21wbGV4LmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLmRvdWJsZS5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5kb3VibGVjb21wbGV4LmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLmludGVnZXIuZm9ydHJhblxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLnR5cGUucmVhbC5mb3J0cmFuXFxcIn0sXFxcIjZcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5kaW1lbnNpb24uZm9ydHJhblxcXCJ9LFxcXCI3XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLm11bHRpcGxpY2F0aW9uLmZvcnRyYW5cXFwifSxcXFwiOFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQubnVtZXJpYy5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoPzooY29tcGxleCl8KGRvdWJsZVxcXFxcXFxccypwcmVjaXNpb24pfChkb3VibGVcXFxcXFxcXHMqY29tcGxleCl8KGludGVnZXIpfChyZWFsKXwoZGltZW5zaW9uKSlcXFxcXFxcXGIoPzpcXFxcXFxcXHMqKFxcXFxcXFxcKilcXFxcXFxcXHMqKFxcXFxcXFxcZCopKT9cXFwifV19LFxcXCJvcGVyYXRvci1rZXl3b3JkXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIob3BlcmF0b3IpXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZ2VuZXJpYy1zcGVjLm9wZXJhdG9yLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoXFxcXFxcXFwpKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2FyaXRobWV0aWMtb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2xvZ2ljYWwtb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3VzZXItZGVmaW5lZC1vcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSxcXFwib3BlcmF0b3JzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2FyaXRobWV0aWMtb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Fzc2lnbm1lbnQtb3BlcmF0b3JcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZGVyaXZlZC10eXBlLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNsb2dpY2FsLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwb2ludGVyLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNzdHJpbmctb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3VzZXItZGVmaW5lZC1vcGVyYXRvcnNcXFwifV19LFxcXCJvcHRpb25hbC1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5vcHRpb25hbC5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKG9wdGlvbmFsKVxcXFxcXFxcYlxcXCJ9LFxcXCJwYXJhbWV0ZXItYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIucGFyYW1ldGVyLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIocGFyYW1ldGVyKVxcXFxcXFxcYlxcXCJ9LFxcXCJwYXJlbnRoZXNlc1xcXCI6e1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxccyooXFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoXFxcXFxcXFwpKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbnN0YW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNvcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjYXJyYXktY29uc3RydWN0b3JcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50cmluc2ljLWZ1bmN0aW9uc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2YXJpYWJsZVxcXCJ9XX0sXFxcInBhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCI6e1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxccyooXFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoXFxcXFxcXFwpKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3Byb2NlZHVyZS1jYWxsLWR1bW15LXZhcmlhYmxlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbnN0YW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNvcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjYXJyYXktY29uc3RydWN0b3JcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50cmluc2ljLWZ1bmN0aW9uc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2YXJpYWJsZVxcXCJ9XX0sXFxcInBhc3MtYXR0cmlidXRlXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHBhc3MpXFxcXFxcXFxzKlxcXFxcXFxcKFxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5wYXNzLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIlxcXFxcXFxcKXwoPz1cXFxcXFxcXG4pXFxcIixcXFwicGF0dGVybnNcXFwiOltdfSx7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIucGFzcy5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHBhc3MpXFxcXFxcXFxiXFxcIn1dfSxcXFwicGF1c2Utc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIocGF1c2UpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucGF1c2UuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zdGF0ZW1lbnQuY29udHJvbC5wYXVzZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29uc3RhbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtY2hhcmFjdGVyXFxcIn1dfSxcXFwicG9pbnRlci1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5wb2ludGVyLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIocG9pbnRlcilcXFxcXFxcXGJcXFwifSxcXFwicG9pbnRlci1vcGVyYXRvcnNcXFwiOntcXFwibWF0Y2hcXFwiOlxcXCIoPT4pXFxcIixcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIucG9pbnQuZm9ydHJhblxcXCJ9LFxcXCJwcmVwcm9jZXNzb3JcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCJeXFxcXFxcXFxzKigjOj8pXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJlcHJvY2Vzc29yLmluZGljYXRvci5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCJcXFxcXFxcXG5cXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5wcmVwcm9jZXNzb3JcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItaWYtY29uc3RydWN0XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1zdGF0ZW1lbnRzXFxcIn1dfSxcXFwicHJlcHJvY2Vzc29yLWFyaXRobWV0aWMtb3BlcmF0b3JzXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3Iuc3VidHJhY3Rpb24uZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmFkZGl0aW9uLmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5kaXZpc2lvbi5mb3J0cmFuXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubXVsdGlwbGljYXRpb24uZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoLSl8KFxcXFxcXFxcKyl8KC8pfChcXFxcXFxcXCopXFxcIn0sXFxcInByZXByb2Nlc3Nvci1hc3NpZ25tZW50LW9wZXJhdG9yXFxcIjp7XFxcIm1hdGNoXFxcIjpcXFwiKD88IT0pKD0pKD8hPSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5hc3NpZ25tZW50LnByZXByb2Nlc3Nvci5mb3J0cmFuXFxcIn0sXFxcInByZXByb2Nlc3Nvci1jb21tZW50c1xcXCI6e1xcXCJiZWdpblxcXCI6XFxcIi9cXFxcXFxcXCpcXFwiLFxcXCJlbmRcXFwiOlxcXCJcXFxcXFxcXCovXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbW1lbnQucHJlcHJvY2Vzc29yXFxcIn0sXFxcInByZXByb2Nlc3Nvci1jb25zdGFudHNcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjY3BwLW51bWVyaWMtY29uc3RhbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLXN0cmluZy1jb25zdGFudFxcXCJ9XX0sXFxcInByZXByb2Nlc3Nvci1kZWZpbmUtc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoZGVmaW5lKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci5kZWZpbmUuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89XFxcXFxcXFxuKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnByZXByb2Nlc3Nvci5tYWNyby5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWNvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1jb25zdGFudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWxpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIn1dfSxcXFwicHJlcHJvY2Vzc29yLWRlZmluZWQtZnVuY3Rpb25cXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci5kZWZpbmVkLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihkZWZpbmVkKVxcXFxcXFxcYlxcXCJ9LFxcXCJwcmVwcm9jZXNzb3ItZXJyb3Itc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccyooZXJyb3IpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJlcHJvY2Vzc29yLmVycm9yLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVxcXFxcXFxcbilcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5wcmVwcm9jZXNzb3IubWFjcm8uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1jb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3Itc3RyaW5nLWNvbnN0YW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9XX0sXFxcInByZXByb2Nlc3Nvci1pZi1jb25zdHJ1Y3RcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoaWYpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJlcHJvY2Vzc29yLmlmLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVxcXFxcXFxcbilcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5wcmVwcm9jZXNzb3IuY29uZGl0aW9uYWwuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1jb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjcHAtbnVtZXJpYy1jb25zdGFudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItbG9naWNhbC1vcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWFyaXRobWV0aWMtb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1kZWZpbmVkLWZ1bmN0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKGlmZGVmKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci5pZmRlZi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1cXFxcXFxcXG4pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWNvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NwcC1udW1lcmljLWNvbnN0YW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1sb2dpY2FsLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItYXJpdGhtZXRpYy1vcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWxpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoaWZuZGVmKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci5pZm5kZWYuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89XFxcXFxcXFxuKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1jb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjcHAtbnVtZXJpYy1jb25zdGFudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItbG9naWNhbC1vcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWFyaXRobWV0aWMtb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKGVsc2UpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJlcHJvY2Vzc29yLmVsc2UuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89XFxcXFxcXFxuKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1jb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjcHAtbnVtZXJpYy1jb25zdGFudFxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKGVsaWYpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJlcHJvY2Vzc29yLmVsaWYuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89XFxcXFxcXFxuKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1jb21tZW50c1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjcHAtbnVtZXJpYy1jb25zdGFudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItbG9naWNhbC1vcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWFyaXRobWV0aWMtb3BlcmF0b3JzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1kZWZpbmVkLWZ1bmN0aW9uXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKGVuZGlmKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci5lbmRpZi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1cXFxcXFxcXG4pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWNvbW1lbnRzXFxcIn1dfV19LFxcXCJwcmVwcm9jZXNzb3ItaW5jbHVkZS1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKihpbmNsdWRlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci5pbmNsdWRlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVxcXFxcXFxcbilcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5wcmVwcm9jZXNzb3IuaW5jbHVkZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWNvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1zdHJpbmctY29uc3RhbnRcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiPFxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuYmVnaW4ucHJlcHJvY2Vzc29yLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIj5cXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQucHJlcHJvY2Vzc29yLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJzdHJpbmcucXVvdGVkLm90aGVyLmx0LWd0LmluY2x1ZGUucHJlcHJvY2Vzc29yLmZvcnRyYW5cXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGluZS1jb250aW51YXRpb24tb3BlcmF0b3JcXFwifV19LFxcXCJwcmVwcm9jZXNzb3ItbGluZS1jb250aW51YXRpb24tb3BlcmF0b3JcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcXHMqKFxcXFxcXFxcXFxcXFxcXFwpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5jaGFyYWN0ZXIuZXNjYXBlLmxpbmUtY29udGludWF0aW9uLnByZXByb2Nlc3Nvci5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpXlxcXCJ9LFxcXCJwcmVwcm9jZXNzb3ItbG9naWNhbC1vcGVyYXRvcnNcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5sb2dpY2FsLnByZXByb2Nlc3Nvci5hbmQuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxvZ2ljYWwucHJlcHJvY2Vzc29yLmVxdWFscy5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubG9naWNhbC5wcmVwcm9jZXNzb3Iubm90X2VxdWFscy5mb3J0cmFuXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubG9naWNhbC5wcmVwcm9jZXNzb3Iub3IuZm9ydHJhblxcXCJ9LFxcXCI1XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxvZ2ljYWwucHJlcHJvY2Vzc29yLmxlc3NfZXEuZm9ydHJhblxcXCJ9LFxcXCI2XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxvZ2ljYWwucHJlcHJvY2Vzc29yLm1vcmVfZXEuZm9ydHJhblxcXCJ9LFxcXCI3XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxvZ2ljYWwucHJlcHJvY2Vzc29yLmxlc3MuZm9ydHJhblxcXCJ9LFxcXCI4XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxvZ2ljYWwucHJlcHJvY2Vzc29yLm1vcmUuZm9ydHJhblxcXCJ9LFxcXCI5XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxvZ2ljYWwucHJlcHJvY2Vzc29yLmNvbXBsZW1lbnRhcnkuZm9ydHJhblxcXCJ9LFxcXCIxMFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5sb2dpY2FsLnByZXByb2Nlc3Nvci54b3IuZm9ydHJhblxcXCJ9LFxcXCIxMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5sb2dpY2FsLnByZXByb2Nlc3Nvci5iaXRhbmQuZm9ydHJhblxcXCJ9LFxcXCIxMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5sb2dpY2FsLnByZXByb2Nlc3Nvci5ub3QuZm9ydHJhblxcXCJ9LFxcXCIxM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5sb2dpY2FsLnByZXByb2Nlc3Nvci5iaXRvci5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIigmJil8KD09KXwoIT0pfChcXFxcXFxcXHxcXFxcXFxcXHwpfCg8PSl8KD49KXwoPCl8KD4pfCh+KXwoXFxcXFxcXFxeKXwoJil8KCEpfChcXFxcXFxcXHwpXFxcIixcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubG9naWNhbC5wcmVwcm9jZXNzb3IuZm9ydHJhblxcXCJ9LFxcXCJwcmVwcm9jZXNzb3Itb3BlcmF0b3JzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1saW5lLWNvbnRpbnVhdGlvbi1vcGVyYXRvclxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItbG9naWNhbC1vcGVyYXRvcnNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWFyaXRobWV0aWMtb3BlcmF0b3JzXFxcIn1dfSxcXFwicHJlcHJvY2Vzc29yLXByYWdtYS1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihwcmFnbWEpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJlcHJvY2Vzc29yLnByYWdtYS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1cXFxcXFxcXG4pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEucHJlcHJvY2Vzc29yLnByYWdtYS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWNvbW1lbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1zdHJpbmctY29uc3RhbnRcXFwifV19LFxcXCJwcmVwcm9jZXNzb3Itc3RhdGVtZW50c1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItZGVmaW5lLXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItZXJyb3Itc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ByZXByb2Nlc3Nvci1pbmNsdWRlLXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItcHJlcHJvY2Vzc29yLXByYWdtYS1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLXVuZGVmaW5lLXN0YXRlbWVudFxcXCJ9XX0sXFxcInByZXByb2Nlc3Nvci1zdHJpbmctY29uc3RhbnRcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiXFxcXFxcXCJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjBcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmJlZ2luLnByZXByb2Nlc3Nvci5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCJcXFxcXFxcIlxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjBcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uc3RyaW5nLmVuZC5wcmVwcm9jZXNzb3IuZm9ydHJhblxcXCJ9fSxcXFwibmFtZVxcXCI6XFxcInN0cmluZy5xdW90ZWQuZG91YmxlLmluY2x1ZGUucHJlcHJvY2Vzc29yLmZvcnRyYW5cXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiJ1xcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuYmVnaW4ucHJlcHJvY2Vzc29yLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIidcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQucHJlcHJvY2Vzc29yLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJzdHJpbmcucXVvdGVkLnNpbmdsZS5pbmNsdWRlLnByZXByb2Nlc3Nvci5mb3J0cmFuXFxcIn1dfSxcXFwicHJlcHJvY2Vzc29yLXVuZGVmaW5lLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKHVuZGVmKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnByZXByb2Nlc3Nvci51bmRlZi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1cXFxcXFxcXG4pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEucHJlcHJvY2Vzc29yLnVuZGVmLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcmVwcm9jZXNzb3ItY29tbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJlcHJvY2Vzc29yLWxpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIn1dfSxcXFwicHJpdmF0ZS1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5wcml2YXRlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIocHJpdmF0ZSlcXFxcXFxcXGJcXFwifSxcXFwicHJvY2VkdXJlLWNhbGwtZHVtbXktdmFyaWFibGVcXFwiOntcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKihbYS16XVxcXFxcXFxcdyopKD89XFxcXFxcXFxzKj0pKD8hXFxcXFxcXFxzKj09KVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJ2YXJpYWJsZS5wYXJhbWV0ZXIuZHVtbXktdmFyaWFibGUuZm9ydHJhbi5tb2Rlcm5cXFwifSxcXFwicHJvY2VkdXJlLWRlZmluaXRpb25cXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89W15cXFxcXFxcXG4hXFxcXFxcXCInO10qXFxcXFxcXFxibW9kdWxlXFxcXFxcXFxzK3Byb2NlZHVyZVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnByb2NlZHVyZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIobW9kdWxlXFxcXFxcXFxzK3Byb2NlZHVyZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIucHJvY2VkdXJlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoW2Etel1cXFxcXFxcXHcqKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24ucHJvY2VkdXJlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKD86KGVuZFxcXFxcXFxccypwcm9jZWR1cmUpKD86XFxcXFxcXFxzKyhbX2Etel1cXFxcXFxcXHcqKSk/fChlbmQpKVxcXFxcXFxcYlxcXFxcXFxccyooW15cXFxcXFxcXG4hO10rKT8oPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuZW5kcHJvY2VkdXJlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24ucHJvY2VkdXJlLmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5lbmRwcm9jZWR1cmUuZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLnByb2NlZHVyZS1kZWZpbml0aW9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIlxcXFxcXFxcRyg/IVxcXFxcXFxccypbXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuZmlyc3QtbGluZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC1jaGFyYWN0ZXJcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD8hXFxcXFxcXFxzKig/OmNvbnRhaW5zXFxcXFxcXFxifGVuZFxcXFxcXFxccypbXFxcXFxcXFxuITtdfGVuZFxcXFxcXFxccypwcm9jZWR1cmVcXFxcXFxcXGIpKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXHMqKD86Y29udGFpbnNcXFxcXFxcXGJ8ZW5kXFxcXFxcXFxzKltcXFxcXFxcXG4hO118ZW5kXFxcXFxcXFxzKnByb2NlZHVyZVxcXFxcXFxcYikpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYmxvY2suc3BlY2lmaWNhdGlvbi5wcm9jZWR1cmUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJHNlbGZcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKihjb250YWlucylcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5jb250YWlucy5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxzKmVuZCg/OlxcXFxcXFxccypbXFxcXFxcXFxuITtdfFxcXFxcXFxccypwcm9jZWR1cmVcXFxcXFxcXGIpKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmNvbnRhaW5zLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRzZWxmXFxcIn1dfV19XX1dfSxcXFwicHJvY2VkdXJlLW5hbWVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24ucHJvY2VkdXJlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoW2Etel1cXFxcXFxcXHcqKVxcXFxcXFxcYlxcXCJ9LFxcXCJwcm9jZWR1cmUtbmFtZS1saXN0XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxccypbYS16XSlcXFwiLFxcXCJjb250ZW50TmFtZVxcXCI6XFxcIm1ldGEubmFtZS1saXN0LmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/IVxcXFxcXFxccypcXFxcXFxcXG4pXFxcIixcXFwiZW5kXFxcIjpcXFwiKCwpfCg/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvY2VkdXJlLW5hbWVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcG9pbnRlci1vcGVyYXRvcnNcXFwifV19XX0sXFxcInByb2NlZHVyZS1zcGVjaWZpY2F0aW9uLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGJwcm9jZWR1cmVcXFxcXFxcXGIpXFxcIixcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zcGVjaWZpY2F0aW9uLnByb2NlZHVyZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvY2VkdXJlLXR5cGVcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD89XFxcXFxcXFxzKigsfDo6fFxcXFxcXFxcKCkpXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLmF0dHJpYnV0ZS1saXN0LnByb2NlZHVyZS5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKXxefCg/PD0mKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiFcXFxcXFxcXCYsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYWNjZXNzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRlbnQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI29wdGlvbmFsLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwb2ludGVyLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcm90ZWN0ZWQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3NhdmUtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtd29yZFxcXCJ9XX1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvY2VkdXJlLW5hbWUtbGlzdFxcXCJ9XX0sXFxcInByb2NlZHVyZS10eXBlXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIocHJvY2VkdXJlKVxcXFxcXFxccyooXFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS50eXBlLnByb2NlZHVyZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLmxlZnQuZm9ydHJhblxcXCJ9fSxcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLnR5cGUtc3BlYy5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKFxcXFxcXFxcKSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5yaWdodC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiN0eXBlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwcm9jZWR1cmUtbmFtZVxcXCJ9XX0se1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLnR5cGUucHJvY2VkdXJlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihwcm9jZWR1cmUpXFxcXFxcXFxiXFxcIn1dfSxcXFwicHJvZ3JhbS1kZWZpbml0aW9uXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcYihwcm9ncmFtKVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnByb2dyYW0uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucHJvZ3JhbS5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKHByb2dyYW0pXFxcXFxcXFxiXFxcIn0se1xcXCJhcHBseUVuZFBhdHRlcm5MYXN0XFxcIjoxLFxcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLnByb2dyYW0uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/OihlbmRcXFxcXFxcXHMqcHJvZ3JhbSkoPzpcXFxcXFxcXHMrKFtfYS16XVxcXFxcXFxcdyopKT98KGVuZCkpXFxcXFxcXFxiXFxcXFxcXFxzKihbXlxcXFxcXFxcbiE7XSspPyg/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZHByb2dyYW0uZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5wcm9ncmFtLmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmVuZHByb2dyYW0uZm9ydHJhblxcXCJ9LFxcXCI0XFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJpbnZhbGlkLmVycm9yLnByb2dyYW0tZGVmaW5pdGlvbi5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcXEdcXFwiLFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxiZW5kKD86XFxcXFxcXFxzKltcXFxcXFxcXG4hO118XFxcXFxcXFxzKnByb2dyYW1cXFxcXFxcXGIpKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLnNwZWNpZmljYXRpb24ucHJvZ3JhbS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihjb250YWlucylcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5jb250YWlucy5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89ZW5kKD86XFxcXFxcXFxzKltcXFxcXFxcXG4hO118XFxcXFxcXFxzKnByb2dyYW1cXFxcXFxcXGIpKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLmNvbnRhaW5zLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX1dfV19LFxcXCJwcm90ZWN0ZWQtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIucHJvdGVjdGVkLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIocHJvdGVjdGVkKVxcXFxcXFxcYlxcXCJ9LFxcXCJwdWJsaWMtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIucHVibGljLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIocHVibGljKVxcXFxcXFxcYlxcXCJ9LFxcXCJwdXJlLWF0dHJpYnV0ZVxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLmltcHVyZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIucHVyZS5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKD86KGltcHVyZSl8KHB1cmUpKVxcXFxcXFxcYlxcXCJ9LFxcXCJyZWN1cnNpdmUtYXR0cmlidXRlXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIubm9uX3JlY3Vyc2l2ZS5mb3J0cmFuXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UubW9kaWZpZXIucmVjdXJzaXZlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoPzoobm9uX3JlY3Vyc2l2ZSl8KHJlY3Vyc2l2ZSkpXFxcXFxcXFxiXFxcIn0sXFxcInJlc3VsdC1zdGF0ZW1lbnRcXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihyZXN1bHQpXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucmVzdWx0LmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoXFxcXFxcXFwpKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2R1bW15LXZhcmlhYmxlXFxcIn1dfSxcXFwicmV0dXJuLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHJldHVybilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5yZXR1cm4uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zdGF0ZW1lbnQuY29udHJvbC5yZXR1cm4uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtY2hhcmFjdGVyXFxcIn1dfSxcXFwic2F2ZS1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5zYXZlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoc2F2ZSlcXFxcXFxcXGJcXFwifSxcXFwic2VsZWN0LWNhc2UtY29uc3RydWN0XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihzZWxlY3RcXFxcXFxcXHMqY2FzZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5zZWxlY3RjYXNlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKnNlbGVjdClcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kc2VsZWN0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLnNlbGVjdC5jYXNlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGNhc2UpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuY2FzZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmRlZmF1bHQuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihkZWZhdWx0KVxcXFxcXFxcYlxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSxcXFwic2VsZWN0LXJhbmstY29uc3RydWN0XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihzZWxlY3RcXFxcXFxcXHMqcmFuaylcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5zZWxlY3RyYW5rLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKnNlbGVjdClcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kc2VsZWN0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLnNlbGVjdC5yYW5rLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKHJhbmspXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wucmFuay5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmRlZmF1bHQuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihkZWZhdWx0KVxcXFxcXFxcYlxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfSxcXFwic2VsZWN0LXR5cGUtY29uc3RydWN0XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihzZWxlY3RcXFxcXFxcXHMqdHlwZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQuY29udHJvbC5zZWxlY3R0eXBlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXGIoZW5kXFxcXFxcXFxzKnNlbGVjdClcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kc2VsZWN0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLnNlbGVjdC50eXBlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlc1xcXCJ9LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKD86KGNsYXNzKXwodHlwZSkpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuY2xhc3MuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wudHlwZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoP2kpKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmRlZmF1bHQuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihkZWZhdWx0KVxcXFxcXFxcYlxcXCJ9LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmlzLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxcR1xcXFxcXFxccypcXFxcXFxcXGIoaXMpXFxcXFxcXFxiXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludmFsaWQtd29yZFxcXCJ9XX0se1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LFxcXCJzZXF1ZW5jZS1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci5zZXF1ZW5jZS5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHNlcXVlbmNlKVxcXFxcXFxcYlxcXCJ9LFxcXCJzcGVjaWZpY2F0aW9uLXN0YXRlbWVudHNcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYXR0cmlidXRlLXNwZWNpZmljYXRpb24tc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1vbi1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZGF0YS1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZXF1aXZhbGVuY2Utc3RhdGVtZW50XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ltcGxpY2l0LXN0YXRlbWVudFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNuYW1lbGlzdC1zdGF0ZW1lbnRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjdXNlLXN0YXRlbWVudFxcXCJ9XX0sXFxcInN0b3Atc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoc3RvcClcXFxcXFxcXGIoPzpcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGIpP1xcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnN0b3AuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJtZXRhLmxhYmVsLnN0b3Auc3RvcFxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zdGF0ZW1lbnQuY29udHJvbC5zdG9wLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb25zdGFudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjc3RyaW5nLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLWNoYXJhY3RlclxcXCJ9XX0sXFxcInN0cmluZy1jb25zdGFudFxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYXBwbHlFbmRQYXR0ZXJuTGFzdFxcXCI6MSxcXFwiYmVnaW5cXFwiOlxcXCInXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpbi5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCInXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kLmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJzdHJpbmcucXVvdGVkLnNpbmdsZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiJydcXFwiLFxcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQuY2hhcmFjdGVyLmVzY2FwZS5hcG9zdHJvcGhlLmZvcnRyYW5cXFwifV19LHtcXFwiYXBwbHlFbmRQYXR0ZXJuTGFzdFxcXCI6MSxcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcIlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuYmVnaW4uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiXFxcXFxcXCJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5lbmQuZm9ydHJhblxcXCJ9fSxcXFwibmFtZVxcXCI6XFxcInN0cmluZy5xdW90ZWQuZG91YmxlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcIlxcXFxcXFwiXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUucXVvdGUuZm9ydHJhblxcXCJ9XX1dfSxcXFwic3RyaW5nLWxpbmUtY29udGludWF0aW9uLW9wZXJhdG9yXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKCYpKD89XFxcXFxcXFxzKlxcXFxcXFxcbilcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IubGluZS1jb250aW51YXRpb24uZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKV4oPzooPz1cXFxcXFxcXHMqW14hXFxcXFxcXFwmXFxcXFxcXFxzXSl8XFxcXFxcXFxzKigmKSlcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLm9wZXJhdG9yLmxpbmUtY29udGludWF0aW9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvbW1lbnRzXFxcIn0se1xcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcUy4qXFxcIixcXFwibmFtZVxcXCI6XFxcImludmFsaWQuZXJyb3Iuc3RyaW5nLWxpbmUtY29udC5mb3J0cmFuXFxcIn1dfSxcXFwic3RyaW5nLW9wZXJhdG9yc1xcXCI6e1xcXCJtYXRjaFxcXCI6XFxcIigvLylcXFwiLFxcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5jb25jYXRpbmF0aW9uLmZvcnRyYW5cXFwifSxcXFwic3VibW9kdWxlLWRlZmluaXRpb25cXFwiOntcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD89XFxcXFxcXFxiKHN1Ym1vZHVsZSlcXFxcXFxcXHMqXFxcXFxcXFwoKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3VibW9kdWxlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxHXFxcXFxcXFxzKlxcXFxcXFxcYihzdWJtb2R1bGUpXFxcXFxcXFxzKihcXFxcXFxcXCgpXFxcXFxcXFxzKihcXFxcXFxcXHcrKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5zdWJtb2R1bGUuZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifSxcXFwiM1xcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuY2xhc3Muc3VibW9kdWxlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIihcXFxcXFxcXCkpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W119LHtcXFwiYXBwbHlFbmRQYXR0ZXJuTGFzdFxcXCI6MSxcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihbYS16XVxcXFxcXFxcdyopXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5tb2R1bGUuc3VibW9kdWxlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKD86KGVuZFxcXFxcXFxccypzdWJtb2R1bGUpKD86XFxcXFxcXFxzKyhbX2Etel1cXFxcXFxcXHcqKSk/fChlbmQpKVxcXFxcXFxcYlxcXFxcXFxccyooW15cXFxcXFxcXG4hO10rKT8oPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuZW5kc3VibW9kdWxlLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUubW9kdWxlLnN1Ym1vZHVsZS5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuZW5kc3VibW9kdWxlLmZvcnRyYW5cXFwifSxcXFwiNFxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiaW52YWxpZC5lcnJvci5zdWJtb2R1bGUuZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiXFxcXFxcXFxHXFxcIixcXFwiZW5kXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcYmVuZCg/OlxcXFxcXFxccypbXFxcXFxcXFxuITtdfFxcXFxcXFxccypzdWJtb2R1bGVcXFxcXFxcXGIpKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmJsb2NrLnNwZWNpZmljYXRpb24uc3VibW9kdWxlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGNvbnRhaW5zKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbnRhaW5zLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXHMqZW5kKD86XFxcXFxcXFxzKltcXFxcXFxcXG4hO118XFxcXFxcXFxzKnN1Ym1vZHVsZVxcXFxcXFxcYikpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYmxvY2suY29udGFpbnMuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19XX0sXFxcInN1YnJvdXRpbmUtZGVmaW5pdGlvblxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPz0oW15cXFxcXFxcXG4hXFxcXFxcXCInOjtdKD8hXFxcXFxcXFxiZW5kKSkqXFxcXFxcXFxic3Vicm91dGluZVxcXFxcXFxcYilcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN1YnJvdXRpbmUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXEdcXFxcXFxcXHMqKD8hXFxcXFxcXFxic3Vicm91dGluZVxcXFxcXFxcYikpXFxcIixcXFwiZW5kXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcYnN1YnJvdXRpbmVcXFxcXFxcXGIpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYXR0cmlidXRlLWxpc3Quc3Vicm91dGluZS5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjZWxlbWVudGFsLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNtb2R1bGUtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3B1cmUtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3JlY3Vyc2l2ZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSx7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIoc3Vicm91dGluZSlcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuc3Vicm91dGluZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmZ1bmN0aW9uLnN1YnJvdXRpbmUuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD9pKVxcXFxcXFxcYig/OihlbmRcXFxcXFxcXHMqc3Vicm91dGluZSkoPzpcXFxcXFxcXHMrKFtfYS16XVxcXFxcXFxcdyopKT98KGVuZCkpXFxcXFxcXFxiXFxcXFxcXFxzKihbXlxcXFxcXFxcbiE7XSspPyg/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vdGhlci5lbmRzdWJyb3V0aW5lLmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUuZnVuY3Rpb24uc3Vicm91dGluZS5mb3J0cmFuXFxcIn0sXFxcIjNcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3RoZXIuZW5kc3Vicm91dGluZS5mb3J0cmFuXFxcIn0sXFxcIjRcXFwiOntcXFwibmFtZVxcXCI6XFxcImludmFsaWQuZXJyb3Iuc3Vicm91dGluZS5mb3J0cmFuXFxcIn19LFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcXEcoPyFcXFxcXFxcXHMqW1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLmZpcnN0LWxpbmUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2R1bW15LXZhcmlhYmxlLWxpc3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCIoP2kpKD8hXFxcXFxcXFxiZW5kKD86XFxcXFxcXFxzKltcXFxcXFxcXG4hO118XFxcXFxcXFxzKnN1YnJvdXRpbmVcXFxcXFxcXGIpKVxcXCIsXFxcImVuZFxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXGJlbmQoPzpcXFxcXFxcXHMqW1xcXFxcXFxcbiE7XXxcXFxcXFxcXHMqc3Vicm91dGluZVxcXFxcXFxcYikpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYmxvY2suc3BlY2lmaWNhdGlvbi5zdWJyb3V0aW5lLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGNvbnRhaW5zKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLmNvbnRhaW5zLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/aSkoPz1lbmQoPzpcXFxcXFxcXHMqW1xcXFxcXFxcbiE7XXxcXFxcXFxcXHMqc3Vicm91dGluZVxcXFxcXFxcYikpXFxcIixcXFwibmFtZVxcXCI6XFxcIm1ldGEuYmxvY2suY29udGFpbnMuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19XX1dfSxcXFwic3luYy1hbGwtc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihzeW5jICg/OmFsbHxtZW1vcnkpKShcXFxcXFxcXHMqKD89XFxcXFxcXFwoKSk/XFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuc3luYy1hbGwtbWVtb3J5LmZvcnRyYW5cXFwifSxcXFwiMlxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMubGVmdC5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLnBhcmVudGhlc2VzLnJpZ2h0LmZvcnRyYW5cXFwifX0sXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5zeW5jLWFsbC1tZW1vcnkuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0sXFxcInN5bmMtc3RhdGVtZW50XFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKVxcXFxcXFxcYihzeW5jICg/OmltYWdlc3x0ZWFtKSlcXFxcXFxcXHMqKD89XFxcXFxcXFwoKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnN5bmMtaW1hZ2VzLXRlYW0uZm9ydHJhblxcXCJ9LFxcXCIyXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5wYXJlbnRoZXNlcy5sZWZ0LmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24ucGFyZW50aGVzZXMucmlnaHQuZm9ydHJhblxcXCJ9fSxcXFwibmFtZVxcXCI6XFxcIm1ldGEuc3RhdGVtZW50LnN5bmMtaW1hZ2VzLXRlYW0uZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmVudGhlc2VzLWR1bW15LXZhcmlhYmxlc1xcXCJ9XX0sXFxcInRhcmdldC1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci50YXJnZXQuZm9ydHJhblxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYih0YXJnZXQpXFxcXFxcXFxiXFxcIn0sXFxcInR5cGUtc3BlY2lmaWNhdGlvbi1zdGF0ZW1lbnRzXFxcIjp7XFxcImJlZ2luXFxcIjpcXFwiKD9pKSg/PVxcXFxcXFxcYig/OmNoYXJhY3RlcnxjbGFzc3xjb21wbGV4fGRvdWJsZVxcXFxcXFxccypwcmVjaXNpb258ZG91YmxlXFxcXFxcXFxzKmNvbXBsZXh8aW50ZWdlcnxsb2dpY2FsfHJlYWx8dHlwZXxkaW1lbnNpb24pXFxcXFxcXFxiKD8hW15cXFxcXFxcXG4hXFxcXFxcXCInOjtdKlxcXFxcXFxcYmZ1bmN0aW9uXFxcXFxcXFxiKSlcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuISk7XSlcXFwiLFxcXCJuYW1lXFxcIjpcXFwibWV0YS5zcGVjaWZpY2F0aW9uLnR5cGUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI3R5cGVzXFxcIn0se1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooLHw6OikpXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLmF0dHJpYnV0ZS1saXN0LnR5cGUtc3BlY2lmaWNhdGlvbi1zdGF0ZW1lbnRzLmZvcnRyYW5cXFwiLFxcXCJlbmRcXFwiOlxcXCIoOjopfCg/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwiZW5kQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5vcGVyYXRvci5kb3VibGUtY29sb24uZm9ydHJhblxcXCJ9fSxcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiKCwpfF58KD88PSYpXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5jb21tYS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz06OnxbXFxcXFxcXFxuIVxcXFxcXFxcJiw7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNhY2Nlc3MtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2FsbG9jYXRhYmxlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNhc3luY2hyb25vdXMtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NvZGltZW5zaW9uLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb250aWd1b3VzLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkaW1lbnNpb24tYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2V4dGVybmFsLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnRlbnQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2ludHJpbnNpYy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbGFuZ3VhZ2UtYmluZGluZy1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjb3B0aW9uYWwtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3BhcmFtZXRlci1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcG9pbnRlci1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjcHJvdGVjdGVkLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNzYXZlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN0YXJnZXQtYXR0cmlidXRlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ZhbHVlLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiN2b2xhdGlsZS1hdHRyaWJ1dGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfV19LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNuYW1lLWxpc3RcXFwifV19LFxcXCJ0eXBlc1xcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNjaGFyYWN0ZXItdHlwZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkZXJpdmVkLXR5cGVcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjbG9naWNhbC10eXBlXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI251bWVyaWMtdHlwZVxcXCJ9XX0sXFxcInVubmFtZWQtY29udHJvbC1jb25zdHJ1Y3RzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI2Fzc29jaWF0ZS1jb25zdHJ1Y3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjYmxvY2stY29uc3RydWN0XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI2NyaXRpY2FsLWNvbnN0cnVjdFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNkby1jb25zdHJ1Y3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZm9yYWxsLWNvbnN0cnVjdFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpZi1jb25zdHJ1Y3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjc2VsZWN0LWNhc2UtY29uc3RydWN0XFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3NlbGVjdC10eXBlLWNvbnN0cnVjdFxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNzZWxlY3QtcmFuay1jb25zdHJ1Y3RcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjd2hlcmUtY29uc3RydWN0XFxcIn1dfSxcXFwidXNlLXN0YXRlbWVudFxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIodXNlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLnVzZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC51c2UuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/PVxcXFxcXFxccyooLHw6OnxcXFxcXFxcXCgpKVxcXCIsXFxcImNvbnRlbnROYW1lXFxcIjpcXFwibWV0YS5hdHRyaWJ1dGUtbGlzdC5uYW1lbGlzdC5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKDo6KXwoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZENhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IuZG91YmxlLWNvbG9uLmZvcnRyYW5cXFwifX0sXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiEsO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW50cmluc2ljLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNub24taW50cmluc2ljLWF0dHJpYnV0ZVxcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNpbnZhbGlkLXdvcmRcXFwifV19XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJiZWdpbkNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImVudGl0eS5uYW1lLmNsYXNzLm1vZHVsZS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIigsKVxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwicHVuY3R1YXRpb24uY29tbWEuZm9ydHJhblxcXCJ9fSxcXFwiZW5kXFxcIjpcXFwiKD89Ojp8W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxzKlxcXFxcXFxcYihvbmx5XFxcXFxcXFxzKjopXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wub25seS5mb3J0cmFuXFxcIn19LFxcXCJlbmRcXFwiOlxcXCIoPz1bXFxcXFxcXFxuITtdKVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJpbmNsdWRlXFxcIjpcXFwiI29wZXJhdG9yLWtleXdvcmRcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPz1cXFxcXFxcXHMqW2Etel0pXFxcIixcXFwiY29udGVudE5hbWVcXFwiOlxcXCJtZXRhLm5hbWUtbGlzdC5mb3J0cmFuXFxcIixcXFwiZW5kXFxcIjpcXFwiKD89W1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNvcGVyYXRvci1rZXl3b3JkXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiJGJhc2VcXFwifV19XX1dfV19LFxcXCJ1c2VyLWRlZmluZWQtb3BlcmF0b3JzXFxcIjp7XFxcImNhcHR1cmVzXFxcIjp7XFxcIjFcXFwiOntcXFwibmFtZVxcXCI6XFxcImtleXdvcmQub3BlcmF0b3IudXNlci1kZWZpbmVkLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccyooXFxcXFxcXFwuW2Etel0rXFxcXFxcXFwuKVxcXCJ9LFxcXCJ2YWx1ZS1hdHRyaWJ1dGVcXFwiOntcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwic3RvcmFnZS5tb2RpZmllci52YWx1ZS5mb3J0cmFuXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKHZhbHVlKVxcXFxcXFxcYlxcXCJ9LFxcXCJ2YXJpYWJsZVxcXCI6e1xcXCJhcHBseUVuZFBhdHRlcm5MYXN0XFxcIjoxLFxcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXGIoPz1bYS16XSlcXFwiLFxcXCJlbmRcXFwiOlxcXCIoPzwhXFxcXFxcXFxHKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnBhcmFtZXRlci5mb3J0cmFuXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjYnJhY2tldHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZGVyaXZlZC10eXBlLW9wZXJhdG9yc1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNwYXJlbnRoZXNlcy1kdW1teS12YXJpYWJsZXNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjd29yZFxcXCJ9XX0sXFxcInZvbGF0aWxlLWF0dHJpYnV0ZVxcXCI6e1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJzdG9yYWdlLm1vZGlmaWVyLnZvbGF0aWxlLmZvcnRyYW5cXFwifX0sXFxcIm1hdGNoXFxcIjpcXFwiKD9pKVxcXFxcXFxccypcXFxcXFxcXGIodm9sYXRpbGUpXFxcXFxcXFxiXFxcIn0sXFxcIndoZXJlLWNvbnN0cnVjdFxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiYXBwbHlFbmRQYXR0ZXJuTGFzdFxcXCI6MSxcXFwiYmVnaW5cXFwiOlxcXCIoP2kpXFxcXFxcXFxiKHdoZXJlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLndoZXJlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PCFcXFxcXFxcXEcpXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjbG9naWNhbC1jb250cm9sLWV4cHJlc3Npb25cXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiKD88PVxcXFxcXFxcKSkoPz1cXFxcXFxcXHMqW1xcXFxcXFxcbiE7XSlcXFwiLFxcXCJlbmRcXFwiOlxcXCIoP2kpXFxcXFxcXFxiKGVuZFxcXFxcXFxccyp3aGVyZSlcXFxcXFxcXGJcXFwiLFxcXCJlbmRDYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZW5kd2hlcmUuZm9ydHJhblxcXCJ9fSxcXFwibmFtZVxcXCI6XFxcIm1ldGEuYmxvY2sud2hlcmUuZm9ydHJhblxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXHMqXFxcXFxcXFxiKGVsc2VcXFxcXFxcXHMqd2hlcmUpXFxcXFxcXFxiXFxcIixcXFwiYmVnaW5DYXB0dXJlc1xcXCI6e1xcXCIxXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJrZXl3b3JkLmNvbnRyb2wuZWxzZXdoZXJlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSx7XFxcImluY2x1ZGVcXFwiOlxcXCIkYmFzZVxcXCJ9XX0se1xcXCJiZWdpblxcXCI6XFxcIig/aSkoPzw9XFxcXFxcXFwpKSg/IVxcXFxcXFxccypbXFxcXFxcXFxuITtdKVxcXCIsXFxcImVuZFxcXCI6XFxcIlxcXFxcXFxcblxcXCIsXFxcIm5hbWVcXFwiOlxcXCJtZXRhLnN0YXRlbWVudC5jb250cm9sLndoZXJlLmZvcnRyYW5cXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiRiYXNlXFxcIn1dfV19XX0sXFxcIndoaWxlLWF0dHJpYnV0ZVxcXCI6e1xcXCJiZWdpblxcXCI6XFxcIig/aSlcXFxcXFxcXEdcXFxcXFxcXHMqXFxcXFxcXFxiKHdoaWxlKVxcXFxcXFxcYlxcXCIsXFxcImJlZ2luQ2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwia2V5d29yZC5jb250cm9sLndoaWxlLmZvcnRyYW5cXFwifX0sXFxcImVuZFxcXCI6XFxcIig/PVtcXFxcXFxcXG4hO10pXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjcGFyZW50aGVzZXNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjaW52YWxpZC13b3JkXFxcIn1dfSxcXFwid29yZFxcXCI6e1xcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCIoP2kpKD86XFxcXFxcXFxHfCg/PD0lKSlcXFxcXFxcXHMqXFxcXFxcXFxiKFthLXpdXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwifV19fSxcXFwic2NvcGVOYW1lXFxcIjpcXFwic291cmNlLmZvcnRyYW4uZnJlZVxcXCIsXFxcImFsaWFzZXNcXFwiOltcXFwiZjkwXFxcIixcXFwiZjk1XFxcIixcXFwiZjAzXFxcIixcXFwiZjA4XFxcIixcXFwiZjE4XFxcIl19XCIpKVxuXG5leHBvcnQgZGVmYXVsdCBbXG5sYW5nXG5dXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@shikijs/langs/dist/fortran-free-form.mjs\n"));

/***/ })

}]);