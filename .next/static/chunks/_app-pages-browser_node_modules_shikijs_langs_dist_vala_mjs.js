"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_shikijs_langs_dist_vala_mjs"],{

/***/ "(app-pages-browser)/./node_modules/@shikijs/langs/dist/vala.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@shikijs/langs/dist/vala.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst lang = Object.freeze(JSON.parse(\"{\\\"displayName\\\":\\\"Vala\\\",\\\"fileTypes\\\":[\\\"vala\\\",\\\"vapi\\\",\\\"gs\\\"],\\\"name\\\":\\\"vala\\\",\\\"patterns\\\":[{\\\"include\\\":\\\"#code\\\"}],\\\"repository\\\":{\\\"code\\\":{\\\"patterns\\\":[{\\\"include\\\":\\\"#comments\\\"},{\\\"include\\\":\\\"#constants\\\"},{\\\"include\\\":\\\"#strings\\\"},{\\\"include\\\":\\\"#keywords\\\"},{\\\"include\\\":\\\"#types\\\"},{\\\"include\\\":\\\"#functions\\\"},{\\\"include\\\":\\\"#variables\\\"}]},\\\"comments\\\":{\\\"patterns\\\":[{\\\"captures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.comment.vala\\\"}},\\\"match\\\":\\\"/\\\\\\\\*\\\\\\\\*/\\\",\\\"name\\\":\\\"comment.block.empty.vala\\\"},{\\\"include\\\":\\\"text.html.javadoc\\\"},{\\\"include\\\":\\\"#comments-inline\\\"}]},\\\"comments-inline\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"/\\\\\\\\*\\\",\\\"captures\\\":{\\\"0\\\":{\\\"name\\\":\\\"punctuation.definition.comment.vala\\\"}},\\\"end\\\":\\\"\\\\\\\\*/\\\",\\\"name\\\":\\\"comment.block.vala\\\"},{\\\"captures\\\":{\\\"1\\\":{\\\"name\\\":\\\"comment.line.double-slash.vala\\\"},\\\"2\\\":{\\\"name\\\":\\\"punctuation.definition.comment.vala\\\"}},\\\"match\\\":\\\"\\\\\\\\s*((//).*$\\\\\\\\n?)\\\"}]},\\\"constants\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"\\\\\\\\b((0([Xx])\\\\\\\\h*)|(([0-9]+\\\\\\\\.?[0-9]*)|(\\\\\\\\.[0-9]+))(([Ee])([-+])?[0-9]+)?)([DFLUdflu]|UL|ul)?\\\\\\\\b\\\",\\\"name\\\":\\\"constant.numeric.vala\\\"},{\\\"match\\\":\\\"\\\\\\\\b([A-Z][0-9A-Z_]+)\\\\\\\\b\\\",\\\"name\\\":\\\"variable.other.constant.vala\\\"}]},\\\"functions\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"(\\\\\\\\w+)(?=\\\\\\\\s*(<[.\\\\\\\\s\\\\\\\\w]+>\\\\\\\\s*)?\\\\\\\\()\\\",\\\"name\\\":\\\"entity.name.function.vala\\\"}]},\\\"keywords\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=^|[^.@\\\\\\\\w])(as|do|if|in|is|not|or|and|for|get|new|out|ref|set|try|var|base|case|else|enum|lock|null|this|true|void|weak|async|break|catch|class|const|false|owned|throw|using|while|with|yield|delete|extern|inline|params|public|return|sealed|signal|sizeof|static|struct|switch|throws|typeof|unlock|default|dynamic|ensures|finally|foreach|private|unowned|virtual|abstract|continue|delegate|internal|override|requires|volatile|construct|interface|namespace|protected|errordomain)\\\\\\\\b\\\",\\\"name\\\":\\\"keyword.vala\\\"},{\\\"match\\\":\\\"(?<=^|[^.@\\\\\\\\w])(bool|double|float|unichar2??|char|uchar|int|uint|long|ulong|short|ushort|size_t|ssize_t|string|string16|string32|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64|va_list|time_t)\\\\\\\\b\\\",\\\"name\\\":\\\"keyword.vala\\\"},{\\\"match\\\":\\\"(#(?:if|elif|else|endif))\\\",\\\"name\\\":\\\"keyword.vala\\\"}]},\\\"strings\\\":{\\\"patterns\\\":[{\\\"begin\\\":\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\",\\\"end\\\":\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\",\\\"name\\\":\\\"string.quoted.triple.vala\\\"},{\\\"begin\\\":\\\"@\\\\\\\"\\\",\\\"end\\\":\\\"\\\\\\\"\\\",\\\"name\\\":\\\"string.quoted.interpolated.vala\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"\\\\\\\\\\\\\\\\.\\\",\\\"name\\\":\\\"constant.character.escape.vala\\\"},{\\\"match\\\":\\\"\\\\\\\\$\\\\\\\\w+\\\",\\\"name\\\":\\\"constant.character.escape.vala\\\"},{\\\"match\\\":\\\"\\\\\\\\$\\\\\\\\(([^()]|\\\\\\\\(([^()]|\\\\\\\\([^)]*\\\\\\\\))*\\\\\\\\))*\\\\\\\\)\\\",\\\"name\\\":\\\"constant.character.escape.vala\\\"}]},{\\\"begin\\\":\\\"\\\\\\\"\\\",\\\"end\\\":\\\"\\\\\\\"\\\",\\\"name\\\":\\\"string.quoted.double.vala\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"\\\\\\\\\\\\\\\\.\\\",\\\"name\\\":\\\"constant.character.escape.vala\\\"}]},{\\\"begin\\\":\\\"'\\\",\\\"end\\\":\\\"'\\\",\\\"name\\\":\\\"string.quoted.single.vala\\\",\\\"patterns\\\":[{\\\"match\\\":\\\"\\\\\\\\\\\\\\\\.\\\",\\\"name\\\":\\\"constant.character.escape.vala\\\"}]},{\\\"match\\\":\\\"/((\\\\\\\\\\\\\\\\/)|([^/]))*/(?=\\\\\\\\s*[\\\\\\\\n),.;])\\\",\\\"name\\\":\\\"string.regexp.vala\\\"}]},\\\"types\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"(?<=^|[^.@\\\\\\\\w])(bool|double|float|unichar2??|char|uchar|int|uint|long|ulong|short|ushort|size_t|ssize_t|string|string16|string32|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64|va_list|time_t)\\\\\\\\b\\\",\\\"name\\\":\\\"storage.type.primitive.vala\\\"},{\\\"match\\\":\\\"\\\\\\\\b([A-Z]+\\\\\\\\w*)\\\\\\\\b\\\",\\\"name\\\":\\\"entity.name.type.vala\\\"}]},\\\"variables\\\":{\\\"patterns\\\":[{\\\"match\\\":\\\"\\\\\\\\b([_a-z]+\\\\\\\\w*)\\\\\\\\b\\\",\\\"name\\\":\\\"variable.other.vala\\\"}]}},\\\"scopeName\\\":\\\"source.vala\\\"}\"))\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([\nlang\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2hpa2lqcy9sYW5ncy9kaXN0L3ZhbGEubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx3Q0FBd0MsbUdBQW1HLHNCQUFzQixrQkFBa0IsVUFBVSxlQUFlLDBCQUEwQixFQUFFLDJCQUEyQixFQUFFLHlCQUF5QixFQUFFLDBCQUEwQixFQUFFLHVCQUF1QixFQUFFLDJCQUEyQixFQUFFLDJCQUEyQixFQUFFLGVBQWUsZUFBZSxjQUFjLE9BQU8sa0RBQWtELGtFQUFrRSxFQUFFLGtDQUFrQyxFQUFFLGlDQUFpQyxFQUFFLHNCQUFzQixlQUFlLG1DQUFtQyxPQUFPLGtEQUFrRCxvREFBb0QsRUFBRSxjQUFjLE9BQU8sNENBQTRDLFFBQVEsa0RBQWtELHFDQUFxQyxFQUFFLGdCQUFnQixlQUFlLDJKQUEySixFQUFFLG9GQUFvRixFQUFFLGdCQUFnQixlQUFlLHNHQUFzRyxFQUFFLGVBQWUsZUFBZSwrZ0JBQStnQixFQUFFLDhQQUE4UCxFQUFFLGtFQUFrRSxFQUFFLGNBQWMsZUFBZSwyRkFBMkYsRUFBRSxpR0FBaUcsb0VBQW9FLEVBQUUsc0VBQXNFLEVBQUUscUhBQXFILEVBQUUsRUFBRSwwRkFBMEYsb0VBQW9FLEVBQUUsRUFBRSxvRkFBb0Ysb0VBQW9FLEVBQUUsRUFBRSxzREFBc0QscUNBQXFDLEVBQUUsWUFBWSxlQUFlLDZRQUE2USxFQUFFLDBFQUEwRSxFQUFFLGdCQUFnQixlQUFlLHlFQUF5RSxHQUFHLCtCQUErQjs7QUFFam1ILGlFQUFlO0FBQ2Y7QUFDQSxDQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEJIQVJHQVZcXERvd25sb2Fkc1xcZ3B0LWNsb25lXFxub2RlX21vZHVsZXNcXEBzaGlraWpzXFxsYW5nc1xcZGlzdFxcdmFsYS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbGFuZyA9IE9iamVjdC5mcmVlemUoSlNPTi5wYXJzZShcIntcXFwiZGlzcGxheU5hbWVcXFwiOlxcXCJWYWxhXFxcIixcXFwiZmlsZVR5cGVzXFxcIjpbXFxcInZhbGFcXFwiLFxcXCJ2YXBpXFxcIixcXFwiZ3NcXFwiXSxcXFwibmFtZVxcXCI6XFxcInZhbGFcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb2RlXFxcIn1dLFxcXCJyZXBvc2l0b3J5XFxcIjp7XFxcImNvZGVcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29tbWVudHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjY29uc3RhbnRzXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3N0cmluZ3NcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIja2V5d29yZHNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjdHlwZXNcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCIjZnVuY3Rpb25zXFxcIn0se1xcXCJpbmNsdWRlXFxcIjpcXFwiI3ZhcmlhYmxlc1xcXCJ9XX0sXFxcImNvbW1lbnRzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJjYXB0dXJlc1xcXCI6e1xcXCIwXFxcIjp7XFxcIm5hbWVcXFwiOlxcXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQudmFsYVxcXCJ9fSxcXFwibWF0Y2hcXFwiOlxcXCIvXFxcXFxcXFwqXFxcXFxcXFwqL1xcXCIsXFxcIm5hbWVcXFwiOlxcXCJjb21tZW50LmJsb2NrLmVtcHR5LnZhbGFcXFwifSx7XFxcImluY2x1ZGVcXFwiOlxcXCJ0ZXh0Lmh0bWwuamF2YWRvY1xcXCJ9LHtcXFwiaW5jbHVkZVxcXCI6XFxcIiNjb21tZW50cy1pbmxpbmVcXFwifV19LFxcXCJjb21tZW50cy1pbmxpbmVcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiL1xcXFxcXFxcKlxcXCIsXFxcImNhcHR1cmVzXFxcIjp7XFxcIjBcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uY29tbWVudC52YWxhXFxcIn19LFxcXCJlbmRcXFwiOlxcXCJcXFxcXFxcXCovXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbW1lbnQuYmxvY2sudmFsYVxcXCJ9LHtcXFwiY2FwdHVyZXNcXFwiOntcXFwiMVxcXCI6e1xcXCJuYW1lXFxcIjpcXFwiY29tbWVudC5saW5lLmRvdWJsZS1zbGFzaC52YWxhXFxcIn0sXFxcIjJcXFwiOntcXFwibmFtZVxcXCI6XFxcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uY29tbWVudC52YWxhXFxcIn19LFxcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxccyooKC8vKS4qJFxcXFxcXFxcbj8pXFxcIn1dfSxcXFwiY29uc3RhbnRzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcYigoMChbWHhdKVxcXFxcXFxcaCopfCgoWzAtOV0rXFxcXFxcXFwuP1swLTldKil8KFxcXFxcXFxcLlswLTldKykpKChbRWVdKShbLStdKT9bMC05XSspPykoW0RGTFVkZmx1XXxVTHx1bCk/XFxcXFxcXFxiXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50Lm51bWVyaWMudmFsYVxcXCJ9LHtcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXGIoW0EtWl1bMC05QS1aX10rKVxcXFxcXFxcYlxcXCIsXFxcIm5hbWVcXFwiOlxcXCJ2YXJpYWJsZS5vdGhlci5jb25zdGFudC52YWxhXFxcIn1dfSxcXFwiZnVuY3Rpb25zXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIihcXFxcXFxcXHcrKSg/PVxcXFxcXFxccyooPFsuXFxcXFxcXFxzXFxcXFxcXFx3XSs+XFxcXFxcXFxzKik/XFxcXFxcXFwoKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJlbnRpdHkubmFtZS5mdW5jdGlvbi52YWxhXFxcIn1dfSxcXFwia2V5d29yZHNcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiKD88PV58W14uQFxcXFxcXFxcd10pKGFzfGRvfGlmfGlufGlzfG5vdHxvcnxhbmR8Zm9yfGdldHxuZXd8b3V0fHJlZnxzZXR8dHJ5fHZhcnxiYXNlfGNhc2V8ZWxzZXxlbnVtfGxvY2t8bnVsbHx0aGlzfHRydWV8dm9pZHx3ZWFrfGFzeW5jfGJyZWFrfGNhdGNofGNsYXNzfGNvbnN0fGZhbHNlfG93bmVkfHRocm93fHVzaW5nfHdoaWxlfHdpdGh8eWllbGR8ZGVsZXRlfGV4dGVybnxpbmxpbmV8cGFyYW1zfHB1YmxpY3xyZXR1cm58c2VhbGVkfHNpZ25hbHxzaXplb2Z8c3RhdGljfHN0cnVjdHxzd2l0Y2h8dGhyb3dzfHR5cGVvZnx1bmxvY2t8ZGVmYXVsdHxkeW5hbWljfGVuc3VyZXN8ZmluYWxseXxmb3JlYWNofHByaXZhdGV8dW5vd25lZHx2aXJ0dWFsfGFic3RyYWN0fGNvbnRpbnVlfGRlbGVnYXRlfGludGVybmFsfG92ZXJyaWRlfHJlcXVpcmVzfHZvbGF0aWxlfGNvbnN0cnVjdHxpbnRlcmZhY2V8bmFtZXNwYWNlfHByb3RlY3RlZHxlcnJvcmRvbWFpbilcXFxcXFxcXGJcXFwiLFxcXCJuYW1lXFxcIjpcXFwia2V5d29yZC52YWxhXFxcIn0se1xcXCJtYXRjaFxcXCI6XFxcIig/PD1efFteLkBcXFxcXFxcXHddKShib29sfGRvdWJsZXxmbG9hdHx1bmljaGFyMj8/fGNoYXJ8dWNoYXJ8aW50fHVpbnR8bG9uZ3x1bG9uZ3xzaG9ydHx1c2hvcnR8c2l6ZV90fHNzaXplX3R8c3RyaW5nfHN0cmluZzE2fHN0cmluZzMyfHZvaWR8c2lnbmFsfGludDh8aW50MTZ8aW50MzJ8aW50NjR8dWludDh8dWludDE2fHVpbnQzMnx1aW50NjR8dmFfbGlzdHx0aW1lX3QpXFxcXFxcXFxiXFxcIixcXFwibmFtZVxcXCI6XFxcImtleXdvcmQudmFsYVxcXCJ9LHtcXFwibWF0Y2hcXFwiOlxcXCIoIyg/OmlmfGVsaWZ8ZWxzZXxlbmRpZikpXFxcIixcXFwibmFtZVxcXCI6XFxcImtleXdvcmQudmFsYVxcXCJ9XX0sXFxcInN0cmluZ3NcXFwiOntcXFwicGF0dGVybnNcXFwiOlt7XFxcImJlZ2luXFxcIjpcXFwiXFxcXFxcXCJcXFxcXFxcIlxcXFxcXFwiXFxcIixcXFwiZW5kXFxcIjpcXFwiXFxcXFxcXCJcXFxcXFxcIlxcXFxcXFwiXFxcIixcXFwibmFtZVxcXCI6XFxcInN0cmluZy5xdW90ZWQudHJpcGxlLnZhbGFcXFwifSx7XFxcImJlZ2luXFxcIjpcXFwiQFxcXFxcXFwiXFxcIixcXFwiZW5kXFxcIjpcXFwiXFxcXFxcXCJcXFwiLFxcXCJuYW1lXFxcIjpcXFwic3RyaW5nLnF1b3RlZC5pbnRlcnBvbGF0ZWQudmFsYVxcXCIsXFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcXFxcXFxcXFwuXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUudmFsYVxcXCJ9LHtcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXCRcXFxcXFxcXHcrXFxcIixcXFwibmFtZVxcXCI6XFxcImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUudmFsYVxcXCJ9LHtcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXCRcXFxcXFxcXCgoW14oKV18XFxcXFxcXFwoKFteKCldfFxcXFxcXFxcKFteKV0qXFxcXFxcXFwpKSpcXFxcXFxcXCkpKlxcXFxcXFxcKVxcXCIsXFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5jaGFyYWN0ZXIuZXNjYXBlLnZhbGFcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCJcXFxcXFxcIlxcXCIsXFxcImVuZFxcXCI6XFxcIlxcXFxcXFwiXFxcIixcXFwibmFtZVxcXCI6XFxcInN0cmluZy5xdW90ZWQuZG91YmxlLnZhbGFcXFwiLFxcXCJwYXR0ZXJuc1xcXCI6W3tcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXFxcXFxcXFxcLlxcXCIsXFxcIm5hbWVcXFwiOlxcXCJjb25zdGFudC5jaGFyYWN0ZXIuZXNjYXBlLnZhbGFcXFwifV19LHtcXFwiYmVnaW5cXFwiOlxcXCInXFxcIixcXFwiZW5kXFxcIjpcXFwiJ1xcXCIsXFxcIm5hbWVcXFwiOlxcXCJzdHJpbmcucXVvdGVkLnNpbmdsZS52YWxhXFxcIixcXFwicGF0dGVybnNcXFwiOlt7XFxcIm1hdGNoXFxcIjpcXFwiXFxcXFxcXFxcXFxcXFxcXC5cXFwiLFxcXCJuYW1lXFxcIjpcXFwiY29uc3RhbnQuY2hhcmFjdGVyLmVzY2FwZS52YWxhXFxcIn1dfSx7XFxcIm1hdGNoXFxcIjpcXFwiLygoXFxcXFxcXFxcXFxcXFxcXC8pfChbXi9dKSkqLyg/PVxcXFxcXFxccypbXFxcXFxcXFxuKSwuO10pXFxcIixcXFwibmFtZVxcXCI6XFxcInN0cmluZy5yZWdleHAudmFsYVxcXCJ9XX0sXFxcInR5cGVzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIig/PD1efFteLkBcXFxcXFxcXHddKShib29sfGRvdWJsZXxmbG9hdHx1bmljaGFyMj8/fGNoYXJ8dWNoYXJ8aW50fHVpbnR8bG9uZ3x1bG9uZ3xzaG9ydHx1c2hvcnR8c2l6ZV90fHNzaXplX3R8c3RyaW5nfHN0cmluZzE2fHN0cmluZzMyfHZvaWR8c2lnbmFsfGludDh8aW50MTZ8aW50MzJ8aW50NjR8dWludDh8dWludDE2fHVpbnQzMnx1aW50NjR8dmFfbGlzdHx0aW1lX3QpXFxcXFxcXFxiXFxcIixcXFwibmFtZVxcXCI6XFxcInN0b3JhZ2UudHlwZS5wcmltaXRpdmUudmFsYVxcXCJ9LHtcXFwibWF0Y2hcXFwiOlxcXCJcXFxcXFxcXGIoW0EtWl0rXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJuYW1lXFxcIjpcXFwiZW50aXR5Lm5hbWUudHlwZS52YWxhXFxcIn1dfSxcXFwidmFyaWFibGVzXFxcIjp7XFxcInBhdHRlcm5zXFxcIjpbe1xcXCJtYXRjaFxcXCI6XFxcIlxcXFxcXFxcYihbX2Etel0rXFxcXFxcXFx3KilcXFxcXFxcXGJcXFwiLFxcXCJuYW1lXFxcIjpcXFwidmFyaWFibGUub3RoZXIudmFsYVxcXCJ9XX19LFxcXCJzY29wZU5hbWVcXFwiOlxcXCJzb3VyY2UudmFsYVxcXCJ9XCIpKVxuXG5leHBvcnQgZGVmYXVsdCBbXG5sYW5nXG5dXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@shikijs/langs/dist/vala.mjs\n"));

/***/ })

}]);